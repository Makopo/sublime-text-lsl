{
	"scope": "meta.function.body.lsl, meta.event.body.lsl",
	"completionSets":
	[
		{
			"name": "comment.block.source.lsl",
			"scope": "source.lsl",
			"begin": "/*",
			"end": "*/"
		},
		{
			"name": "comment.line.double-slash.source.lsl",
			"scope": "source.lsl",
			"match": "(//).*$\n?"
		},
		{
			"name": "constant.language.float.source.lsl",
			"scope": "source.lsl",
			"strings": [
				"DEG_TO_RAD",
				"PI",
				"PI_BY_TWO",
				"RAD_TO_DEG",
				"SQRT2",
				"TWO_PI"
			]
		},
		{
			"name": "constant.language.integer.source.lsl",
			"scope": "source.lsl",
			"strings": [
				"ACTIVE",
				"AGENT_ALWAYS_RUN",
				"AGENT_ATTACHMENTS",
				"AGENT_AUTOPILOT",
				"AGENT_AWAY",
				"AGENT_BUSY",
				"AGENT_BY_LEGACY_NAME",
				"AGENT_BY_USERNAME",
				"AGENT_CROUCHING",
				"AGENT_FLYING",
				"AGENT_IN_AIR",
				"AGENT_LIST_PARCEL",
				"AGENT_LIST_PARCEL_OWNER",
				"AGENT_LIST_REGION",
				"AGENT_MOUSELOOK",
				"AGENT_ON_OBJECT",
				"AGENT_SCRIPTED",
				"AGENT_SITTING",
				"AGENT_TYPING",
				"AGENT_WALKING",
				"ALL_SIDES",
				"ANIM_ON",
				"ATTACH_AVATAR_CENTER",
				"ATTACH_BACK",
				"ATTACH_BELLY",
				"ATTACH_CHEST",
				"ATTACH_CHIN",
				"ATTACH_HEAD",
				"ATTACH_HUD_BOTTOM",
				"ATTACH_HUD_BOTTOM_LEFT",
				"ATTACH_HUD_BOTTOM_RIGHT",
				"ATTACH_HUD_CENTER_1",
				"ATTACH_HUD_CENTER_2",
				"ATTACH_HUD_TOP_CENTER",
				"ATTACH_HUD_TOP_LEFT",
				"ATTACH_HUD_TOP_RIGHT",
				"ATTACH_LEAR",
				"ATTACH_LEFT_PEC",
				"ATTACH_LEYE",
				"ATTACH_LFOOT",
				"ATTACH_LHAND",
				"ATTACH_LHIP",
				"ATTACH_LLARM",
				"ATTACH_LLLEG",
				"ATTACH_LSHOULDER",
				"ATTACH_LUARM",
				"ATTACH_LULEG",
				"ATTACH_MOUTH",
				"ATTACH_NECK",
				"ATTACH_NOSE",
				"ATTACH_PELVIS",
				"ATTACH_REAR",
				"ATTACH_REYE",
				"ATTACH_RFOOT",
				"ATTACH_RHAND",
				"ATTACH_RHIP",
				"ATTACH_RIGHT_PEC",
				"ATTACH_RLARM",
				"ATTACH_RLLEG",
				"ATTACH_RSHOULDER",
				"ATTACH_RUARM",
				"ATTACH_RULEG",
				"AVOID_CHARACTERS",
				"AVOID_DYNAMIC_OBSTACLES",
				"AVOID_NONE",
				{ "string": "CAMERA_ACTIVE", "append": ", ${1:integer isActive}, " },
				{ "string": "CAMERA_BEHINDNESS_ANGLE", "append": ", ${1:float degrees}, " },
				{ "string": "CAMERA_BEHINDNESS_LAG", "append": ", ${1:float seconds}, " },
				{ "string": "CAMERA_DISTANCE", "append": ", ${1:float meters}, " },
				{ "string": "CAMERA_FOCUS", "append": ", ${1:vector position}, " },
				{ "string": "CAMERA_FOCUS_LAG", "append": ", ${1:float seconds}, " },
				{ "string": "CAMERA_FOCUS_LOCKED", "append": ", ${1:integer isLocked}, " },
				{ "string": "CAMERA_FOCUS_OFFSET", "append": ", ${1:vector meters}, " },
				{ "string": "CAMERA_FOCUS_THRESHOLD", "append": ", ${1:float meters}, " },
				{ "string": "CAMERA_PITCH", "append": ", ${1:float degrees}, " },
				{ "string": "CAMERA_POSITION", "append": ", ${1:vector position}, " },
				{ "string": "CAMERA_POSITION_LAG", "append": ", ${1:float seconds}, " },
				{ "string": "CAMERA_POSITION_LOCKED", "append": ", ${1:integer isLocked}, " },
				{ "string": "CAMERA_POSITION_THRESHOLD", "append": ", ${1:float meters}, " },
				"CHANGED_ALLOWED_DROP",
				"CHANGED_COLOR",
				"CHANGED_INVENTORY",
				"CHANGED_LINK",
				"CHANGED_MEDIA",
				"CHANGED_OWNER",
				"CHANGED_REGION",
				"CHANGED_REGION_START",
				"CHANGED_SCALE",
				"CHANGED_SHAPE",
				"CHANGED_TELEPORT",
				"CHANGED_TEXTURE",
				"CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES",
				{ "string": "CHARACTER_AVOIDANCE_MODE", "append": ", ${1:integer flags}, " },
				"CHARACTER_CMD_JUMP",
				"CHARACTER_CMD_SMOOTH_STOP",
				"CHARACTER_CMD_STOP",
				{ "string": "CHARACTER_DESIRED_SPEED", "append": ", ${1:float speed}, " },
				{ "string": "CHARACTER_DESIRED_TURN_SPEED", "append": ", ${1:float speed}, " },
				{ "string": "CHARACTER_LENGTH", "append": ", ${1:float length}, " },
				"CHARACTER_MAX_ACCEL",
				"CHARACTER_MAX_DECEL",
				"CHARACTER_MAX_SPEED",
				{ "string": "CHARACTER_MAX_TURN_RADIUS", "append": ", ${1:float radius}, " },
				{ "string": "CHARACTER_ORIENTATION", "append": ", ${1:integer orientation}, " },
				{ "string": "CHARACTER_RADIUS", "append": ", ${1:float radius}, " },
				{ "string": "CHARACTER_TYPE", "append": ", ${1:integer type}, " },
				"CHARACTER_TYPE_A",
				"CHARACTER_TYPE_B",
				"CHARACTER_TYPE_C",
				"CHARACTER_TYPE_D",
				"CHARACTER_TYPE_NONE",
				"CLICK_ACTION_BUY",
				"CLICK_ACTION_NONE",
				"CLICK_ACTION_OPEN",
				"CLICK_ACTION_OPEN_MEDIA",
				"CLICK_ACTION_PAY",
				"CLICK_ACTION_PLAY",
				"CLICK_ACTION_SIT",
				"CLICK_ACTION_TOUCH",
				"CONTENT_TYPE_ATOM",
				"CONTENT_TYPE_FORM",
				"CONTENT_TYPE_HTML",
				"CONTENT_TYPE_JSON",
				"CONTENT_TYPE_LLSD",
				"CONTENT_TYPE_RSS",
				"CONTENT_TYPE_TEXT",
				"CONTENT_TYPE_XHTML",
				"CONTENT_TYPE_XML",
				"CONTROL_BACK",
				"CONTROL_DOWN",
				"CONTROL_FWD",
				"CONTROL_LBUTTON",
				"CONTROL_LEFT",
				"CONTROL_ML_LBUTTON",
				"CONTROL_RIGHT",
				"CONTROL_ROT_LEFT",
				"CONTROL_ROT_RIGHT",
				"CONTROL_UP",
				"DATA_BORN",
				"DATA_NAME",
				"DATA_ONLINE",
				"DATA_PAYINFO",
				"DATA_SIM_POS",
				"DATA_SIM_RATING",
				"DATA_SIM_STATUS",
				"DEBUG_CHANNEL",
				"DENSITY",
				"ESTATE_ACCESS_ALLOWED_AGENT_ADD",
				"ESTATE_ACCESS_ALLOWED_AGENT_REMOVE",
				"ESTATE_ACCESS_ALLOWED_GROUP_ADD",
				"ESTATE_ACCESS_ALLOWED_GROUP_REMOVE",
				"ESTATE_ACCESS_BANNED_AGENT_ADD",
				"ESTATE_ACCESS_BANNED_AGENT_REMOVE",
				"FALSE",
				"FORCE_DIRECT_PATH",
				"FRICTION",
				"GCNP_RADIUS",
				"GCNP_STATIC",
				"GRAVITY_MULTIPLIER",
				"HORIZONTAL",
				{ "string": "HTTP_BODY_MAXLENGTH", "append": ", ${1:integer length}, " },
				"HTTP_BODY_TRUNCATED",
				{ "string": "HTTP_CUSTOM_HEADER", "append": ", ${1:string name}, ${2:string value}, " },
				{ "string": "HTTP_METHOD", "append": ", ${1:string method}, " },
				{ "string": "HTTP_MIMETYPE", "append": ", ${1:string mimeType}, " },
				{ "string": "HTTP_PRAGMA_NO_CACHE", "append": ", ${1:integer send_header}, " },
				{ "string": "HTTP_VERBOSE_THROTTLE", "append": ", ${1:integer noisy}, " },
				{ "string": "HTTP_VERIFY_CERT", "append": ", ${1:integer verify}, " },
				"INVENTORY_ALL",
				"INVENTORY_ANIMATION",
				"INVENTORY_BODYPART",
				"INVENTORY_CLOTHING",
				"INVENTORY_GESTURE",
				"INVENTORY_LANDMARK",
				"INVENTORY_NONE",
				"INVENTORY_NOTECARD",
				"INVENTORY_OBJECT",
				"INVENTORY_SCRIPT",
				"INVENTORY_SOUND",
				"INVENTORY_TEXTURE",
				"JSON_APPEND",
				"KFM_CMD_PAUSE",
				"KFM_CMD_PLAY",
				"KFM_CMD_SET_MODE",
				"KFM_CMD_STOP",
				"KFM_COMMAND",
				"KFM_DATA",
				"KFM_FORWARD",
				"KFM_LOOP",
				"KFM_MODE",
				"KFM_PING_PONG",
				"KFM_REVERSE",
				"KFM_ROTATION",
				"KFM_TRANSLATION",
				"LAND_LEVEL",
				"LAND_LOWER",
				"LAND_NOISE",
				"LAND_RAISE",
				"LAND_REVERT",
				"LAND_SMOOTH",
				"LINK_ALL_CHILDREN",
				"LINK_ALL_OTHERS",
				"LINK_ROOT",
				"LINK_SET",
				"LINK_THIS",
				"LIST_STAT_GEOMETRIC_MEAN",
				"LIST_STAT_MAX",
				"LIST_STAT_MEAN",
				"LIST_STAT_MEDIAN",
				"LIST_STAT_MIN",
				"LIST_STAT_NUM_COUNT",
				"LIST_STAT_RANGE",
				"LIST_STAT_STD_DEV",
				"LIST_STAT_SUM",
				"LIST_STAT_SUM_SQUARES",
				"LOOP",
				"MASK_BASE",
				"MASK_EVERYONE",
				"MASK_GROUP",
				"MASK_NEXT",
				"MASK_OWNER",
				"OBJECT_ATTACHED_POINT",
				"OBJECT_CHARACTER_TIME",
				"OBJECT_CREATOR",
				"OBJECT_DESC",
				"OBJECT_GROUP",
				"OBJECT_NAME",
				"OBJECT_OWNER",
				"OBJECT_PATHFINDING_TYPE",
				"OBJECT_PHANTOM",
				"OBJECT_PHYSICS",
				"OBJECT_PHYSICS_COST",
				"OBJECT_POS",
				"OBJECT_PRIM_EQUIVALENCE",
				"OBJECT_ROOT",
				"OBJECT_ROT",
				"OBJECT_RUNNING_SCRIPT_COUNT",
				"OBJECT_SCRIPT_MEMORY",
				"OBJECT_SCRIPT_TIME",
				"OBJECT_SERVER_COST",
				"OBJECT_STREAMING_COST",
				"OBJECT_TEMP_ON_REZ",
				"OBJECT_TOTAL_SCRIPT_COUNT",
				"OBJECT_UNKNOWN_DETAIL",
				"OBJECT_VELOCITY",
				"OPT_AVATAR",
				"OPT_CHARACTER",
				"OPT_EXCLUSION_VOLUME",
				"OPT_LEGACY_LINKSET",
				"OPT_MATERIAL_VOLUME",
				"OPT_OTHER",
				"OPT_STATIC_OBSTACLE",
				"OPT_WALKABLE",
				"PARCEL_COUNT_GROUP",
				"PARCEL_COUNT_OTHER",
				"PARCEL_COUNT_OWNER",
				"PARCEL_COUNT_SELECTED",
				"PARCEL_COUNT_TEMP",
				"PARCEL_COUNT_TOTAL",
				"PARCEL_DETAILS_AREA",
				"PARCEL_DETAILS_DESC",
				"PARCEL_DETAILS_GROUP",
				"PARCEL_DETAILS_ID",
				"PARCEL_DETAILS_NAME",
				"PARCEL_DETAILS_OWNER",
				"PARCEL_DETAILS_SEE_AVATARS",
				"PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY",
				"PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS",
				"PARCEL_FLAG_ALLOW_CREATE_OBJECTS",
				"PARCEL_FLAG_ALLOW_DAMAGE",
				"PARCEL_FLAG_ALLOW_FLY",
				"PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY",
				"PARCEL_FLAG_ALLOW_GROUP_SCRIPTS",
				"PARCEL_FLAG_ALLOW_LANDMARK",
				"PARCEL_FLAG_ALLOW_SCRIPTS",
				"PARCEL_FLAG_ALLOW_TERRAFORM",
				"PARCEL_FLAG_LOCAL_SOUND_ONLY",
				"PARCEL_FLAG_RESTRICT_PUSHOBJECT",
				"PARCEL_FLAG_USE_ACCESS_GROUP",
				"PARCEL_FLAG_USE_ACCESS_LIST",
				"PARCEL_FLAG_USE_BAN_LIST",
				"PARCEL_FLAG_USE_LAND_PASS_LIST",
				"PARCEL_MEDIA_COMMAND_AGENT",
				"PARCEL_MEDIA_COMMAND_AUTO_ALIGN",
				"PARCEL_MEDIA_COMMAND_DESC",
				"PARCEL_MEDIA_COMMAND_LOOP",
				"PARCEL_MEDIA_COMMAND_LOOP_SET",
				"PARCEL_MEDIA_COMMAND_PAUSE",
				"PARCEL_MEDIA_COMMAND_PLAY",
				"PARCEL_MEDIA_COMMAND_SIZE",
				"PARCEL_MEDIA_COMMAND_STOP",
				"PARCEL_MEDIA_COMMAND_TEXTURE",
				"PARCEL_MEDIA_COMMAND_TIME",
				"PARCEL_MEDIA_COMMAND_TYPE",
				"PARCEL_MEDIA_COMMAND_UNLOAD",
				"PARCEL_MEDIA_COMMAND_URL",
				"PASSIVE",
				"PATROL_PAUSE_AT_WAYPOINTS",
				"PAY_DEFAULT",
				"PAY_HIDE",
				"PAYMENT_INFO_ON_FILE",
				"PAYMENT_INFO_USED",
				"PERM_ALL",
				"PERM_COPY",
				"PERM_MODIFY",
				"PERM_MOVE",
				"PERM_TRANSFER",
				"PERMISSION_ATTACH",
				"PERMISSION_CHANGE_LINKS",
				"PERMISSION_CONTROL_CAMERA",
				"PERMISSION_DEBIT",
				"PERMISSION_OVERRIDE_ANIMATIONS",
				"PERMISSION_SILENT_ESTATE_MANAGEMENTâ€Ž",
				"PERMISSION_TAKE_CONTROLS",
				"PERMISSION_TELEPORT",
				"PERMISSION_TRACK_CAMERA",
				"PERMISSION_TRIGGER_ANIMATION",
				"PING_PONG",
				"PRIM_BUMP_BARK",
				"PRIM_BUMP_BLOBS",
				"PRIM_BUMP_BRICKS",
				"PRIM_BUMP_BRIGHT",
				"PRIM_BUMP_CHECKER",
				"PRIM_BUMP_CONCRETE",
				"PRIM_BUMP_DARK",
				"PRIM_BUMP_DISKS",
				"PRIM_BUMP_GRAVEL",
				"PRIM_BUMP_LARGETILE",
				"PRIM_BUMP_NONE",
				"PRIM_BUMP_SHINY",
				"PRIM_BUMP_SIDING",
				"PRIM_BUMP_STONE",
				"PRIM_BUMP_STUCCO",
				"PRIM_BUMP_SUCTION",
				"PRIM_BUMP_TILE",
				"PRIM_BUMP_WEAVE",
				"PRIM_BUMP_WOOD",
				"PRIM_COLOR",
				"PRIM_DESC",
				"PRIM_FLEXIBLE",
				"PRIM_FULLBRIGHT",
				"PRIM_GLOW",
				"PRIM_HOLE_CIRCLE",
				"PRIM_HOLE_DEFAULT",
				"PRIM_HOLE_SQUARE",
				"PRIM_HOLE_TRIANGLE",
				"PRIM_LINK_TARGET",
				"PRIM_MATERIAL",
				"PRIM_MATERIAL_FLESH",
				"PRIM_MATERIAL_GLASS",
				"PRIM_MATERIAL_METAL",
				"PRIM_MATERIAL_PLASTIC",
				"PRIM_MATERIAL_RUBBER",
				"PRIM_MATERIAL_STONE",
				"PRIM_MATERIAL_WOOD",
				"PRIM_MEDIA_ALT_IMAGE_ENABLE",
				"PRIM_MEDIA_AUTO_LOOP",
				"PRIM_MEDIA_AUTO_PLAY",
				"PRIM_MEDIA_AUTO_SCALE",
				"PRIM_MEDIA_AUTO_ZOOM",
				"PRIM_MEDIA_CONTROLS",
				"PRIM_MEDIA_CONTROLS_MINI",
				"PRIM_MEDIA_CONTROLS_STANDARD",
				"PRIM_MEDIA_CURRENT_URL",
				"PRIM_MEDIA_FIRST_CLICK_INTERACT",
				"PRIM_MEDIA_HEIGHT_PIXELS",
				"PRIM_MEDIA_HOME_URL",
				"PRIM_MEDIA_MAX_HEIGHT_PIXELS",
				"PRIM_MEDIA_MAX_URL_LENGTH",
				"PRIM_MEDIA_MAX_WHITELIST_COUNT",
				"PRIM_MEDIA_MAX_WHITELIST_SIZE",
				"PRIM_MEDIA_MAX_WIDTH_PIXELS",
				"PRIM_MEDIA_PARAM_MAX",
				"PRIM_MEDIA_PERM_ANYONE",
				"PRIM_MEDIA_PERM_GROUP",
				"PRIM_MEDIA_PERM_NONE",
				"PRIM_MEDIA_PERM_OWNER",
				"PRIM_MEDIA_PERMS_CONTROL",
				"PRIM_MEDIA_PERMS_INTERACT",
				"PRIM_MEDIA_WHITELIST",
				"PRIM_MEDIA_WHITELIST_ENABLE",
				"PRIM_MEDIA_WIDTH_PIXELS",
				"PRIM_NAME",
				"PRIM_OMEGA",
				"PRIM_PHANTOM",
				"PRIM_PHYSICS",
				"PRIM_PHYSICS_SHAPE_CONVEX",
				"PRIM_PHYSICS_SHAPE_NONE",
				"PRIM_PHYSICS_SHAPE_PRIM",
				"PRIM_PHYSICS_SHAPE_TYPE",
				"PRIM_POINT_LIGHT",
				"PRIM_POS_LOCAL",
				"PRIM_POSITION",
				"PRIM_ROT_LOCAL",
				"PRIM_ROTATION",
				"PRIM_SCULPT_FLAG_INVERT",
				"PRIM_SCULPT_FLAG_MIRROR",
				"PRIM_SCULPT_TYPE_CYLINDER",
				"PRIM_SCULPT_TYPE_MASK",
				"PRIM_SCULPT_TYPE_PLANE",
				"PRIM_SCULPT_TYPE_SPHERE",
				"PRIM_SCULPT_TYPE_TORUS",
				"PRIM_SHINY_HIGH",
				"PRIM_SHINY_LOW",
				"PRIM_SHINY_MEDIUM",
				"PRIM_SHINY_NONE",
				"PRIM_SIZE",
				"PRIM_SLICE",
				"PRIM_TEMP_ON_REZ",
				"PRIM_TEXGEN",
				"PRIM_TEXGEN_DEFAULT",
				"PRIM_TEXGEN_PLANAR",
				"PRIM_TEXT",
				"PRIM_TEXTURE",
				"PRIM_TYPE",
				"PRIM_TYPE_BOX",
				"PRIM_TYPE_CYLINDER",
				"PRIM_TYPE_PRISM",
				"PRIM_TYPE_RING",
				"PRIM_TYPE_SCULPT",
				"PRIM_TYPE_SPHERE",
				"PRIM_TYPE_TORUS",
				"PRIM_TYPE_TUBE",
				"PROFILE_NONE",
				"PROFILE_SCRIPT_MEMORY",
				"PSYS_PART_BOUNCE_MASK",
				"PSYS_PART_EMISSIVE_MASK",
				"PSYS_PART_END_ALPHA",
				"PSYS_PART_END_COLOR",
				"PSYS_PART_END_SCALE",
				"PSYS_PART_FLAGS",
				"PSYS_PART_FOLLOW_SRC_MASK",
				"PSYS_PART_FOLLOW_VELOCITY_MASK",
				"PSYS_PART_INTERP_COLOR_MASK",
				"PSYS_PART_INTERP_SCALE_MASK",
				"PSYS_PART_MAX_AGE",
				"PSYS_PART_START_ALPHA",
				"PSYS_PART_START_COLOR",
				"PSYS_PART_START_SCALE",
				"PSYS_PART_TARGET_LINEAR_MASK",
				"PSYS_PART_TARGET_POS_MASK",
				"PSYS_PART_WIND_MASK",
				"PSYS_SRC_ACCEL",
				"PSYS_SRC_ANGLE_BEGIN",
				"PSYS_SRC_ANGLE_END",
				"PSYS_SRC_BURST_PART_COUNT",
				"PSYS_SRC_BURST_RADIUS",
				"PSYS_SRC_BURST_RATE",
				"PSYS_SRC_BURST_SPEED_MAX",
				"PSYS_SRC_BURST_SPEED_MIN",
				"PSYS_SRC_MAX_AGE",
				"PSYS_SRC_OMEGA",
				"PSYS_SRC_PATTERN",
				"PSYS_SRC_PATTERN_ANGLE",
				"PSYS_SRC_PATTERN_ANGLE_CONE",
				"PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY",
				"PSYS_SRC_PATTERN_DROP",
				"PSYS_SRC_PATTERN_EXPLODE",
				"PSYS_SRC_TARGET_KEY",
				"PSYS_SRC_TEXTURE",
				"PU_EVADE_HIDDEN",
				"PU_EVADE_SPOTTED",
				"PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED",
				"PU_FAILURE_INVALID_GOAL",
				"PU_FAILURE_INVALID_START",
				"PU_FAILURE_NO_NAVMESH",
				"PU_FAILURE_NO_VALID_DESTINATION",
				"PU_FAILURE_OTHER",
				"PU_FAILURE_PARCEL_UNREACHABLE",
				"PU_FAILURE_TARGET_GONE",
				"PU_FAILURE_UNREACHABLE",
				"PU_GOAL_REACHED",
				"PU_SLOWDOWN_DISTANCE_REACHED",
				"PUBLIC_CHANNEL",
				"PURSUIT_FUZZ_FACTOR",
				"PURSUIT_GOAL_TOLERANCE",
				"PURSUIT_INTERCEPT",
				"PURSUIT_OFFSET",
				{ "string": "RC_DATA_FLAGS", "append": ", ${1:integer flags}, " },
				{ "string": "RC_DETECT_PHANTOM", "append": ", ${1:integer dectedPhantom}, " },
				"RC_GET_LINK_NUM",
				"RC_GET_NORMAL",
				"RC_GET_ROOT_KEY",
				{ "string": "RC_MAX_HITS", "append": ", ${1:integer maxHits}, " },
				"RC_REJECT_AGENTS",
				"RC_REJECT_LAND",
				"RC_REJECT_NONPHYSICAL",
				"RC_REJECT_PHYSICAL",
				{ "string": "RC_REJECT_TYPES", "append": ", ${1:integer filterMask}, " },
				"RCERR_CAST_TIME_EXCEEDED",
				"RCERR_SIM_PERF_LOW",
				"RCERR_UNKNOWN",
				"REGION_FLAG_ALLOW_DAMAGE",
				"REGION_FLAG_ALLOW_DIRECT_TELEPORT",
				"REGION_FLAG_BLOCK_FLY",
				"REGION_FLAG_BLOCK_TERRAFORM",
				"REGION_FLAG_DISABLE_COLLISIONS",
				"REGION_FLAG_DISABLE_PHYSICS",
				"REGION_FLAG_FIXED_SUN",
				"REGION_FLAG_RESTRICT_PUSHOBJECT",
				"REGION_FLAG_SANDBOX",
				"REMOTE_DATA_CHANNEL",
				"REMOTE_DATA_REPLY",
				"REMOTE_DATA_REQUEST",
				"REQUIRE_LINE_OF_SIGHT",
				"RESTITUTION",
				"REVERSE",
				"ROTATE",
				"SCALE",
				"SCRIPTED",
				"SIM_STAT_PCT_CHARS_STEPPED",
				"SMOOTH",
				"STATUS_BLOCK_GRAB",
				"STATUS_BLOCK_GRAB_OBJECT",
				"STATUS_BOUNDS_ERROR",
				"STATUS_CAST_SHADOWS",
				"STATUS_DIE_AT_EDGE",
				"STATUS_INTERNAL_ERROR",
				"STATUS_MALFORMED_PARAMS",
				"STATUS_NOT_FOUND",
				"STATUS_NOT_SUPPORTED",
				"STATUS_OK",
				"STATUS_PHANTOM",
				"STATUS_PHYSICS",
				"STATUS_RETURN_AT_EDGE",
				"STATUS_ROTATE_X",
				"STATUS_ROTATE_Y",
				"STATUS_ROTATE_Z",
				"STATUS_SANDBOX",
				"STATUS_TYPE_MISMATCH",
				"STATUS_WHITELIST_FAILED",
				"STRING_TRIM",
				"STRING_TRIM_HEAD",
				"STRING_TRIM_TAIL",
				"TOUCH_INVALID_FACE",
				"TRAVERSAL_TYPE",
				"TRAVERSAL_TYPE_FAST",
				"TRAVERSAL_TYPE_NONE",
				"TRAVERSAL_TYPE_SLOW",
				"TRUE",
				"TYPE_FLOAT",
				"TYPE_INTEGER",
				"TYPE_INVALID",
				"TYPE_KEY",
				"TYPE_ROTATION",
				"TYPE_STRING",
				"TYPE_VECTOR",
				"VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY",
				"VEHICLE_ANGULAR_DEFLECTION_TIMESCALE",
				"VEHICLE_ANGULAR_FRICTION_TIMESCALE",
				"VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE",
				"VEHICLE_ANGULAR_MOTOR_DIRECTION",
				"VEHICLE_ANGULAR_MOTOR_TIMESCALE",
				"VEHICLE_BANKING_EFFICIENCY",
				"VEHICLE_BANKING_MIX",
				"VEHICLE_BANKING_TIMESCALE",
				"VEHICLE_BUOYANCY",
				"VEHICLE_FLAG_CAMERA_DECOUPLED",
				"VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT",
				"VEHICLE_FLAG_HOVER_TERRAIN_ONLY",
				"VEHICLE_FLAG_HOVER_UP_ONLY",
				"VEHICLE_FLAG_HOVER_WATER_ONLY",
				"VEHICLE_FLAG_LIMIT_MOTOR_UP",
				"VEHICLE_FLAG_LIMIT_ROLL_ONLY",
				"VEHICLE_FLAG_MOUSELOOK_BANK",
				"VEHICLE_FLAG_MOUSELOOK_STEER",
				"VEHICLE_FLAG_NO_DEFLECTION_UP",
				"VEHICLE_HOVER_EFFICIENCY",
				"VEHICLE_HOVER_HEIGHT",
				"VEHICLE_HOVER_TIMESCALE",
				"VEHICLE_LINEAR_DEFLECTION_EFFICIENCY",
				"VEHICLE_LINEAR_DEFLECTION_TIMESCALE",
				"VEHICLE_LINEAR_FRICTION_TIMESCALE",
				"VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE",
				"VEHICLE_LINEAR_MOTOR_DIRECTION",
				"VEHICLE_LINEAR_MOTOR_OFFSET",
				"VEHICLE_LINEAR_MOTOR_TIMESCALE",
				"VEHICLE_REFERENCE_FRAME",
				"VEHICLE_TYPE_AIRPLANE",
				"VEHICLE_TYPE_BALLOON",
				"VEHICLE_TYPE_BOAT",
				"VEHICLE_TYPE_CAR",
				"VEHICLE_TYPE_NONE",
				"VEHICLE_TYPE_SLED",
				"VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY",
				"VEHICLE_VERTICAL_ATTRACTION_TIMESCALE",
				"VERTICAL",
				"WANDER_PAUSE_AT_WAYPOINTS"
			]
		},
		{
			"name": "constant.language.quaternion.source.lsl",
			"scope": "source.lsl",
			"strings": [
				"ZERO_ROTATION"
			]
		},
		{
			"name": "constant.language.string.source.lsl",
			"scope": "source.lsl",
			"strings": [
				"EOF",
				"JSON_ARRAY",
				"JSON_FALSE",
				"JSON_INVALID",
				"JSON_NULL",
				"JSON_NUMBER",
				"JSON_OBJECT",
				"JSON_STRING",
				"JSON_TRUE",
				"NULL_KEY",
				"TEXTURE_BLANK",
				"TEXTURE_DEFAULT",
				"TEXTURE_MEDIA",
				"TEXTURE_PLYWOOD",
				"TEXTURE_TRANSPARENT",
				"URL_REQUEST_DENIED",
				"URL_REQUEST_GRANTED"
			]
		},
		{
			"name": "constant.language.vector.source.lsl",
			"scope": "source.lsl",
			"strings": [
				"TOUCH_INVALID_TEXCOORD",
				"TOUCH_INVALID_VECTOR",
				"ZERO_VECTOR"
			]
		},
		{
			"name": "invalid.deprecated.source.lsl",
			"scope": "source.lsl",
			"strings": [
				"AGENT",
				"ATTACH_LPEC",
				"ATTACH_RPEC",
				"CHARACTER_MAX_ANGULAR_ACCEL",
				"CHARACTER_MAX_ANGULAR_SPEED",
				"DATA_RATING",
				"LAND_LARGE_BRUSH",
				"LAND_MEDIUM_BRUSH",
				"LAND_SMALL_BRUSH",
				"PERMISSION_CHANGE_JOINTS",
				"PERMISSION_CHANGE_PERMISSIONS",
				"PERMISSION_RELEASE_OWNERSHIP",
				"PERMISSION_REMAP_CONTROLS",
				"PRIM_CAST_SHADOWS",
				"PRIM_MATERIAL_LIGHT",
				"PRIM_TYPE_LEGACY",
				"PSYS_SRC_INNERANGLE",
				"PSYS_SRC_OBJ_REL_MASK",
				"PSYS_SRC_OUTERANGLE",
				"VEHICLE_FLAG_NO_FLY_UP",
				"llCloud",
				"llCollisionSprite",
				"llMakeExplosion",
				"llMakeFire",
				"llMakeFountain",
				"llMakeSmoke",
				"llRemoteDataSetRegion",
				"llSound",
				"llSoundPreload",
				"llXorBase64Strings"
			]
		},
		{
			"name": "invalid.godmode.source.lsl",
			"scope": "source.lsl",
			"strings": [
				"llGodLikeRezObject",
				"llSetInventoryPermMask",
				"llSetObjectPermMask"
			]
		},
		{
			"name": "invalid.illegal.source.lsl",
			"scope": "source.lsl",
			"strings": [
				"event",
				"print"
			]
		},
		{
			"name": "invalid.unimplemented.source.lsl",
			"scope": "source.lsl",
			"strings": [
				"CHARACTER_TURN_SPEED_MULTIPLIER",
				"PRIM_PHYSICS_MATERIAL",
				"llPointAt",
				"llRefreshPrimURL",
				"llReleaseCamera",
				"llRemoteLoadScript",
				"llSetPrimURL",
				"llStopPointAt",
				"llTakeCamera"
			]
		},
		{
			"name": "support.function.event.source.lsl",
			"scope": "source.lsl",
			"defaultAppend": "()",
			"strings": [
				{ "string": "at_rot_target", "append": "(${1:integer handle}, ${2:rotation targetrot}, ${3:rotation ourrot})" },
				{ "string": "at_target", "append": "(${1:integer tnum}, ${2:vector targetpos}, ${3:vector ourpos})" },
				{ "string": "attach", "append": "(${1:key id})" },
				{ "string": "changed", "append": "(${1:integer change})" },
				{ "string": "collision", "append": "(${1:integer index})" },
				{ "string": "collision_end", "append": "(${1:integer index})" },
				{ "string": "collision_start", "append": "(${1:integer index})" },
				{ "string": "control", "append": "(${1:key id}, ${2:integer level}, ${3:integer edge})" },
				{ "string": "dataserver", "append": "(${1:key query_id}, ${2:string data})" },
				{ "string": "email", "append": "(${1:string time}, ${2:string address}, ${3:string subject}, ${4:string message}, ${5:integer num_left})" },
				{ "string": "http_request", "append": "(${1:key request_id}, ${2:string method}, ${3:string body})" },
				{ "string": "http_response", "append": "(${1:key request_id}, ${2:integer status}, ${3:list metadata}, ${4:string body})" },
				{ "string": "land_collision", "append": "(${1:vector pos})" },
				{ "string": "land_collision_end", "append": "(${1:vector pos})" },
				{ "string": "land_collision_start", "append": "(${1:vector pos})" },
				{ "string": "link_message", "append": "(${1:integer sender_num}, ${2:integer num}, ${3:string str}, ${4:key id})" },
				{ "string": "listen", "append": "(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string message})" },
				{ "string": "money", "append": "(${1:key id}, ${2:integer amount})" },
				"moving_end",
				"moving_start",
				"no_sensor",
				"not_at_rot_target",
				"not_at_target",
				{ "string": "object_rez", "append": "(${1:key id})" },
				{ "string": "on_rez", "append": "(${1:integer start_param})" },
				{ "string": "path_update", "append": "(${1:integer type}, ${2:list reserved})" },
				{ "string": "remote_data", "append": "(${1:integer event_type}, ${2:key channel}, ${3:key message_id}, ${4:string sender}, ${5:integer idata}, ${6:string sdata})" },
				{ "string": "run_time_permissions", "append": "(${1:integer perm})" },
				{ "string": "sensor", "append": "(${1:integer index})" },
				"state_entry",
				"state_exit",
				"timer",
				{ "string": "touch", "append": "(${1:integer index})" },
				{ "string": "touch_end", "append": "(${1:integer index})" },
				{ "string": "touch_start", "append": "(${1:integer index})" },
				{ "string": "transaction_result", "append": "(${1:key id}, ${2:integer success}, ${3:string data})" }
			]
		},
		{
			"name": "support.function.source.lsl",
			"scope": "source.lsl",
			"defaultAppend": "()",
			"strings": [
				{ "string": "llAbs", "append": "(${1:integer val})" },
				{ "string": "llAcos", "append": "(${1:float val})" },
				{ "string": "llAddToLandBanList", "append": "(${1:key avatar}, ${2:float hours})" },
				{ "string": "llAddToLandPassList", "append": "(${1:key avatar}, ${2:float hours})" },
				{ "string": "llAdjustSoundVolume", "append": "(${1:float volume})" },
				{ "string": "llAllowInventoryDrop", "append": "(${1:integer add})" },
				{ "string": "llAngleBetween", "append": "(${1:rotation a}, ${2:rotation b})" },
				{ "string": "llApplyImpulse", "append": "(${1:vector force}, ${2:integer local})" },
				{ "string": "llApplyRotationalImpulse", "append": "(${1:vector force}, ${2:integer local})" },
				{ "string": "llAsin", "append": "(${1:float val})" },
				{ "string": "llAtan2", "append": "(${1:float y}, ${2:float x})" },
				{ "string": "llAttachToAvatar", "append": "(${1:integer attach_point})" },
				{ "string": "llAttachToAvatarTemp", "append": "(${1:integer attach_point})" },
				{ "string": "llAvatarOnLinkSitTarget", "append": "(${1:integer link})" },
				"llAvatarOnSitTarget",
				{ "string": "llAxes2Rot", "append": "(${1:vector fwd}, ${2:vector left}, ${3:vector up})" },
				{ "string": "llAxisAngle2Rot", "append": "(${1:vector axis}, ${2:float angle})" },
				{ "string": "llBase64ToInteger", "append": "(${1:string str})" },
				{ "string": "llBase64ToString", "append": "(${1:string str})" },
				"llBreakAllLinks",
				{ "string": "llBreakLink", "append": "(${1:integer link})" },
				{ "string": "llCastRay", "append": "(${1:vector start}, ${2:vector end}, ${3:list options})" },
				{ "string": "llCeil", "append": "(${1:float val})" },
				"llClearCameraParams",
				{ "string": "llClearLinkMedia", "append": "(${1:integer link}, ${2:integer face})" },
				{ "string": "llClearPrimMedia", "append": "(${1:integer link}, ${2:integer face})" },
				{ "string": "llCloseRemoteDataChannel", "append": "(${1:key channel})" },
				{ "string": "llCloud", "append": "(${1:vector offset})" },
				{ "string": "llCollisionFilter", "append": "(${1:string name}, ${2:key id}, ${3:integer accept})" },
				{ "string": "llCollisionSound", "append": "(${1:string impact_sound}, ${2:float impact_volume})" },
				{ "string": "llCollisionSprite", "append": "(${1:string impact_sprite})" },
				{ "string": "llCos", "append": "(${1:float theta})" },
				{ "string": "llCreateCharacter", "append": "(${1:list options})" },
				{ "string": "llCreateLink", "append": "(${1:key target}, ${2:integer parent})" },
				{ "string": "llCSV2List", "append": "(${1:string src})" },
				"llDeleteCharacter",
				{ "string": "llDeleteSubList", "append": "(${1:list src}, ${2:integer start}, ${3:integer end})" },
				{ "string": "llDeleteSubString", "append": "(${1:string src}, ${2:integer start}, ${3:integer end})" },
				"llDetachFromAvatar",
				{ "string": "llDetectedGrab", "append": "(${1:integer number})" },
				{ "string": "llDetectedGroup", "append": "(${1:integer number})" },
				{ "string": "llDetectedKey", "append": "(${1:integer number})" },
				{ "string": "llDetectedLinkNumber", "append": "(${1:integer number})" },
				{ "string": "llDetectedName", "append": "(${1:integer number})" },
				{ "string": "llDetectedOwner", "append": "(${1:integer number})" },
				{ "string": "llDetectedPos", "append": "(${1:integer number})" },
				{ "string": "llDetectedRot", "append": "(${1:integer number})" },
				{ "string": "llDetectedTouchBinormal", "append": "(${1:integer number})" },
				{ "string": "llDetectedTouchFace", "append": "(${1:integer number})" },
				{ "string": "llDetectedTouchNormal", "append": "(${1:integer number})" },
				{ "string": "llDetectedTouchPos", "append": "(${1:integer number})" },
				{ "string": "llDetectedTouchST", "append": "(${1:integer number})" },
				{ "string": "llDetectedTouchUV", "append": "(${1:integer number})" },
				{ "string": "llDetectedType", "append": "(${1:integer number})" },
				{ "string": "llDetectedVel", "append": "(${1:integer number})" },
				{ "string": "llDialog", "append": "(${1:key avatar}, ${2:string message}, ${3:list buttons}, ${4:integer channel})" },
				"llDie",
				{ "string": "llDumpList2String", "append": "(${1:list src}, ${2:string separator})" },
				{ "string": "llEdgeOfWorld", "append": "(${1:vector pos}, ${2:vector dir})" },
				{ "string": "llEjectFromLand", "append": "(${1:key avatar})" },
				{ "string": "llEmail", "append": "(${1:string address}, ${2:string subject}, ${3:string message})" },
				{ "string": "llEscapeURL", "append": "(${1:string url})" },
				{ "string": "llEuler2Rot", "append": "(${1:vector v})" },
				{ "string": "llExecCharacterCmd", "append": "(${1:integer command}, ${2:list options})" },
				{ "string": "llEvade", "append": "(${1:key target}, ${2:list options})" },
				{ "string": "llFabs", "append": "(${1:float val})" },
				{ "string": "llFleeFrom", "append": "(${1:vector position}, ${2:float distance}, ${3:list options})" },
				{ "string": "llFloor", "append": "(${1:float val})" },
				{ "string": "llForceMouselook", "append": "(${1:integer mouselook})" },
				{ "string": "llFrand", "append": "(${1:float mag})" },
				"llGenerateKey",
				"llGetAccel",
				{ "string": "llGetAgentInfo", "append": "(${1:key id})" },
				{ "string": "llGetAgentLanguage", "append": "(${1:key avatar})" },
				{ "string": "llGetAgentList", "append": "(${1:integer scope}, ${2:list options})" },
				{ "string": "llGetAgentSize", "append": "(${1:key avatar})" },
				{ "string": "llGetAlpha", "append": "(${1:integer face})" },
				"llGetAndResetTime",
				{ "string": "llGetAnimation", "append": "(${1:key id})" },
				{ "string": "llGetAnimationList", "append": "(${1:key avatar})" },
				{ "string": "llGetAnimationOverride", "append": "(${1:string anim_state})" },
				"llGetAttached",
				{ "string": "llGetBoundingBox", "append": "(${1:key object})" },
				"llGetCameraPos",
				"llGetCameraRot",
				"llGetCenterOfMass",
				{ "string": "llGetClosestNavPoint", "append": "(${1:vector point}, ${2:list options})" },
				{ "string": "llGetColor", "append": "(${1:integer face})" },
				"llGetCreator",
				"llGetDate",
				{ "string": "llGetDisplayName", "append": "(${1:key id})" },
				"llGetEnergy",
				{ "string": "llGetEnv", "append": "(${1:string name})" },
				"llGetForce",
				"llGetFreeMemory",
				"llGetFreeURLs",
				"llGetGeometricCenter",
				"llGetGMTclock",
				{ "string": "llGetHTTPHeader", "append": "(${1:key request_id}, ${2:string header})" },
				{ "string": "llGetInventoryCreator", "append": "(${1:string item})" },
				{ "string": "llGetInventoryKey", "append": "(${1:string name})" },
				{ "string": "llGetInventoryName", "append": "(${1:integer type}, ${2:integer number})" },
				{ "string": "llGetInventoryNumber", "append": "(${1:integer type})" },
				{ "string": "llGetInventoryPermMask", "append": "(${1:string item}, ${2:integer mask})" },
				{ "string": "llGetInventoryType", "append": "(${1:string name})" },
				"llGetKey",
				{ "string": "llGetLandOwnerAt", "append": "(${1:vector pos})" },
				{ "string": "llGetLinkKey", "append": "(${1:integer link})" },
				{ "string": "llGetLinkMedia", "append": "(${1:integer link}, ${2:integer face}, ${3:list params})" },
				{ "string": "llGetLinkName", "append": "(${1:integer link})" },
				"llGetLinkNumber",
				{ "string": "llGetLinkNumberOfSides", "append": "(${1:integer link})" },
				{ "string": "llGetLinkPrimitiveParams", "append": "(${1:integer link}, ${2:list params})" },
				{ "string": "llGetListEntryType", "append": "(${1:list src}, ${2:integer index})" },
				{ "string": "llGetListLength", "append": "(${1:list src})" },
				"llGetLocalPos",
				"llGetLocalRot",
				"llGetMass",
				"llGetMassMKS",
				"llGetMemoryLimit",
				{ "string": "llGetNextEmail", "append": "(${1:string address}, ${2:string subject})" },
				{ "string": "llGetNotecardLine", "append": "(${1:string name}, ${2:integer line})" },
				{ "string": "llGetNumberOfNotecardLines", "append": "(${1:string name})" },
				"llGetNumberOfPrims",
				"llGetNumberOfSides",
				"llGetObjectDesc",
				{ "string": "llGetObjectDetails", "append": "(${1:key id}, ${2:list params})" },
				{ "string": "llGetObjectMass", "append": "(${1:key id})" },
				"llGetObjectName",
				{ "string": "llGetObjectPermMask", "append": "(${1:integer mask})" },
				{ "string": "llGetObjectPrimCount", "append": "(${1:key prim})" },
				"llGetOmega",
				"llGetOwner",
				{ "string": "llGetOwnerKey", "append": "(${1:key id})" },
				{ "string": "llGetParcelDetails", "append": "(${1:vector pos}, ${2:list params})" },
				{ "string": "llGetParcelFlags", "append": "(${1:vector pos})" },
				{ "string": "llGetParcelMaxPrims", "append": "(${1:vector pos}, ${2:integer sim_wide})" },
				"llGetParcelMusicURL",
				{ "string": "llGetParcelPrimCount", "append": "(${1:vector pos}, ${2:integer category}, ${3:integer sim_wide})" },
				{ "string": "llGetParcelPrimOwners", "append": "(${1:vector pos})" },
				"llGetPermissions",
				"llGetPermissionsKey",
				"llGetPhysicsMaterial",
				"llGetPos",
				{ "string": "llGetPrimitiveParams", "append": "(${1:list params})" },
				{ "string": "llGetPrimMediaParams", "append": "(${1:integer face}, ${2:list params})" },
				"llGetRegionAgentCount",
				"llGetRegionCorner",
				"llGetRegionFlags",
				"llGetRegionFPS",
				"llGetRegionName",
				"llGetRegionTimeDilation",
				"llGetRootPosition",
				"llGetRootRotation",
				"llGetRot",
				"llGetScale",
				"llGetScriptName",
				{ "string": "llGetScriptState", "append": "(${1:string script})" },
				{ "string": "llGetSimStats", "append": "(${1:integer stat_type})" },
				"llGetSimulatorHostname",
				"llGetSPMaxMemory",
				"llGetStartParameter",
				{ "string": "llGetStaticPath", "append": "(${1:vector start}, ${2:vector end}, ${3:float radius}, ${4:list params})" },
				{ "string": "llGetStatus", "append": "(${1:integer status})" },
				{ "string": "llGetSubString", "append": "(${1:string src}, ${2:integer start}, ${3:integer end})" },
				"llGetSunDirection",
				{ "string": "llGetTexture", "append": "(${1:integer face})" },
				{ "string": "llGetTextureOffset", "append": "(${1:integer face})" },
				{ "string": "llGetTextureRot", "append": "(${1:integer face})" },
				{ "string": "llGetTextureScale", "append": "(${1:integer face})" },
				"llGetTime",
				"llGetTimeOfDay",
				"llGetTimestamp",
				"llGetTorque",
				"llGetUnixTime",
				"llGetUsedMemory",
				{ "string": "llGetUsername", "append": "(${1:key id})" },
				"llGetVel",
				"llGetWallclock",
				{ "string": "llGiveInventory", "append": "(${1:key destination}, ${2:string inventory})" },
				{ "string": "llGiveInventoryList", "append": "(${1:key target}, ${2:string folder}, ${3:list inventory})" },
				{ "string": "llGiveMoney", "append": "(${1:key destination}, ${2:integer amount})" },
				{ "string": "llGround", "append": "(${1:vector offset})" },
				{ "string": "llGroundContour", "append": "(${1:vector offset})" },
				{ "string": "llGroundNormal", "append": "(${1:vector offset})" },
				{ "string": "llGroundRepel", "append": "(${1:float height}, ${2:integer water}, ${3:float tau})" },
				{ "string": "llGroundSlope", "append": "(${1:vector offset})" },
				{ "string": "llHTTPRequest", "append": "(${1:string url}, ${2:list parameters}, ${3:string body})" },
				{ "string": "llHTTPResponse", "append": "(${1:key request_id}, ${2:integer status}, ${3:string body})" },
				{ "string": "llInsertString", "append": "(${1:string dst}, ${2:integer pos}, ${3:string src})" },
				{ "string": "llInstantMessage", "append": "(${1:key user}, ${2:string message})" },
				{ "string": "llIntegerToBase64", "append": "(${1:integer number})" },
				{ "string": "llJson2List", "append": "(${1:string json})" },
				{ "string": "llJsonGetValue", "append": "(${1:string json}, ${2:list specifiers})" },
				{ "string": "llJsonSetValue", "append": "(${1:string json}, ${2:list specifiers}, ${3:string newValue})" },
				{ "string": "llJsonValueType", "append": "(${1:string json}, ${2:list specifiers})" },
				{ "string": "llKey2Name", "append": "(${1:key id})" },
				{ "string": "llLinkParticleSystem", "append": "(${1:integer link}, ${2:list rules})" },
				{ "string": "llLinkSitTarget", "append": "(${1:integer link}, ${2:vector offset}, ${3:rotation rot})" },
				{ "string": "llList2CSV", "append": "(${1:list src})" },
				{ "string": "llList2Float", "append": "(${1:list src}, ${2:integer index})" },
				{ "string": "llList2Integer", "append": "(${1:list src}, ${2:integer index})" },
				{ "string": "llList2Json", "append": "(${1:string type}, ${2:list values})" },
				{ "string": "llList2Key", "append": "(${1:list src}, ${2:integer index})" },
				{ "string": "llList2List", "append": "(${1:list src}, ${2:integer start}, ${3:integer end})" },
				{ "string": "llList2ListStrided", "append": "(${1:list src}, ${2:integer start}, ${3:integer end}, ${4:integer stride})" },
				{ "string": "llList2Rot", "append": "(${1:list src}, ${2:integer index})" },
				{ "string": "llList2String", "append": "(${1:list src}, ${2:integer index})" },
				{ "string": "llList2Vector", "append": "(${1:list src}, ${2:integer index})" },
				{ "string": "llListen", "append": "(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string msg})" },
				{ "string": "llListenControl", "append": "(${1:integer handle}, ${2:integer active})" },
				{ "string": "llListenRemove", "append": "(${1:integer handle})" },
				{ "string": "llListFindList", "append": "(${1:list src}, ${2:list test})" },
				{ "string": "llListInsertList", "append": "(${1:list dest}, ${2:list src}, ${3:integer start})" },
				{ "string": "llListRandomize", "append": "(${1:list src}, ${2:integer stride})" },
				{ "string": "llListReplaceList", "append": "(${1:list dest}, ${2:list src}, ${3:integer start}, ${4:integer end})" },
				{ "string": "llListSort", "append": "(${1:list src}, ${2:integer stride}, ${3:integer ascending})" },
				{ "string": "llListStatistics", "append": "(${1:integer operation}, ${2:list src})" },
				{ "string": "llLoadURL", "append": "(${1:key avatar}, ${2:string message}, ${3:string url})" },
				{ "string": "llLog", "append": "(${1:float val})" },
				{ "string": "llLog10", "append": "(${1:float val})" },
				{ "string": "llLookAt", "append": "(${1:vector target}, ${2:float strength}, ${3:float damping})" },
				{ "string": "llLoopSound", "append": "(${1:string sound}, ${2:float volume})" },
				{ "string": "llLoopSoundMaster", "append": "(${1:string sound}, ${2:float volume})" },
				{ "string": "llLoopSoundSlave", "append": "(${1:string sound}, ${2:float volume})" },
				{ "string": "llManageEstateAccess", "append": "(${1:integer action}, ${2:key avatar})" },
				{ "string": "llMapDestination", "append": "(${1:string simname}, ${2:vector pos}, ${3:vector look_at})" },
				{ "string": "llMD5String", "append": "(${1:string src}, ${2:integer nonce})" },
				{ "string": "llMessageLinked", "append": "(${1:integer link}, ${2:integer num}, ${3:string str}, ${4:key id})" },
				{ "string": "llMinEventDelay", "append": "(${1:float delay})" },
				{ "string": "llModifyLand", "append": "(${1:integer action}, ${2:integer brush})" },
				{ "string": "llModPow", "append": "(${1:integer a}, ${2:integer b}, ${3:integer c})" },
				{ "string": "llMoveToTarget", "append": "(${1:vector target}, ${2:float tau})" },
				{ "string": "llNavigateTo", "append": "(${1:vector pos}, ${2:list options})" },
				{ "string": "llOffsetTexture", "append": "(${1:float u}, ${2:float v}, ${3:integer face})" },
				"llOpenRemoteDataChannel",
				{ "string": "llOverMyLand", "append": "(${1:key id})" },
				{ "string": "llOwnerSay", "append": "(${1:string msg})" },
				{ "string": "llParcelMediaCommandList", "append": "(${1:list commandList})" },
				{ "string": "llParcelMediaQuery", "append": "(${1:list query})" },
				{ "string": "llParseString2List", "append": "(${1:string src}, ${2:list separators}, ${3:list spacers})" },
				{ "string": "llParseStringKeepNulls", "append": "(${1:string src}, ${2:list separators}, ${3:list spacers})" },
				{ "string": "llParticleSystem", "append": "(${1:list rules})" },
				{ "string": "llPassCollisions", "append": "(${1:integer pass})" },
				{ "string": "llPassTouches", "append": "(${1:integer pass})" },
				{ "string": "llPatrolPoints", "append": "(${1:list patrolPoints}, ${2:list options})" },
				{ "string": "llPlaySound", "append": "(${1:string sound}, ${2:float volume})" },
				{ "string": "llPlaySoundSlave", "append": "(${1:string sound}, ${2:float volume})" },
				{ "string": "llPow", "append": "(${1:float base}, ${2:float exponent})" },
				{ "string": "llPreloadSound", "append": "(${1:string sound})" },
				{ "string": "llPursue", "append": "(${1:key target}, ${2:list options})" },
				{ "string": "llPushObject", "append": "(${1:key target}, ${2:vector impulse}, ${3:vector ang_impulse}, ${4:integer local})" },
				{ "string": "llRegionSay", "append": "(${1:integer channel}, ${2:string msg})" },
				{ "string": "llRegionSayTo", "append": "(${1:key target}, ${2:integer channel}, ${3:string msg})" },
				"llReleaseControls",
				{ "string": "llReleaseURL", "append": "(${1:string url})" },
				{ "string": "llRemoteDataReply", "append": "(${1:key channel}, ${2:key message_id}, ${3:string sdata}, ${4:integer idata})" },
				{ "string": "llRemoteLoadScriptPin", "append": "(${1:key target}, ${2:string name}, ${3:integer pin}, ${4:integer running}, ${5:integer start_param})" },
				{ "string": "llRemoveFromLandBanList", "append": "(${1:key avatar})" },
				{ "string": "llRemoveFromLandPassList", "append": "(${1:key avatar})" },
				{ "string": "llRemoveInventory", "append": "(${1:string item})" },
				{ "string": "llRemoveVehicleFlags", "append": "(${1:integer flags})" },
				{ "string": "llRequestAgentData", "append": "(${1:key id}, ${2:integer data})" },
				{ "string": "llRequestDisplayName", "append": "(${1:key id})" },
				{ "string": "llRequestInventoryData", "append": "(${1:string name})" },
				{ "string": "llRequestPermissions", "append": "(${1:key agent}, ${2:integer permissions})" },
				"llRequestSecureURL",
				{ "string": "llRequestSimulatorData", "append": "(${1:string region}, ${2:integer data})" },
				"llRequestURL",
				{ "string": "llRequestUsername", "append": "(${1:key id})" },
				"llResetLandBanList",
				"llResetLandPassList",
				{ "string": "llResetOtherScript", "append": "(${1:string name})" },
				"llResetScript",
				"llResetTime",
				{ "string": "llRezAtRoot", "append": "(${1:string inventory}, ${2:vector position}, ${3:vector velocity}, ${4:rotation rot}, ${5:integer param})" },
				{ "string": "llRezObject", "append": "(${1:string inventory}, ${2:vector pos}, ${3:vector vel}, ${4:rotation rot}, ${5:integer param})" },
				{ "string": "llRot2Angle", "append": "(${1:rotation rot})" },
				{ "string": "llRot2Axis", "append": "(${1:rotation rot})" },
				{ "string": "llRot2Euler", "append": "(${1:rotation quat})" },
				{ "string": "llRot2Fwd", "append": "(${1:rotation q})" },
				{ "string": "llRot2Left", "append": "(${1:rotation q})" },
				{ "string": "llRot2Up", "append": "(${1:rotation q})" },
				{ "string": "llRotateTexture", "append": "(${1:float angle}, ${2:integer face})" },
				{ "string": "llRotBetween", "append": "(${1:vector start}, ${2:vector end})" },
				{ "string": "llRotLookAt", "append": "(${1:rotation target_direction}, ${2:float strength}, ${3:float damping})" },
				{ "string": "llRotTarget", "append": "(${1:rotation rot}, ${2:float error})" },
				{ "string": "llRotTargetRemove", "append": "(${1:integer handle})" },
				{ "string": "llRound", "append": "(${1:float val})" },
				{ "string": "llSameGroup", "append": "(${1:key uuid})" },
				{ "string": "llSay", "append": "(${1:integer channel}, ${2:string msg})" },
				{ "string": "llScaleTexture", "append": "(${1:float u}, ${2:float v}, ${3:integer face})" },
				{ "string": "llScriptDanger", "append": "(${1:vector pos})" },
				{ "string": "llScriptProfiler", "append": "(${1:integer flags})" },
				{ "string": "llSendRemoteData", "append": "(${1:key channel}, ${2:string dest}, ${3:integer idata}, ${4:string sdata})" },
				{ "string": "llSensor", "append": "(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc})" },
				"llSensorRemove",
				{ "string": "llSensorRepeat", "append": "(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc}, ${6:float rate})" },
				{ "string": "llSetAlpha", "append": "(${1:float alpha}, ${2:integer face})" },
				{ "string": "llSetAngularVelocity", "append": "(${1:vector force}, ${2:integer local})" },
				{ "string": "llSetAnimationOverride", "append": "(${1:string anim_state}, ${2:string anim})" },
				{ "string": "llSetBuoyancy", "append": "(${1:float buoyancy})" },
				{ "string": "llSetCameraAtOffset", "append": "(${1:vector offset})" },
				{ "string": "llSetCameraEyeOffset", "append": "(${1:vector offset})" },
				{ "string": "llSetCameraParams", "append": "(${1:list rules})" },
				{ "string": "llSetClickAction", "append": "(${1:integer action})" },
				{ "string": "llSetColor", "append": "(${1:vector color}, ${2:integer face})" },
				{ "string": "llSetContentType", "append": "(${1:key request_id}, ${2:integer content_type})" },
				{ "string": "llSetDamage", "append": "(${1:float damage})" },
				{ "string": "llSetForce", "append": "(${1:vector force}, ${2:integer local})" },
				{ "string": "llSetForceAndTorque", "append": "(${1:vector force}, ${2:vector torque}, ${3:integer local})" },
				{ "string": "llSetHoverHeight", "append": "(${1:float height}, ${2:integer water}, ${3:float tau})" },
				{ "string": "llSetKeyframedMotion", "append": "(${1:list keyframes}, ${2:list options})" },
				{ "string": "llSetLinkAlpha", "append": "(${1:integer link}, ${2:float alpha}, ${3:integer face})" },
				{ "string": "llSetLinkCamera", "append": "(${1:integer link}, ${2:vector eye}, ${3:vector at})" },
				{ "string": "llSetLinkColor", "append": "(${1:integer link}, ${2:vector color}, ${3:integer face})" },
				{ "string": "llSetLinkMedia", "append": "(${1:integer link}, ${2:integer face}, ${3:list params})" },
				{ "string": "llSetLinkPrimitiveParams", "append": "(${1:integer link}, ${2:list rules})" },
				{ "string": "llSetLinkPrimitiveParamsFast", "append": "(${1:integer link}, ${2:list rules})" },
				{ "string": "llSetLinkTexture", "append": "(${1:integer link}, ${2:string texture}, ${3:integer face})" },
				{ "string": "llSetLinkTextureAnim", "append": "(${1:integer link}, ${2:integer mode}, ${3:integer face}, ${4:integer sizex}, ${5:integer sizey}, ${6:float start}, ${7:float length}, ${8:float rate})" },
				{ "string": "llSetLocalRot", "append": "(${1:rotation rot})" },
				{ "string": "llSetMemoryLimit", "append": "(${1:integer limit})" },
				{ "string": "llSetObjectDesc", "append": "(${1:string description})" },
				{ "string": "llSetObjectName", "append": "(${1:string name})" },
				{ "string": "llSetParcelMusicURL", "append": "(${1:string url})" },
				{ "string": "llSetPayPrice", "append": "(${1:integer price}, ${2:list quick_pay_buttons})" },
				{ "string": "llSetPhysicsMaterial", "append": "(${1:integer mask}, ${2:float gravity_multiplier}, ${3:float restitution}, ${4:float friction}, ${5:float density})" },
				{ "string": "llSetPos", "append": "(${1:vector pos})" },
				{ "string": "llSetPrimitiveParams", "append": "(${1:list rules})" },
				{ "string": "llSetPrimMediaParams", "append": "(${1:integer face}, ${2:list params})" },
				{ "string": "llSetRegionPos", "append": "(${1:vector position})" },
				{ "string": "llSetRemoteScriptAccessPin", "append": "(${1:integer pin})" },
				{ "string": "llSetRot", "append": "(${1:rotation rot})" },
				{ "string": "llSetScale", "append": "(${1:vector size})" },
				{ "string": "llSetScriptState", "append": "(${1:string name}, ${2:integer run})" },
				{ "string": "llSetSitText", "append": "(${1:string text})" },
				{ "string": "llSetSoundQueueing", "append": "(${1:integer queue})" },
				{ "string": "llSetSoundRadius", "append": "(${1:float radius})" },
				{ "string": "llSetStatus", "append": "(${1:integer status}, ${2:integer value})" },
				{ "string": "llSetText", "append": "(${1:string text}, ${2:vector color}, ${3:float alpha})" },
				{ "string": "llSetTexture", "append": "(${1:string texture}, ${2:integer face})" },
				{ "string": "llSetTextureAnim", "append": "(${1:integer mode}, ${2:integer face}, ${3:integer sizex}, ${4:integer sizey}, ${5:float start}, ${6:float length}, ${7:float rate})" },
				{ "string": "llSetTimerEvent", "append": "(${1:float sec})" },
				{ "string": "llSetTorque", "append": "(${1:vector torque}, ${2:integer local})" },
				{ "string": "llSetTouchText", "append": "(${1:string text})" },
				{ "string": "llSetVehicleFlags", "append": "(${1:integer flags})" },
				{ "string": "llSetVehicleFloatParam", "append": "(${1:integer param}, ${2:float value})" },
				{ "string": "llSetVehicleRotationParam", "append": "(${1:integer param}, ${2:rotation rot})" },
				{ "string": "llSetVehicleType", "append": "(${1:integer type})" },
				{ "string": "llSetVehicleVectorParam", "append": "(${1:integer param}, ${2:vector vec})" },
				{ "string": "llSetVelocity", "append": "(${1:vector force}, ${2:integer local})" },
				{ "string": "llSHA1String", "append": "(${1:string src})" },
				{ "string": "llShout", "append": "(${1:integer channel}, ${2:string msg})" },
				{ "string": "llSin", "append": "(${1:float theta})" },
				{ "string": "llSitTarget", "append": "(${1:vector offset}, ${2:rotation rot})" },
				{ "string": "llSleep", "append": "(${1:float sec})" },
				{ "string": "llSqrt", "append": "(${1:float val})" },
				{ "string": "llStartAnimation", "append": "(${1:string anim})" },
				{ "string": "llStopAnimation", "append": "(${1:string anim})" },
				"llStopHover",
				"llStopLookAt",
				"llStopMoveToTarget",
				"llStopSound",
				{ "string": "llStringLength", "append": "(${1:string str})" },
				{ "string": "llStringToBase64", "append": "(${1:string str})" },
				{ "string": "llStringTrim", "append": "(${1:string src}, ${2:integer type})" },
				{ "string": "llSubStringIndex", "append": "(${1:string source}, ${2:string pattern})" },
				{ "string": "llTakeControls", "append": "(${1:integer controls}, ${2:integer accept}, ${3:integer pass_on})" },
				{ "string": "llTan", "append": "(${1:float theta})" },
				{ "string": "llTarget", "append": "(${1:vector position}, ${2:float range})" },
				{ "string": "llTargetOmega", "append": "(${1:vector axis}, ${2:float spinrate}, ${3:float gain})" },
				{ "string": "llTargetRemove", "append": "(${1:integer handle})" },
				{ "string": "llTeleportAgent", "append": "(${1:key avatar}, ${2:string landmark}, ${3:vector position}, ${4:vector look_at})" },
				{ "string": "llTeleportAgentGlobalCoords", "append": "(${1:key agent}, ${2:vector global_coordinates}, ${3:vector region_coordinates}, ${4:vector look_at})" },
				{ "string": "llTeleportAgentHome", "append": "(${1:key avatar})" },
				{ "string": "llTextBox", "append": "(${1:key avatar}, ${2:string message}, ${3:integer channel})" },
				{ "string": "llToLower", "append": "(${1:string src})" },
				{ "string": "llToUpper", "append": "(${1:string src})" },
				{ "string": "llTransferLindenDollars", "append": "(${1:key destination}, ${2:integer amount})" },
				{ "string": "llTriggerSound", "append": "(${1:string sound}, ${2:float volume})" },
				{ "string": "llTriggerSoundLimited", "append": "(${1:string sound}, ${2:float volume}, ${3:vector top_north_east}, ${4:vector bottom_south_west})" },
				{ "string": "llUnescapeURL", "append": "(${1:string url})" },
				{ "string": "llUnSit", "append": "(${1:key id})" },
				{ "string": "llUpdateCharacter", "append": "(${1:list options})" },
				{ "string": "llVecDist", "append": "(${1:vector vec_a}, ${2:vector vec_b})" },
				{ "string": "llVecMag", "append": "(${1:vector vec})" },
				{ "string": "llVecNorm", "append": "(${1:vector vec})" },
				{ "string": "llVolumeDetect", "append": "(${1:integer detect})" },
				{ "string": "llWanderWithin", "append": "(${1:vector origin}, ${2:vector dist}, ${3:list options})" },
				{ "string": "llWater", "append": "(${1:vector offset})" },
				{ "string": "llWhisper", "append": "(${1:integer channel}, ${2:string msg})" },
				{ "string": "llWind", "append": "(${1:vector offset})" },
				{ "string": "llXorBase64StringsCorrect", "append": "(${1:string str1}, ${2:string str2})" }
			]
		},
		{
			"name": "keyword.control.flow.source.lsl",
			"scope": "source.lsl",
			"strings": [
				"default",
				{ "string": "do", "append": "\n{\n\t$0\n}\nwhile (${1:condition});" },
				{ "string": "else", "append": "\n{\n\t$0\n}" },
				{ "string": "else if", "append": " (${1:condition})\n{\n$0\n}" },
				{ "string": "for", "append": " (${1:start}, ${3:condition}, ${3:step})\n{\n$0\n}" },
				{ "string": "if", "append": " (${1:condition})\n{\n$0\n}" },
				{ "string": "jump", "append": "(${1:target});" },
				"return",
				"state",
				{ "string": "while", "append": " ($1)\n{\n\t$0\n}" },
				{ "string": "@", "append": "${1:target};" }
			]
		},
		{
			"name": "storage.type.source.lsl",
			"scope": "source.lsl",
			"defaultAppend": " ${1:variable name} = ${2:variable value};",
			"strings": [
				"float",
				"integer",
				"key",
				"list",
				"rotation",
				"string",
				"vector"
			]
		}
	]
}
