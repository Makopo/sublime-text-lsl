{
	"scope": "meta.function.body.ossl, meta.event.body.ossl",

	"completions":
	[
// NOTE: Following definitions are taken from
//
//                  kwdb (https://bitbucket.org/Sei_Lisa/kwdb)
//
//       Should you have issues with this file please check the database version
//       below against the database version of the file at kwdb. Should this
//       version be old, please notify me. Should this file be up-to-date,
//       please check with the kwdb project to have your issues resolved.
//
// Generated by LSL2 Derived Files Generator. Database version: 0.0.20200612000
//
		{ "trigger": "llAbs\t(integer) function", "contents": "llAbs(${1:integer val})" },
		{ "trigger": "llAcos\t(float) function", "contents": "llAcos(${1:float val})" },
		{ "trigger": "llAddToLandBanList\t(void) function", "contents": "llAddToLandBanList(${1:key avatar}, ${2:float hours})" },
		{ "trigger": "llAddToLandPassList\t(void) function", "contents": "llAddToLandPassList(${1:key avatar}, ${2:float hours})" },
		{ "trigger": "llAdjustSoundVolume\t(void) function", "contents": "llAdjustSoundVolume(${1:float volume})" },
		{ "trigger": "llAllowInventoryDrop\t(void) function", "contents": "llAllowInventoryDrop(${1:integer add})" },
		{ "trigger": "llAngleBetween\t(float) function", "contents": "llAngleBetween(${1:rotation a}, ${2:rotation b})" },
		{ "trigger": "llApplyImpulse\t(void) function", "contents": "llApplyImpulse(${1:vector force}, ${2:integer local})" },
		{ "trigger": "llApplyRotationalImpulse\t(void) function", "contents": "llApplyRotationalImpulse(${1:vector force}, ${2:integer local})" },
		{ "trigger": "llAsin\t(float) function", "contents": "llAsin(${1:float val})" },
		{ "trigger": "llAtan2\t(float) function", "contents": "llAtan2(${1:float y}, ${2:float x})" },
		{ "trigger": "llAttachToAvatar\t(void) function", "contents": "llAttachToAvatar(${1:integer attach_point})" },
		{ "trigger": "llAvatarOnLinkSitTarget\t(key) function", "contents": "llAvatarOnLinkSitTarget(${1:integer link})" },
		{ "trigger": "llAvatarOnSitTarget\t(key) function", "contents": "llAvatarOnSitTarget()" },
		{ "trigger": "llAxes2Rot\t(rotation) function", "contents": "llAxes2Rot(${1:vector fwd}, ${2:vector left}, ${3:vector up})" },
		{ "trigger": "llAxisAngle2Rot\t(rotation) function", "contents": "llAxisAngle2Rot(${1:vector axis}, ${2:float angle})" },
		{ "trigger": "llBase64ToInteger\t(integer) function", "contents": "llBase64ToInteger(${1:string str})" },
		{ "trigger": "llBase64ToString\t(string) function", "contents": "llBase64ToString(${1:string str})" },
		{ "trigger": "llBreakAllLinks\t(void) function", "contents": "llBreakAllLinks()" },
		{ "trigger": "llBreakLink\t(void) function", "contents": "llBreakLink(${1:integer linknum})" },
		{ "trigger": "llCSV2List\t(list) function", "contents": "llCSV2List(${1:string src})" },
		{ "trigger": "llCastRay\t(list) function", "contents": "llCastRay(${1:vector start}, ${2:vector end}, ${3:list params})" },
		{ "trigger": "llCeil\t(integer) function", "contents": "llCeil(${1:float val})" },
		{ "trigger": "llClearCameraParams\t(void) function", "contents": "llClearCameraParams()" },
		{ "trigger": "llClearLinkMedia\t(integer) function", "contents": "llClearLinkMedia(${1:integer link}, ${2:integer face})" },
		{ "trigger": "llClearPrimMedia\t(integer) function", "contents": "llClearPrimMedia(${1:integer face})" },
		{ "trigger": "llCloseRemoteDataChannel\t(void) function", "contents": "llCloseRemoteDataChannel(${1:key channel})" },
		{ "trigger": "llCollisionFilter\t(void) function", "contents": "llCollisionFilter(${1:string name}, ${2:key id}, ${3:integer accept})" },
		{ "trigger": "llCollisionSound\t(void) function", "contents": "llCollisionSound(${1:string impact_sound}, ${2:float impact_volume})" },
		{ "trigger": "llCos\t(float) function", "contents": "llCos(${1:float theta})" },
		{ "trigger": "llCreateLink\t(void) function", "contents": "llCreateLink(${1:key target}, ${2:integer parent})" },
		{ "trigger": "llDeleteSubList\t(list) function", "contents": "llDeleteSubList(${1:list src}, ${2:integer start}, ${3:integer end})" },
		{ "trigger": "llDeleteSubString\t(string) function", "contents": "llDeleteSubString(${1:string src}, ${2:integer start}, ${3:integer end})" },
		{ "trigger": "llDetachFromAvatar\t(void) function", "contents": "llDetachFromAvatar()" },
		{ "trigger": "llDetectedGrab\t(vector) function", "contents": "llDetectedGrab(${1:integer number})" },
		{ "trigger": "llDetectedGroup\t(integer) function", "contents": "llDetectedGroup(${1:integer number})" },
		{ "trigger": "llDetectedKey\t(key) function", "contents": "llDetectedKey(${1:integer number})" },
		{ "trigger": "llDetectedLinkNumber\t(integer) function", "contents": "llDetectedLinkNumber(${1:integer number})" },
		{ "trigger": "llDetectedName\t(string) function", "contents": "llDetectedName(${1:integer number})" },
		{ "trigger": "llDetectedOwner\t(key) function", "contents": "llDetectedOwner(${1:integer number})" },
		{ "trigger": "llDetectedPos\t(vector) function", "contents": "llDetectedPos(${1:integer number})" },
		{ "trigger": "llDetectedRot\t(rotation) function", "contents": "llDetectedRot(${1:integer number})" },
		{ "trigger": "llDetectedTouchBinormal\t(vector) function", "contents": "llDetectedTouchBinormal(${1:integer number})" },
		{ "trigger": "llDetectedTouchFace\t(integer) function", "contents": "llDetectedTouchFace(${1:integer number})" },
		{ "trigger": "llDetectedTouchNormal\t(vector) function", "contents": "llDetectedTouchNormal(${1:integer number})" },
		{ "trigger": "llDetectedTouchPos\t(vector) function", "contents": "llDetectedTouchPos(${1:integer number})" },
		{ "trigger": "llDetectedTouchST\t(vector) function", "contents": "llDetectedTouchST(${1:integer number})" },
		{ "trigger": "llDetectedTouchUV\t(vector) function", "contents": "llDetectedTouchUV(${1:integer number})" },
		{ "trigger": "llDetectedType\t(integer) function", "contents": "llDetectedType(${1:integer number})" },
		{ "trigger": "llDetectedVel\t(vector) function", "contents": "llDetectedVel(${1:integer number})" },
		{ "trigger": "llDialog\t(void) function", "contents": "llDialog(${1:key avatar}, ${2:string message}, ${3:list buttons}, ${4:integer chat_channel})" },
		{ "trigger": "llDie\t(void) function", "contents": "llDie()" },
		{ "trigger": "llDumpList2String\t(string) function", "contents": "llDumpList2String(${1:list src}, ${2:string separator})" },
		{ "trigger": "llEdgeOfWorld\t(integer) function", "contents": "llEdgeOfWorld(${1:vector pos}, ${2:vector dir})" },
		{ "trigger": "llEjectFromLand\t(void) function", "contents": "llEjectFromLand(${1:key avatar})" },
		{ "trigger": "llEmail\t(void) function", "contents": "llEmail(${1:string address}, ${2:string subject}, ${3:string message})" },
		{ "trigger": "llEscapeURL\t(string) function", "contents": "llEscapeURL(${1:string url})" },
		{ "trigger": "llEuler2Rot\t(rotation) function", "contents": "llEuler2Rot(${1:vector v})" },
		{ "trigger": "llFabs\t(float) function", "contents": "llFabs(${1:float val})" },
		{ "trigger": "llFloor\t(integer) function", "contents": "llFloor(${1:float val})" },
		{ "trigger": "llForceMouselook\t(void) function", "contents": "llForceMouselook(${1:integer mouselook})" },
		{ "trigger": "llFrand\t(float) function", "contents": "llFrand(${1:float mag})" },
		{ "trigger": "llGenerateKey\t(key) function", "contents": "llGenerateKey()" },
		{ "trigger": "llGetAccel\t(vector) function", "contents": "llGetAccel()" },
		{ "trigger": "llGetAgentInfo\t(integer) function", "contents": "llGetAgentInfo(${1:key id})" },
		{ "trigger": "llGetAgentLanguage\t(string) function", "contents": "llGetAgentLanguage(${1:key avatar})" },
		{ "trigger": "llGetAgentList\t(list) function", "contents": "llGetAgentList(${1:integer scope}, ${2:list options})" },
		{ "trigger": "llGetAgentSize\t(vector) function", "contents": "llGetAgentSize(${1:key id})" },
		{ "trigger": "llGetAlpha\t(float) function", "contents": "llGetAlpha(${1:integer face})" },
		{ "trigger": "llGetAndResetTime\t(float) function", "contents": "llGetAndResetTime()" },
		{ "trigger": "llGetAnimation\t(string) function", "contents": "llGetAnimation(${1:key id})" },
		{ "trigger": "llGetAnimationList\t(list) function", "contents": "llGetAnimationList(${1:key id})" },
		{ "trigger": "llGetAnimationOverride\t(string) function", "contents": "llGetAnimationOverride(${1:string anim_state})" },
		{ "trigger": "llGetAttached\t(integer) function", "contents": "llGetAttached()" },
		{ "trigger": "llGetAttachedList\t(list) function", "contents": "llGetAttachedList(${1:key agent})" },
		{ "trigger": "llGetBoundingBox\t(list) function", "contents": "llGetBoundingBox(${1:key object})" },
		{ "trigger": "llGetCameraPos\t(vector) function", "contents": "llGetCameraPos()" },
		{ "trigger": "llGetCameraRot\t(rotation) function", "contents": "llGetCameraRot()" },
		{ "trigger": "llGetCenterOfMass\t(vector) function", "contents": "llGetCenterOfMass()" },
		{ "trigger": "llGetColor\t(vector) function", "contents": "llGetColor(${1:integer face})" },
		{ "trigger": "llGetCreator\t(key) function", "contents": "llGetCreator()" },
		{ "trigger": "llGetDate\t(string) function", "contents": "llGetDate()" },
		{ "trigger": "llGetDisplayName\t(string) function", "contents": "llGetDisplayName(${1:key id})" },
		{ "trigger": "llGetEnergy\t(float) function", "contents": "llGetEnergy()" },
		{ "trigger": "llGetEnv\t(string) function", "contents": "llGetEnv(${1:string name})" },
		{ "trigger": "llGetForce\t(vector) function", "contents": "llGetForce()" },
		{ "trigger": "llGetFreeMemory\t(integer) function", "contents": "llGetFreeMemory()" },
		{ "trigger": "llGetFreeURLs\t(integer) function", "contents": "llGetFreeURLs()" },
		{ "trigger": "llGetGMTclock\t(float) function", "contents": "llGetGMTclock()" },
		{ "trigger": "llGetGeometricCenter\t(vector) function", "contents": "llGetGeometricCenter()" },
		{ "trigger": "llGetHTTPHeader\t(string) function", "contents": "llGetHTTPHeader(${1:key request_id}, ${2:string header})" },
		{ "trigger": "llGetInventoryCreator\t(key) function", "contents": "llGetInventoryCreator(${1:string item})" },
		{ "trigger": "llGetInventoryKey\t(key) function", "contents": "llGetInventoryKey(${1:string name})" },
		{ "trigger": "llGetInventoryName\t(string) function", "contents": "llGetInventoryName(${1:integer type}, ${2:integer number})" },
		{ "trigger": "llGetInventoryNumber\t(integer) function", "contents": "llGetInventoryNumber(${1:integer type})" },
		{ "trigger": "llGetInventoryPermMask\t(integer) function", "contents": "llGetInventoryPermMask(${1:string item}, ${2:integer mask})" },
		{ "trigger": "llGetInventoryType\t(integer) function", "contents": "llGetInventoryType(${1:string name})" },
		{ "trigger": "llGetKey\t(key) function", "contents": "llGetKey()" },
		{ "trigger": "llGetLandOwnerAt\t(key) function", "contents": "llGetLandOwnerAt(${1:vector pos})" },
		{ "trigger": "llGetLinkKey\t(key) function", "contents": "llGetLinkKey(${1:integer linknumber})" },
		{ "trigger": "llGetLinkMedia\t(list) function", "contents": "llGetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params})" },
		{ "trigger": "llGetLinkName\t(string) function", "contents": "llGetLinkName(${1:integer linknumber})" },
		{ "trigger": "llGetLinkNumber\t(integer) function", "contents": "llGetLinkNumber()" },
		{ "trigger": "llGetLinkNumberOfSides\t(integer) function", "contents": "llGetLinkNumberOfSides(${1:integer link})" },
		{ "trigger": "llGetLinkPrimitiveParams\t(list) function", "contents": "llGetLinkPrimitiveParams(${1:integer linknumber}, ${2:list rules})" },
		{ "trigger": "llGetListEntryType\t(integer) function", "contents": "llGetListEntryType(${1:list src}, ${2:integer index})" },
		{ "trigger": "llGetListLength\t(integer) function", "contents": "llGetListLength(${1:list src})" },
		{ "trigger": "llGetLocalPos\t(vector) function", "contents": "llGetLocalPos()" },
		{ "trigger": "llGetLocalRot\t(rotation) function", "contents": "llGetLocalRot()" },
		{ "trigger": "llGetMass\t(float) function", "contents": "llGetMass()" },
		{ "trigger": "llGetMassMKS\t(float) function", "contents": "llGetMassMKS()" },
		{ "trigger": "llGetMaxScaleFactor\t(float) function", "contents": "llGetMaxScaleFactor()" },
		{ "trigger": "llGetMemoryLimit\t(integer) function", "contents": "llGetMemoryLimit()" },
		{ "trigger": "llGetMinScaleFactor\t(float) function", "contents": "llGetMinScaleFactor()" },
		{ "trigger": "llGetNextEmail\t(void) function", "contents": "llGetNextEmail(${1:string address}, ${2:string subject})" },
		{ "trigger": "llGetNotecardLine\t(key) function", "contents": "llGetNotecardLine(${1:string name}, ${2:integer line})" },
		{ "trigger": "llGetNumberOfNotecardLines\t(key) function", "contents": "llGetNumberOfNotecardLines(${1:string name})" },
		{ "trigger": "llGetNumberOfPrims\t(integer) function", "contents": "llGetNumberOfPrims()" },
		{ "trigger": "llGetNumberOfSides\t(integer) function", "contents": "llGetNumberOfSides()" },
		{ "trigger": "llGetObjectDesc\t(string) function", "contents": "llGetObjectDesc()" },
		{ "trigger": "llGetObjectDetails\t(list) function", "contents": "llGetObjectDetails(${1:key id}, ${2:list params})" },
		{ "trigger": "llGetObjectMass\t(float) function", "contents": "llGetObjectMass(${1:key id})" },
		{ "trigger": "llGetObjectName\t(string) function", "contents": "llGetObjectName()" },
		{ "trigger": "llGetObjectPermMask\t(integer) function", "contents": "llGetObjectPermMask(${1:integer mask})" },
		{ "trigger": "llGetObjectPrimCount\t(integer) function", "contents": "llGetObjectPrimCount(${1:key object_id})" },
		{ "trigger": "llGetOmega\t(vector) function", "contents": "llGetOmega()" },
		{ "trigger": "llGetOwner\t(key) function", "contents": "llGetOwner()" },
		{ "trigger": "llGetOwnerKey\t(key) function", "contents": "llGetOwnerKey(${1:key id})" },
		{ "trigger": "llGetParcelDetails\t(list) function", "contents": "llGetParcelDetails(${1:vector pos}, ${2:list params})" },
		{ "trigger": "llGetParcelFlags\t(integer) function", "contents": "llGetParcelFlags(${1:vector pos})" },
		{ "trigger": "llGetParcelMaxPrims\t(integer) function", "contents": "llGetParcelMaxPrims(${1:vector pos}, ${2:integer sim_wide})" },
		{ "trigger": "llGetParcelMusicURL\t(string) function", "contents": "llGetParcelMusicURL()" },
		{ "trigger": "llGetParcelPrimCount\t(integer) function", "contents": "llGetParcelPrimCount(${1:vector pos}, ${2:integer category}, ${3:integer sim_wide})" },
		{ "trigger": "llGetParcelPrimOwners\t(list) function", "contents": "llGetParcelPrimOwners(${1:vector pos})" },
		{ "trigger": "llGetPermissions\t(integer) function", "contents": "llGetPermissions()" },
		{ "trigger": "llGetPermissionsKey\t(key) function", "contents": "llGetPermissionsKey()" },
		{ "trigger": "llGetPhysicsMaterial\t(list) function", "contents": "llGetPhysicsMaterial()" },
		{ "trigger": "llGetPos\t(vector) function", "contents": "llGetPos()" },
		{ "trigger": "llGetPrimMediaParams\t(list) function", "contents": "llGetPrimMediaParams(${1:integer face}, ${2:list params})" },
		{ "trigger": "llGetPrimitiveParams\t(list) function", "contents": "llGetPrimitiveParams(${1:list params})" },
		{ "trigger": "llGetRegionAgentCount\t(integer) function", "contents": "llGetRegionAgentCount()" },
		{ "trigger": "llGetRegionCorner\t(vector) function", "contents": "llGetRegionCorner()" },
		{ "trigger": "llGetRegionFPS\t(float) function", "contents": "llGetRegionFPS()" },
		{ "trigger": "llGetRegionFlags\t(integer) function", "contents": "llGetRegionFlags()" },
		{ "trigger": "llGetRegionName\t(string) function", "contents": "llGetRegionName()" },
		{ "trigger": "llGetRegionTimeDilation\t(float) function", "contents": "llGetRegionTimeDilation()" },
		{ "trigger": "llGetRootPosition\t(vector) function", "contents": "llGetRootPosition()" },
		{ "trigger": "llGetRootRotation\t(rotation) function", "contents": "llGetRootRotation()" },
		{ "trigger": "llGetRot\t(rotation) function", "contents": "llGetRot()" },
		{ "trigger": "llGetSPMaxMemory\t(integer) function", "contents": "llGetSPMaxMemory()" },
		{ "trigger": "llGetScale\t(vector) function", "contents": "llGetScale()" },
		{ "trigger": "llGetScriptName\t(string) function", "contents": "llGetScriptName()" },
		{ "trigger": "llGetScriptState\t(integer) function", "contents": "llGetScriptState(${1:string name})" },
		{ "trigger": "llGetSimulatorHostname\t(string) function", "contents": "llGetSimulatorHostname()" },
		{ "trigger": "llGetStartParameter\t(integer) function", "contents": "llGetStartParameter()" },
		{ "trigger": "llGetStatus\t(integer) function", "contents": "llGetStatus(${1:integer status})" },
		{ "trigger": "llGetSubString\t(string) function", "contents": "llGetSubString(${1:string src}, ${2:integer start}, ${3:integer end})" },
		{ "trigger": "llGetSunDirection\t(vector) function", "contents": "llGetSunDirection()" },
		{ "trigger": "llGetTexture\t(string) function", "contents": "llGetTexture(${1:integer face})" },
		{ "trigger": "llGetTextureOffset\t(vector) function", "contents": "llGetTextureOffset(${1:integer face})" },
		{ "trigger": "llGetTextureRot\t(float) function", "contents": "llGetTextureRot(${1:integer side})" },
		{ "trigger": "llGetTextureScale\t(vector) function", "contents": "llGetTextureScale(${1:integer side})" },
		{ "trigger": "llGetTime\t(float) function", "contents": "llGetTime()" },
		{ "trigger": "llGetTimeOfDay\t(float) function", "contents": "llGetTimeOfDay()" },
		{ "trigger": "llGetTimestamp\t(string) function", "contents": "llGetTimestamp()" },
		{ "trigger": "llGetTorque\t(vector) function", "contents": "llGetTorque()" },
		{ "trigger": "llGetUnixTime\t(integer) function", "contents": "llGetUnixTime()" },
		{ "trigger": "llGetUsedMemory\t(integer) function", "contents": "llGetUsedMemory()" },
		{ "trigger": "llGetUsername\t(string) function", "contents": "llGetUsername(${1:key id})" },
		{ "trigger": "llGetVel\t(vector) function", "contents": "llGetVel()" },
		{ "trigger": "llGetWallclock\t(float) function", "contents": "llGetWallclock()" },
		{ "trigger": "llGiveInventory\t(void) function", "contents": "llGiveInventory(${1:key destination}, ${2:string inventory})" },
		{ "trigger": "llGiveInventoryList\t(void) function", "contents": "llGiveInventoryList(${1:key target}, ${2:string folder}, ${3:list inventory})" },
		{ "trigger": "llGiveMoney\t(integer) function", "contents": "llGiveMoney(${1:key destination}, ${2:integer amount})" },
		{ "trigger": "llGround\t(float) function", "contents": "llGround(${1:vector offset})" },
		{ "trigger": "llGroundContour\t(vector) function", "contents": "llGroundContour(${1:vector offset})" },
		{ "trigger": "llGroundNormal\t(vector) function", "contents": "llGroundNormal(${1:vector offset})" },
		{ "trigger": "llGroundRepel\t(void) function", "contents": "llGroundRepel(${1:float height}, ${2:integer water}, ${3:float tau})" },
		{ "trigger": "llGroundSlope\t(vector) function", "contents": "llGroundSlope(${1:vector offset})" },
		{ "trigger": "llHTTPRequest\t(key) function", "contents": "llHTTPRequest(${1:string url}, ${2:list parameters}, ${3:string body})" },
		{ "trigger": "llHTTPResponse\t(void) function", "contents": "llHTTPResponse(${1:key request_id}, ${2:integer status}, ${3:string body})" },
		{ "trigger": "llInsertString\t(string) function", "contents": "llInsertString(${1:string dst}, ${2:integer position}, ${3:string src})" },
		{ "trigger": "llInstantMessage\t(void) function", "contents": "llInstantMessage(${1:key user}, ${2:string message})" },
		{ "trigger": "llIntegerToBase64\t(string) function", "contents": "llIntegerToBase64(${1:integer number})" },
		{ "trigger": "llJson2List\t(list) function", "contents": "llJson2List(${1:string json})" },
		{ "trigger": "llJsonGetValue\t(string) function", "contents": "llJsonGetValue(${1:string json}, ${2:list specifiers})" },
		{ "trigger": "llJsonSetValue\t(string) function", "contents": "llJsonSetValue(${1:string json}, ${2:list specifiers}, ${3:string value})" },
		{ "trigger": "llJsonValueType\t(string) function", "contents": "llJsonValueType(${1:string json}, ${2:list specifiers})" },
		{ "trigger": "llKey2Name\t(string) function", "contents": "llKey2Name(${1:key id})" },
		{ "trigger": "llLinkParticleSystem\t(void) function", "contents": "llLinkParticleSystem(${1:integer linknumber}, ${2:list rules})" },
		{ "trigger": "llLinkSitTarget\t(void) function", "contents": "llLinkSitTarget(${1:integer link}, ${2:vector offset}, ${3:rotation rot})" },
		{ "trigger": "llList2CSV\t(string) function", "contents": "llList2CSV(${1:list src})" },
		{ "trigger": "llList2Float\t(float) function", "contents": "llList2Float(${1:list src}, ${2:integer index})" },
		{ "trigger": "llList2Integer\t(integer) function", "contents": "llList2Integer(${1:list src}, ${2:integer index})" },
		{ "trigger": "llList2Json\t(string) function", "contents": "llList2Json(${1:string type}, ${2:list values})" },
		{ "trigger": "llList2Key\t(key) function", "contents": "llList2Key(${1:list src}, ${2:integer index})" },
		{ "trigger": "llList2List\t(list) function", "contents": "llList2List(${1:list src}, ${2:integer start}, ${3:integer end})" },
		{ "trigger": "llList2ListStrided\t(list) function", "contents": "llList2ListStrided(${1:list src}, ${2:integer start}, ${3:integer end}, ${4:integer stride})" },
		{ "trigger": "llList2Rot\t(rotation) function", "contents": "llList2Rot(${1:list src}, ${2:integer index})" },
		{ "trigger": "llList2String\t(string) function", "contents": "llList2String(${1:list src}, ${2:integer index})" },
		{ "trigger": "llList2Vector\t(vector) function", "contents": "llList2Vector(${1:list src}, ${2:integer index})" },
		{ "trigger": "llListFindList\t(integer) function", "contents": "llListFindList(${1:list src}, ${2:list test})" },
		{ "trigger": "llListInsertList\t(list) function", "contents": "llListInsertList(${1:list dest}, ${2:list src}, ${3:integer start})" },
		{ "trigger": "llListRandomize\t(list) function", "contents": "llListRandomize(${1:list src}, ${2:integer stride})" },
		{ "trigger": "llListReplaceList\t(list) function", "contents": "llListReplaceList(${1:list dest}, ${2:list src}, ${3:integer start}, ${4:integer end})" },
		{ "trigger": "llListSort\t(list) function", "contents": "llListSort(${1:list src}, ${2:integer stride}, ${3:integer ascending})" },
		{ "trigger": "llListStatistics\t(float) function", "contents": "llListStatistics(${1:integer operation}, ${2:list src})" },
		{ "trigger": "llListen\t(integer) function", "contents": "llListen(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string msg})" },
		{ "trigger": "llListenControl\t(void) function", "contents": "llListenControl(${1:integer number}, ${2:integer active})" },
		{ "trigger": "llListenRemove\t(void) function", "contents": "llListenRemove(${1:integer number})" },
		{ "trigger": "llLoadURL\t(void) function", "contents": "llLoadURL(${1:key avatar}, ${2:string message}, ${3:string url})" },
		{ "trigger": "llLog\t(float) function", "contents": "llLog(${1:float val})" },
		{ "trigger": "llLog10\t(float) function", "contents": "llLog10(${1:float val})" },
		{ "trigger": "llLookAt\t(void) function", "contents": "llLookAt(${1:vector target}, ${2:float strength}, ${3:float damping})" },
		{ "trigger": "llLoopSound\t(void) function", "contents": "llLoopSound(${1:string sound}, ${2:float volume})" },
		{ "trigger": "llLoopSoundMaster\t(void) function", "contents": "llLoopSoundMaster(${1:string sound}, ${2:float volume})" },
		{ "trigger": "llLoopSoundSlave\t(void) function", "contents": "llLoopSoundSlave(${1:string sound}, ${2:float volume})" },
		{ "trigger": "llMD5String\t(string) function", "contents": "llMD5String(${1:string src}, ${2:integer nonce})" },
		{ "trigger": "llManageEstateAccess\t(integer) function", "contents": "llManageEstateAccess(${1:integer action}, ${2:key id})" },
		{ "trigger": "llMapDestination\t(void) function", "contents": "llMapDestination(${1:string simname}, ${2:vector pos}, ${3:vector look_at})" },
		{ "trigger": "llMessageLinked\t(void) function", "contents": "llMessageLinked(${1:integer linknum}, ${2:integer num}, ${3:string str}, ${4:key id})" },
		{ "trigger": "llMinEventDelay\t(void) function", "contents": "llMinEventDelay(${1:float delay})" },
		{ "trigger": "llModPow\t(integer) function", "contents": "llModPow(${1:integer a}, ${2:integer b}, ${3:integer c})" },
		{ "trigger": "llModifyLand\t(void) function", "contents": "llModifyLand(${1:integer action}, ${2:integer brush})" },
		{ "trigger": "llMoveToTarget\t(void) function", "contents": "llMoveToTarget(${1:vector target}, ${2:float tau})" },
		{ "trigger": "llOffsetTexture\t(void) function", "contents": "llOffsetTexture(${1:float u}, ${2:float v}, ${3:integer face})" },
		{ "trigger": "llOpenRemoteDataChannel\t(void) function", "contents": "llOpenRemoteDataChannel()" },
		{ "trigger": "llOverMyLand\t(integer) function", "contents": "llOverMyLand(${1:key id})" },
		{ "trigger": "llOwnerSay\t(void) function", "contents": "llOwnerSay(${1:string msg})" },
		{ "trigger": "llParcelMediaCommandList\t(void) function", "contents": "llParcelMediaCommandList(${1:list command})" },
		{ "trigger": "llParcelMediaQuery\t(list) function", "contents": "llParcelMediaQuery(${1:list query})" },
		{ "trigger": "llParseString2List\t(list) function", "contents": "llParseString2List(${1:string src}, ${2:list separators}, ${3:list spacers})" },
		{ "trigger": "llParseStringKeepNulls\t(list) function", "contents": "llParseStringKeepNulls(${1:string src}, ${2:list separators}, ${3:list spacers})" },
		{ "trigger": "llParticleSystem\t(void) function", "contents": "llParticleSystem(${1:list rules})" },
		{ "trigger": "llPassCollisions\t(void) function", "contents": "llPassCollisions(${1:integer pass})" },
		{ "trigger": "llPassTouches\t(void) function", "contents": "llPassTouches(${1:integer pass})" },
		{ "trigger": "llPlaySound\t(void) function", "contents": "llPlaySound(${1:string sound}, ${2:float volume})" },
		{ "trigger": "llPlaySoundSlave\t(void) function", "contents": "llPlaySoundSlave(${1:string sound}, ${2:float volume})" },
		{ "trigger": "llPow\t(float) function", "contents": "llPow(${1:float base}, ${2:float exponent})" },
		{ "trigger": "llPreloadSound\t(void) function", "contents": "llPreloadSound(${1:string sound})" },
		{ "trigger": "llPushObject\t(void) function", "contents": "llPushObject(${1:key id}, ${2:vector impulse}, ${3:vector ang_impulse}, ${4:integer local})" },
		{ "trigger": "llRegionSay\t(void) function", "contents": "llRegionSay(${1:integer channel}, ${2:string msg})" },
		{ "trigger": "llRegionSayTo\t(void) function", "contents": "llRegionSayTo(${1:key target}, ${2:integer channel}, ${3:string msg})" },
		{ "trigger": "llReleaseControls\t(void) function", "contents": "llReleaseControls()" },
		{ "trigger": "llReleaseURL\t(void) function", "contents": "llReleaseURL(${1:string url})" },
		{ "trigger": "llRemoteDataReply\t(void) function", "contents": "llRemoteDataReply(${1:key channel}, ${2:key message_id}, ${3:string sdata}, ${4:integer idata})" },
		{ "trigger": "llRemoteLoadScriptPin\t(void) function", "contents": "llRemoteLoadScriptPin(${1:key target}, ${2:string name}, ${3:integer pin}, ${4:integer running}, ${5:integer start_param})" },
		{ "trigger": "llRemoveFromLandBanList\t(void) function", "contents": "llRemoveFromLandBanList(${1:key avatar})" },
		{ "trigger": "llRemoveFromLandPassList\t(void) function", "contents": "llRemoveFromLandPassList(${1:key avatar})" },
		{ "trigger": "llRemoveInventory\t(void) function", "contents": "llRemoveInventory(${1:string item})" },
		{ "trigger": "llRemoveVehicleFlags\t(void) function", "contents": "llRemoveVehicleFlags(${1:integer flags})" },
		{ "trigger": "llRequestAgentData\t(key) function", "contents": "llRequestAgentData(${1:key id}, ${2:integer data})" },
		{ "trigger": "llRequestDisplayName\t(key) function", "contents": "llRequestDisplayName(${1:key id})" },
		{ "trigger": "llRequestInventoryData\t(key) function", "contents": "llRequestInventoryData(${1:string name})" },
		{ "trigger": "llRequestPermissions\t(void) function", "contents": "llRequestPermissions(${1:key agent}, ${2:integer perm})" },
		{ "trigger": "llRequestSecureURL\t(key) function", "contents": "llRequestSecureURL()" },
		{ "trigger": "llRequestSimulatorData\t(key) function", "contents": "llRequestSimulatorData(${1:string simulator}, ${2:integer data})" },
		{ "trigger": "llRequestURL\t(key) function", "contents": "llRequestURL()" },
		{ "trigger": "llRequestUsername\t(key) function", "contents": "llRequestUsername(${1:key id})" },
		{ "trigger": "llResetAnimationOverride\t(void) function", "contents": "llResetAnimationOverride(${1:string anim_state})" },
		{ "trigger": "llResetLandBanList\t(void) function", "contents": "llResetLandBanList()" },
		{ "trigger": "llResetLandPassList\t(void) function", "contents": "llResetLandPassList()" },
		{ "trigger": "llResetOtherScript\t(void) function", "contents": "llResetOtherScript(${1:string name})" },
		{ "trigger": "llResetScript\t(void) function", "contents": "llResetScript()" },
		{ "trigger": "llResetTime\t(void) function", "contents": "llResetTime()" },
		{ "trigger": "llRezAtRoot\t(void) function", "contents": "llRezAtRoot(${1:string inventory}, ${2:vector pos}, ${3:vector vel}, ${4:rotation rot}, ${5:integer param})" },
		{ "trigger": "llRezObject\t(void) function", "contents": "llRezObject(${1:string inventory}, ${2:vector pos}, ${3:vector vel}, ${4:rotation rot}, ${5:integer param})" },
		{ "trigger": "llRot2Angle\t(float) function", "contents": "llRot2Angle(${1:rotation rot})" },
		{ "trigger": "llRot2Axis\t(vector) function", "contents": "llRot2Axis(${1:rotation rot})" },
		{ "trigger": "llRot2Euler\t(vector) function", "contents": "llRot2Euler(${1:rotation q})" },
		{ "trigger": "llRot2Fwd\t(vector) function", "contents": "llRot2Fwd(${1:rotation q})" },
		{ "trigger": "llRot2Left\t(vector) function", "contents": "llRot2Left(${1:rotation q})" },
		{ "trigger": "llRot2Up\t(vector) function", "contents": "llRot2Up(${1:rotation q})" },
		{ "trigger": "llRotBetween\t(rotation) function", "contents": "llRotBetween(${1:vector v1}, ${2:vector v2})" },
		{ "trigger": "llRotLookAt\t(void) function", "contents": "llRotLookAt(${1:rotation target}, ${2:float strength}, ${3:float damping})" },
		{ "trigger": "llRotTarget\t(integer) function", "contents": "llRotTarget(${1:rotation rot}, ${2:float error})" },
		{ "trigger": "llRotTargetRemove\t(void) function", "contents": "llRotTargetRemove(${1:integer number})" },
		{ "trigger": "llRotateTexture\t(void) function", "contents": "llRotateTexture(${1:float angle}, ${2:integer face})" },
		{ "trigger": "llRound\t(integer) function", "contents": "llRound(${1:float val})" },
		{ "trigger": "llSHA1String\t(string) function", "contents": "llSHA1String(${1:string src})" },
		{ "trigger": "llSameGroup\t(integer) function", "contents": "llSameGroup(${1:key id})" },
		{ "trigger": "llSay\t(void) function", "contents": "llSay(${1:integer channel}, ${2:string msg})" },
		{ "trigger": "llScaleByFactor\t(integer) function", "contents": "llScaleByFactor(${1:float scaling_factor})" },
		{ "trigger": "llScaleTexture\t(void) function", "contents": "llScaleTexture(${1:float u}, ${2:float v}, ${3:integer face})" },
		{ "trigger": "llScriptDanger\t(integer) function", "contents": "llScriptDanger(${1:vector pos})" },
		{ "trigger": "llScriptProfiler\t(void) function", "contents": "llScriptProfiler(${1:integer flags})" },
		{ "trigger": "llSendRemoteData\t(key) function", "contents": "llSendRemoteData(${1:key channel}, ${2:string dest}, ${3:integer idata}, ${4:string sdata})" },
		{ "trigger": "llSensor\t(void) function", "contents": "llSensor(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc})" },
		{ "trigger": "llSensorRemove\t(void) function", "contents": "llSensorRemove()" },
		{ "trigger": "llSensorRepeat\t(void) function", "contents": "llSensorRepeat(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc}, ${6:float rate})" },
		{ "trigger": "llSetAlpha\t(void) function", "contents": "llSetAlpha(${1:float alpha}, ${2:integer face})" },
		{ "trigger": "llSetAngularVelocity\t(void) function", "contents": "llSetAngularVelocity(${1:vector angular_velocity}, ${2:integer local})" },
		{ "trigger": "llSetAnimationOverride\t(void) function", "contents": "llSetAnimationOverride(${1:string anim_state}, ${2:string anim})" },
		{ "trigger": "llSetBuoyancy\t(void) function", "contents": "llSetBuoyancy(${1:float buoyancy})" },
		{ "trigger": "llSetCameraAtOffset\t(void) function", "contents": "llSetCameraAtOffset(${1:vector offset})" },
		{ "trigger": "llSetCameraEyeOffset\t(void) function", "contents": "llSetCameraEyeOffset(${1:vector offset})" },
		{ "trigger": "llSetCameraParams\t(void) function", "contents": "llSetCameraParams(${1:list rules})" },
		{ "trigger": "llSetClickAction\t(void) function", "contents": "llSetClickAction(${1:integer action})" },
		{ "trigger": "llSetColor\t(void) function", "contents": "llSetColor(${1:vector color}, ${2:integer face})" },
		{ "trigger": "llSetContentType\t(void) function", "contents": "llSetContentType(${1:key request_id}, ${2:integer content_type})" },
		{ "trigger": "llSetDamage\t(void) function", "contents": "llSetDamage(${1:float damage})" },
		{ "trigger": "llSetForce\t(void) function", "contents": "llSetForce(${1:vector force}, ${2:integer local})" },
		{ "trigger": "llSetForceAndTorque\t(void) function", "contents": "llSetForceAndTorque(${1:vector force}, ${2:vector torque}, ${3:integer local})" },
		{ "trigger": "llSetHoverHeight\t(void) function", "contents": "llSetHoverHeight(${1:float height}, ${2:integer water}, ${3:float tau})" },
		{ "trigger": "llSetKeyframedMotion\t(void) function", "contents": "llSetKeyframedMotion(${1:list keyframes}, ${2:list options})" },
		{ "trigger": "llSetLinkAlpha\t(void) function", "contents": "llSetLinkAlpha(${1:integer linknumber}, ${2:float alpha}, ${3:integer face})" },
		{ "trigger": "llSetLinkCamera\t(void) function", "contents": "llSetLinkCamera(${1:integer link}, ${2:vector eye}, ${3:vector at})" },
		{ "trigger": "llSetLinkColor\t(void) function", "contents": "llSetLinkColor(${1:integer linknumber}, ${2:vector color}, ${3:integer face})" },
		{ "trigger": "llSetLinkMedia\t(integer) function", "contents": "llSetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params})" },
		{ "trigger": "llSetLinkPrimitiveParams\t(void) function", "contents": "llSetLinkPrimitiveParams(${1:integer linknumber}, ${2:list rules})" },
		{ "trigger": "llSetLinkPrimitiveParamsFast\t(void) function", "contents": "llSetLinkPrimitiveParamsFast(${1:integer linknumber}, ${2:list rules})" },
		{ "trigger": "llSetLinkTexture\t(void) function", "contents": "llSetLinkTexture(${1:integer linknumber}, ${2:string texture}, ${3:integer face})" },
		{ "trigger": "llSetLinkTextureAnim\t(void) function", "contents": "llSetLinkTextureAnim(${1:integer link}, ${2:integer mode}, ${3:integer face}, ${4:integer sizex}, ${5:integer sizey}, ${6:float start}, ${7:float length}, ${8:float rate})" },
		{ "trigger": "llSetLocalRot\t(void) function", "contents": "llSetLocalRot(${1:rotation rot})" },
		{ "trigger": "llSetMemoryLimit\t(integer) function", "contents": "llSetMemoryLimit(${1:integer limit})" },
		{ "trigger": "llSetObjectDesc\t(void) function", "contents": "llSetObjectDesc(${1:string desc})" },
		{ "trigger": "llSetObjectName\t(void) function", "contents": "llSetObjectName(${1:string name})" },
		{ "trigger": "llSetParcelMusicURL\t(void) function", "contents": "llSetParcelMusicURL(${1:string url})" },
		{ "trigger": "llSetPayPrice\t(void) function", "contents": "llSetPayPrice(${1:integer price}, ${2:list quick_pay_buttons})" },
		{ "trigger": "llSetPhysicsMaterial\t(void) function", "contents": "llSetPhysicsMaterial(${1:integer flags}, ${2:float gravity_multiplier}, ${3:float restitution}, ${4:float friction}, ${5:float density})" },
		{ "trigger": "llSetPos\t(void) function", "contents": "llSetPos(${1:vector pos})" },
		{ "trigger": "llSetPrimMediaParams\t(integer) function", "contents": "llSetPrimMediaParams(${1:integer face}, ${2:list params})" },
		{ "trigger": "llSetPrimitiveParams\t(void) function", "contents": "llSetPrimitiveParams(${1:list rules})" },
		{ "trigger": "llSetRegionPos\t(integer) function", "contents": "llSetRegionPos(${1:vector pos})" },
		{ "trigger": "llSetRemoteScriptAccessPin\t(void) function", "contents": "llSetRemoteScriptAccessPin(${1:integer pin})" },
		{ "trigger": "llSetRot\t(void) function", "contents": "llSetRot(${1:rotation rot})" },
		{ "trigger": "llSetScale\t(void) function", "contents": "llSetScale(${1:vector scale})" },
		{ "trigger": "llSetScriptState\t(void) function", "contents": "llSetScriptState(${1:string name}, ${2:integer run})" },
		{ "trigger": "llSetSitText\t(void) function", "contents": "llSetSitText(${1:string text})" },
		{ "trigger": "llSetSoundQueueing\t(void) function", "contents": "llSetSoundQueueing(${1:integer queue})" },
		{ "trigger": "llSetSoundRadius\t(void) function", "contents": "llSetSoundRadius(${1:float radius})" },
		{ "trigger": "llSetStatus\t(void) function", "contents": "llSetStatus(${1:integer status}, ${2:integer value})" },
		{ "trigger": "llSetText\t(void) function", "contents": "llSetText(${1:string text}, ${2:vector color}, ${3:float alpha})" },
		{ "trigger": "llSetTexture\t(void) function", "contents": "llSetTexture(${1:string texture}, ${2:integer face})" },
		{ "trigger": "llSetTextureAnim\t(void) function", "contents": "llSetTextureAnim(${1:integer mode}, ${2:integer face}, ${3:integer sizex}, ${4:integer sizey}, ${5:float start}, ${6:float length}, ${7:float rate})" },
		{ "trigger": "llSetTimerEvent\t(void) function", "contents": "llSetTimerEvent(${1:float sec})" },
		{ "trigger": "llSetTorque\t(void) function", "contents": "llSetTorque(${1:vector torque}, ${2:integer local})" },
		{ "trigger": "llSetTouchText\t(void) function", "contents": "llSetTouchText(${1:string text})" },
		{ "trigger": "llSetVehicleFlags\t(void) function", "contents": "llSetVehicleFlags(${1:integer flags})" },
		{ "trigger": "llSetVehicleFloatParam\t(void) function", "contents": "llSetVehicleFloatParam(${1:integer param}, ${2:float value})" },
		{ "trigger": "llSetVehicleRotationParam\t(void) function", "contents": "llSetVehicleRotationParam(${1:integer param}, ${2:rotation rot})" },
		{ "trigger": "llSetVehicleType\t(void) function", "contents": "llSetVehicleType(${1:integer type})" },
		{ "trigger": "llSetVehicleVectorParam\t(void) function", "contents": "llSetVehicleVectorParam(${1:integer param}, ${2:vector vec})" },
		{ "trigger": "llSetVelocity\t(void) function", "contents": "llSetVelocity(${1:vector velocity}, ${2:integer local})" },
		{ "trigger": "llShout\t(void) function", "contents": "llShout(${1:integer channel}, ${2:string msg})" },
		{ "trigger": "llSin\t(float) function", "contents": "llSin(${1:float theta})" },
		{ "trigger": "llSitTarget\t(void) function", "contents": "llSitTarget(${1:vector offset}, ${2:rotation rot})" },
		{ "trigger": "llSleep\t(void) function", "contents": "llSleep(${1:float sec})" },
		{ "trigger": "llSqrt\t(float) function", "contents": "llSqrt(${1:float val})" },
		{ "trigger": "llStartAnimation\t(void) function", "contents": "llStartAnimation(${1:string anim})" },
		{ "trigger": "llStopAnimation\t(void) function", "contents": "llStopAnimation(${1:string anim})" },
		{ "trigger": "llStopHover\t(void) function", "contents": "llStopHover()" },
		{ "trigger": "llStopLookAt\t(void) function", "contents": "llStopLookAt()" },
		{ "trigger": "llStopMoveToTarget\t(void) function", "contents": "llStopMoveToTarget()" },
		{ "trigger": "llStopSound\t(void) function", "contents": "llStopSound()" },
		{ "trigger": "llStringLength\t(integer) function", "contents": "llStringLength(${1:string str})" },
		{ "trigger": "llStringToBase64\t(string) function", "contents": "llStringToBase64(${1:string str})" },
		{ "trigger": "llStringTrim\t(string) function", "contents": "llStringTrim(${1:string src}, ${2:integer trim_type})" },
		{ "trigger": "llSubStringIndex\t(integer) function", "contents": "llSubStringIndex(${1:string source}, ${2:string pattern})" },
		{ "trigger": "llTakeControls\t(void) function", "contents": "llTakeControls(${1:integer controls}, ${2:integer accept}, ${3:integer pass_on})" },
		{ "trigger": "llTan\t(float) function", "contents": "llTan(${1:float theta})" },
		{ "trigger": "llTarget\t(integer) function", "contents": "llTarget(${1:vector position}, ${2:float range})" },
		{ "trigger": "llTargetOmega\t(void) function", "contents": "llTargetOmega(${1:vector axis}, ${2:float spinrate}, ${3:float gain})" },
		{ "trigger": "llTargetRemove\t(void) function", "contents": "llTargetRemove(${1:integer number})" },
		{ "trigger": "llTeleportAgent\t(void) function", "contents": "llTeleportAgent(${1:key avatar}, ${2:string landmark}, ${3:vector position}, ${4:vector look_at})" },
		{ "trigger": "llTeleportAgentGlobalCoords\t(void) function", "contents": "llTeleportAgentGlobalCoords(${1:key agent}, ${2:vector global_coordinates}, ${3:vector region_coordinates}, ${4:vector look_at})" },
		{ "trigger": "llTeleportAgentHome\t(void) function", "contents": "llTeleportAgentHome(${1:key id})" },
		{ "trigger": "llTextBox\t(void) function", "contents": "llTextBox(${1:key avatar}, ${2:string message}, ${3:integer chat_channel})" },
		{ "trigger": "llToLower\t(string) function", "contents": "llToLower(${1:string src})" },
		{ "trigger": "llToUpper\t(string) function", "contents": "llToUpper(${1:string src})" },
		{ "trigger": "llTransferLindenDollars\t(key) function", "contents": "llTransferLindenDollars(${1:key destination}, ${2:integer amount})" },
		{ "trigger": "llTriggerSound\t(void) function", "contents": "llTriggerSound(${1:string sound}, ${2:float volume})" },
		{ "trigger": "llTriggerSoundLimited\t(void) function", "contents": "llTriggerSoundLimited(${1:string sound}, ${2:float volume}, ${3:vector top_north_east}, ${4:vector bottom_south_west})" },
		{ "trigger": "llUnSit\t(void) function", "contents": "llUnSit(${1:key id})" },
		{ "trigger": "llUnescapeURL\t(string) function", "contents": "llUnescapeURL(${1:string url})" },
		{ "trigger": "llVecDist\t(float) function", "contents": "llVecDist(${1:vector v1}, ${2:vector v2})" },
		{ "trigger": "llVecMag\t(float) function", "contents": "llVecMag(${1:vector v})" },
		{ "trigger": "llVecNorm\t(vector) function", "contents": "llVecNorm(${1:vector v})" },
		{ "trigger": "llVolumeDetect\t(void) function", "contents": "llVolumeDetect(${1:integer detect})" },
		{ "trigger": "llWater\t(float) function", "contents": "llWater(${1:vector offset})" },
		{ "trigger": "llWhisper\t(void) function", "contents": "llWhisper(${1:integer channel}, ${2:string msg})" },
		{ "trigger": "llWind\t(vector) function", "contents": "llWind(${1:vector offset})" },
		{ "trigger": "lsClearWindlightScene\t(void) function", "contents": "lsClearWindlightScene()" },
		{ "trigger": "lsGetWindlightScene\t(list) function", "contents": "lsGetWindlightScene(${1:list rules})" },
		{ "trigger": "lsSetWindlightScene\t(integer) function", "contents": "lsSetWindlightScene(${1:list rules})" },
		{ "trigger": "lsSetWindlightSceneTargeted\t(integer) function", "contents": "lsSetWindlightSceneTargeted(${1:list rules}, ${2:key target})" },
		{ "trigger": "osAgentSaveAppearance\t(key) function", "contents": "osAgentSaveAppearance(${1:key agentId}, ${2:string notecard})" },
		{ "trigger": "osAvatarName2Key\t(string) function", "contents": "osAvatarName2Key(${1:string firstname}, ${2:string lastname})" },
		{ "trigger": "osAvatarPlayAnimation\t(void) function", "contents": "osAvatarPlayAnimation(${1:string avatar}, ${2:string animation})" },
		{ "trigger": "osAvatarStopAnimation\t(void) function", "contents": "osAvatarStopAnimation(${1:string avatar}, ${2:string animation})" },
		{ "trigger": "osCauseDamage\t(void) function", "contents": "osCauseDamage(${1:string avatar}, ${2:float damage})" },
		{ "trigger": "osCauseHealing\t(void) function", "contents": "osCauseHealing(${1:string avatar}, ${2:float healing})" },
		{ "trigger": "osCheckODE\t(integer) function", "contents": "osCheckODE()" },
		{ "trigger": "osCollisionSound\t(void) function", "contents": "osCollisionSound(${1:string impact_sound}, ${2:float impact_volume})" },
		{ "trigger": "osConsoleCommand\t(integer) function", "contents": "osConsoleCommand(${1:string Command})" },
		{ "trigger": "osDie\t(void) function", "contents": "osDie(${1:key uuid})" },
		{ "trigger": "osDrawEllipse\t(string) function", "contents": "osDrawEllipse(${1:string drawList}, ${2:integer width}, ${3:integer height})" },
		{ "trigger": "osDrawFilledPolygon\t(string) function", "contents": "osDrawFilledPolygon(${1:string drawList}, ${2:list x}, ${3:list y})" },
		{ "trigger": "osDrawFilledRectangle\t(string) function", "contents": "osDrawFilledRectangle(${1:string drawList}, ${2:integer width}, ${3:integer height})" },
		{ "trigger": "osDrawImage\t(string) function", "contents": "osDrawImage(${1:string drawList}, ${2:integer width}, ${3:integer height}, ${4:string imageUrl})" },
		{ "trigger": "osDrawLine\t(string) function", "contents": "osDrawLine(${1:string drawList}, ${2:integer startX}, ${3:integer startY}, ${4:integer endX}, ${5:integer endY})" },
		{ "trigger": "osDrawPolygon\t(string) function", "contents": "osDrawPolygon(${1:string drawList}, ${2:list x}, ${3:list y})" },
		{ "trigger": "osDrawRectangle\t(string) function", "contents": "osDrawRectangle(${1:string drawList}, ${2:integer width}, ${3:integer height})" },
		{ "trigger": "osDrawText\t(string) function", "contents": "osDrawText(${1:string drawList}, ${2:string text})" },
		{ "trigger": "osDropAttachment\t(void) function", "contents": "osDropAttachment()" },
		{ "trigger": "osDropAttachmentAt\t(void) function", "contents": "osDropAttachmentAt(${1:vector pos}, ${2:rotation rot})" },
		{ "trigger": "osEjectFromGroup\t(integer) function", "contents": "osEjectFromGroup(${1:key agentId})" },
		{ "trigger": "osForceAttachToAvatar\t(void) function", "contents": "osForceAttachToAvatar(${1:integer attachment})" },
		{ "trigger": "osForceAttachToAvatarFromInventory\t(void) function", "contents": "osForceAttachToAvatarFromInventory(${1:string itemName}, ${2:integer attachment})" },
		{ "trigger": "osForceAttachToOtherAvatarFromInventory\t(void) function", "contents": "osForceAttachToOtherAvatarFromInventory(${1:string rawAvatarId}, ${2:string itemName}, ${3:integer attachmentPoint})" },
		{ "trigger": "osForceBreakAllLinks\t(void) function", "contents": "osForceBreakAllLinks()" },
		{ "trigger": "osForceBreakLink\t(void) function", "contents": "osForceBreakLink(${1:integer linknum})" },
		{ "trigger": "osForceCreateLink\t(void) function", "contents": "osForceCreateLink(${1:string target}, ${2:integer parent})" },
		{ "trigger": "osForceDetachFromAvatar\t(void) function", "contents": "osForceDetachFromAvatar()" },
		{ "trigger": "osForceDropAttachment\t(void) function", "contents": "osForceDropAttachment()" },
		{ "trigger": "osForceDropAttachmentAt\t(void) function", "contents": "osForceDropAttachmentAt(${1:vector pos}, ${2:rotation rot})" },
		{ "trigger": "osForceOtherSit\t(void) function", "contents": "osForceOtherSit(${1:string avatar}, ${2:string target})" },
		{ "trigger": "osFormatString\t(string) function", "contents": "osFormatString(${1:string str}, ${2:list strings})" },
		{ "trigger": "osGetAgentIP\t(string) function", "contents": "osGetAgentIP(${1:string agent})" },
		{ "trigger": "osGetAgents\t(list) function", "contents": "osGetAgents()" },
		{ "trigger": "osGetAvatarHomeURI\t(string) function", "contents": "osGetAvatarHomeURI(${1:string uuid})" },
		{ "trigger": "osGetAvatarList\t(list) function", "contents": "osGetAvatarList()" },
		{ "trigger": "osGetCurrentSunHour\t(float) function", "contents": "osGetCurrentSunHour()" },
		{ "trigger": "osGetDrawStringSize\t(vector) function", "contents": "osGetDrawStringSize(${1:string contentType}, ${2:string text}, ${3:string fontName}, ${4:integer fontSize})" },
		{ "trigger": "osGetGender\t(string) function", "contents": "osGetGender(${1:key rawAvatarId})" },
		{ "trigger": "osGetGridCustom\t(string) function", "contents": "osGetGridCustom(${1:string id})" },
		{ "trigger": "osGetGridGatekeeperURI\t(string) function", "contents": "osGetGridGatekeeperURI()" },
		{ "trigger": "osGetGridHomeURI\t(string) function", "contents": "osGetGridHomeURI()" },
		{ "trigger": "osGetGridLoginURI\t(string) function", "contents": "osGetGridLoginURI()" },
		{ "trigger": "osGetGridName\t(string) function", "contents": "osGetGridName()" },
		{ "trigger": "osGetGridNick\t(string) function", "contents": "osGetGridNick()" },
		{ "trigger": "osGetHealRate\t(float) function", "contents": "osGetHealRate(${1:string avatar})" },
		{ "trigger": "osGetHealth\t(float) function", "contents": "osGetHealth(${1:string avatar})" },
		{ "trigger": "osGetInventoryDesc\t(string) function", "contents": "osGetInventoryDesc(${1:string item})" },
		{ "trigger": "osGetLinkPrimitiveParams\t(list) function", "contents": "osGetLinkPrimitiveParams(${1:integer linknumber}, ${2:list rules})" },
		{ "trigger": "osGetMapTexture\t(key) function", "contents": "osGetMapTexture()" },
		{ "trigger": "osGetNotecard\t(string) function", "contents": "osGetNotecard(${1:string name})" },
		{ "trigger": "osGetNotecardLine\t(string) function", "contents": "osGetNotecardLine(${1:string name}, ${2:integer line})" },
		{ "trigger": "osGetNumberOfAttachments\t(list) function", "contents": "osGetNumberOfAttachments(${1:key avatar}, ${2:list attachmentPoints})" },
		{ "trigger": "osGetNumberOfNotecardLines\t(integer) function", "contents": "osGetNumberOfNotecardLines(${1:string name})" },
		{ "trigger": "osGetPhysicsEngineName\t(string) function", "contents": "osGetPhysicsEngineName()" },
		{ "trigger": "osGetPhysicsEngineType\t(string) function", "contents": "osGetPhysicsEngineType()" },
		{ "trigger": "osGetPrimitiveParams\t(list) function", "contents": "osGetPrimitiveParams(${1:key prim}, ${2:list rules})" },
		{ "trigger": "osGetRegionMapTexture\t(key) function", "contents": "osGetRegionMapTexture(${1:string regionName})" },
		{ "trigger": "osGetRegionSize\t(vector) function", "contents": "osGetRegionSize()" },
		{ "trigger": "osGetRegionStats\t(list) function", "contents": "osGetRegionStats()" },
		{ "trigger": "osGetRezzingObject\t(key) function", "contents": "osGetRezzingObject()" },
		{ "trigger": "osGetScriptEngineName\t(string) function", "contents": "osGetScriptEngineName()" },
		{ "trigger": "osGetSimulatorMemory\t(integer) function", "contents": "osGetSimulatorMemory()" },
		{ "trigger": "osGetSimulatorVersion\t(string) function", "contents": "osGetSimulatorVersion()" },
		{ "trigger": "osGetSunParam\t(float) function", "contents": "osGetSunParam(${1:string param})" },
		{ "trigger": "osGetTerrainHeight\t(float) function", "contents": "osGetTerrainHeight(${1:integer x}, ${2:integer y})" },
		{ "trigger": "osGetWindParam\t(float) function", "contents": "osGetWindParam(${1:string plugin}, ${2:string param})" },
		{ "trigger": "osInviteToGroup\t(integer) function", "contents": "osInviteToGroup(${1:key agentId})" },
		{ "trigger": "osIsNpc\t(integer) function", "contents": "osIsNpc(${1:key npc})" },
		{ "trigger": "osIsUUID\t(integer) function", "contents": "osIsUUID(${1:string thing})" },
		{ "trigger": "osKey2Name\t(string) function", "contents": "osKey2Name(${1:string id})" },
		{ "trigger": "osKickAvatar\t(void) function", "contents": "osKickAvatar(${1:string FirstName}, ${2:string SurName}, ${3:string alert})" },
		{ "trigger": "osList2Double\t(float) function", "contents": "osList2Double(${1:list src}, ${2:integer index})" },
		{ "trigger": "osListenRegex\t(integer) function", "contents": "osListenRegex(${1:integer channelID}, ${2:string name}, ${3:string ID}, ${4:string msg}, ${5:integer regexBitfield})" },
		{ "trigger": "osLoadedCreationDate\t(string) function", "contents": "osLoadedCreationDate()" },
		{ "trigger": "osLoadedCreationID\t(string) function", "contents": "osLoadedCreationID()" },
		{ "trigger": "osLoadedCreationTime\t(string) function", "contents": "osLoadedCreationTime()" },
		{ "trigger": "osMakeNotecard\t(void) function", "contents": "osMakeNotecard(${1:string notecardName}, ${2:list contents})" },
		{ "trigger": "osMatchString\t(list) function", "contents": "osMatchString(${1:string src}, ${2:string pattern}, ${3:integer start})" },
		{ "trigger": "osMax\t(float) function", "contents": "osMax(${1:float a}, ${2:float b})" },
		{ "trigger": "osMessageAttachments\t(void) function", "contents": "osMessageAttachments(${1:key avatar}, ${2:string message}, ${3:list attachmentPoints}, ${4:integer flags})" },
		{ "trigger": "osMessageObject\t(void) function", "contents": "osMessageObject(${1:key objectUUID}, ${2:string message})" },
		{ "trigger": "osMin\t(float) function", "contents": "osMin(${1:float a}, ${2:float b})" },
		{ "trigger": "osMovePen\t(string) function", "contents": "osMovePen(${1:string drawList}, ${2:integer x}, ${3:integer y})" },
		{ "trigger": "osNpcCreate\t(key) function", "contents": "osNpcCreate(${1:string user}, ${2:string name}, ${3:vector position}, ${4:string notecard})" },
		{ "trigger": "osNpcGetOwner\t(key) function", "contents": "osNpcGetOwner(${1:key npc})" },
		{ "trigger": "osNpcGetPos\t(vector) function", "contents": "osNpcGetPos(${1:key npc})" },
		{ "trigger": "osNpcGetRot\t(rotation) function", "contents": "osNpcGetRot(${1:key npc})" },
		{ "trigger": "osNpcLoadAppearance\t(void) function", "contents": "osNpcLoadAppearance(${1:key npc}, ${2:string notecard})" },
		{ "trigger": "osNpcMoveTo\t(void) function", "contents": "osNpcMoveTo(${1:key npc}, ${2:vector position})" },
		{ "trigger": "osNpcMoveToTarget\t(void) function", "contents": "osNpcMoveToTarget(${1:key npc}, ${2:vector target}, ${3:integer options})" },
		{ "trigger": "osNpcPlayAnimation\t(void) function", "contents": "osNpcPlayAnimation(${1:key npc}, ${2:string animation})" },
		{ "trigger": "osNpcRemove\t(void) function", "contents": "osNpcRemove(${1:key npc})" },
		{ "trigger": "osNpcSaveAppearance\t(key) function", "contents": "osNpcSaveAppearance(${1:key npc}, ${2:string notecard})" },
		{ "trigger": "osNpcSay\t(void) function", "contents": "osNpcSay(${1:key npc}, ${2:string message})" },
		{ "trigger": "osNpcSetProfileAbout\t(void) function", "contents": "osNpcSetProfileAbout(${1:key npc}, ${2:string about})" },
		{ "trigger": "osNpcSetProfileImage\t(void) function", "contents": "osNpcSetProfileImage(${1:key npc}, ${2:string image})" },
		{ "trigger": "osNpcSetRot\t(void) function", "contents": "osNpcSetRot(${1:key npc}, ${2:rotation rot})" },
		{ "trigger": "osNpcShout\t(void) function", "contents": "osNpcShout(${1:key npc}, ${2:integer channel}, ${3:string message})" },
		{ "trigger": "osNpcSit\t(void) function", "contents": "osNpcSit(${1:key npc}, ${2:key target}, ${3:integer options})" },
		{ "trigger": "osNpcStand\t(void) function", "contents": "osNpcStand(${1:key npc})" },
		{ "trigger": "osNpcStopAnimation\t(void) function", "contents": "osNpcStopAnimation(${1:key npc}, ${2:string animation})" },
		{ "trigger": "osNpcStopMoveToTarget\t(void) function", "contents": "osNpcStopMoveToTarget(${1:key npc})" },
		{ "trigger": "osNpcTouch\t(void) function", "contents": "osNpcTouch(${1:key npcLSL_Key}, ${2:key object_key}, ${3:integer link_num})" },
		{ "trigger": "osNpcWhisper\t(void) function", "contents": "osNpcWhisper(${1:key npc}, ${2:integer channel}, ${3:string message})" },
		{ "trigger": "osOwnerSaveAppearance\t(key) function", "contents": "osOwnerSaveAppearance(${1:string notecard})" },
		{ "trigger": "osParcelJoin\t(void) function", "contents": "osParcelJoin(${1:vector pos1}, ${2:vector pos2})" },
		{ "trigger": "osParcelSubdivide\t(void) function", "contents": "osParcelSubdivide(${1:vector pos1}, ${2:vector pos2})" },
		{ "trigger": "osRegexIsMatch\t(integer) function", "contents": "osRegexIsMatch(${1:string input}, ${2:string pattern})" },
		{ "trigger": "osRegionNotice\t(void) function", "contents": "osRegionNotice(${1:string msg})" },
		{ "trigger": "osRegionRestart\t(integer) function", "contents": "osRegionRestart(${1:float seconds})" },
		{ "trigger": "osReplaceString\t(string) function", "contents": "osReplaceString(${1:string src}, ${2:string pattern}, ${3:string replace}, ${4:integer count}, ${5:integer start})" },
		{ "trigger": "osRequestSecureURL\t(void) function", "contents": "osRequestSecureURL(${1:list options})" },
		{ "trigger": "osRequestURL\t(void) function", "contents": "osRequestURL(${1:list options})" },
		{ "trigger": "osSetContentType\t(void) function", "contents": "osSetContentType(${1:key id}, ${2:string type})" },
		{ "trigger": "osSetDynamicTextureData\t(string) function", "contents": "osSetDynamicTextureData(${1:string dynamicID}, ${2:string contentType}, ${3:string data}, ${4:string extraParams}, ${5:integer timer})" },
		{ "trigger": "osSetDynamicTextureDataBlend\t(string) function", "contents": "osSetDynamicTextureDataBlend(${1:string dynamicID}, ${2:string contentType}, ${3:string data}, ${4:string extraParams}, ${5:integer timer}, ${6:integer alpha})" },
		{ "trigger": "osSetDynamicTextureDataBlendFace\t(string) function", "contents": "osSetDynamicTextureDataBlendFace(${1:string dynamicID}, ${2:string contentType}, ${3:string data}, ${4:string extraParams}, ${5:integer blend}, ${6:integer disp}, ${7:integer timer}, ${8:integer alpha}, ${9:integer face})" },
		{ "trigger": "osSetDynamicTextureURL\t(string) function", "contents": "osSetDynamicTextureURL(${1:string dynamicID}, ${2:string contentType}, ${3:string url}, ${4:string extraParams}, ${5:integer timer})" },
		{ "trigger": "osSetDynamicTextureURLBlend\t(string) function", "contents": "osSetDynamicTextureURLBlend(${1:string dynamicID}, ${2:string contentType}, ${3:string url}, ${4:string extraParams}, ${5:integer timer}, ${6:integer alpha})" },
		{ "trigger": "osSetDynamicTextureURLBlendFace\t(string) function", "contents": "osSetDynamicTextureURLBlendFace(${1:string dynamicID}, ${2:string contentType}, ${3:string url}, ${4:string extraParams}, ${5:integer blend}, ${6:integer disp}, ${7:integer timer}, ${8:integer alpha}, ${9:integer face})" },
		{ "trigger": "osSetEstateSunSettings\t(void) function", "contents": "osSetEstateSunSettings(${1:integer sunFixed}, ${2:float sunHour})" },
		{ "trigger": "osSetFontName\t(string) function", "contents": "osSetFontName(${1:string drawList}, ${2:string fontName})" },
		{ "trigger": "osSetFontSize\t(string) function", "contents": "osSetFontSize(${1:string drawList}, ${2:integer fontSize})" },
		{ "trigger": "osSetHealRate\t(void) function", "contents": "osSetHealRate(${1:string avatar}, ${2:float healrate})" },
		{ "trigger": "osSetHealth\t(void) function", "contents": "osSetHealth(${1:string avatar}, ${2:float health})" },
		{ "trigger": "osSetParcelDetails\t(void) function", "contents": "osSetParcelDetails(${1:vector pos}, ${2:list rules})" },
		{ "trigger": "osSetParcelMediaURL\t(void) function", "contents": "osSetParcelMediaURL(${1:string url})" },
		{ "trigger": "osSetParcelSIPAddress\t(void) function", "contents": "osSetParcelSIPAddress(${1:string SIPAddress})" },
		{ "trigger": "osSetPenCap\t(string) function", "contents": "osSetPenCap(${1:string drawList}, ${2:string direction}, ${3:string type})" },
		{ "trigger": "osSetPenColor\t(string) function", "contents": "osSetPenColor(${1:string drawList}, ${2:string color})" },
		{ "trigger": "osSetPenSize\t(string) function", "contents": "osSetPenSize(${1:string drawList}, ${2:integer penSize})" },
		{ "trigger": "osSetPrimFloatOnWater\t(void) function", "contents": "osSetPrimFloatOnWater(${1:integer floatYN})" },
		{ "trigger": "osSetPrimitiveParams\t(void) function", "contents": "osSetPrimitiveParams(${1:key prim}, ${2:list rules})" },
		{ "trigger": "osSetProjectionParams\t(void) function", "contents": "osSetProjectionParams(${1:integer projection}, ${2:key texture}, ${3:float fov}, ${4:float focus}, ${5:float amb})" },
		{ "trigger": "osSetRegionSunSettings\t(void) function", "contents": "osSetRegionSunSettings(${1:integer useEstateSun}, ${2:integer sunFixed}, ${3:float sunHour})" },
		{ "trigger": "osSetRegionWaterHeight\t(void) function", "contents": "osSetRegionWaterHeight(${1:float height})" },
		{ "trigger": "osSetSpeed\t(void) function", "contents": "osSetSpeed(${1:key UUID}, ${2:float SpeedModifier})" },
		{ "trigger": "osSetStateEvents\t(void) function", "contents": "osSetStateEvents(${1:integer events})" },
		{ "trigger": "osSetSunParam\t(void) function", "contents": "osSetSunParam(${1:string param}, ${2:float value})" },
		{ "trigger": "osSetTerrainHeight\t(integer) function", "contents": "osSetTerrainHeight(${1:integer x}, ${2:integer y}, ${3:float val})" },
		{ "trigger": "osSetTerrainTexture\t(void) function", "contents": "osSetTerrainTexture(${1:integer level}, ${2:key texture})" },
		{ "trigger": "osSetTerrainTextureHeight\t(void) function", "contents": "osSetTerrainTextureHeight(${1:integer corner}, ${2:float low}, ${3:float high})" },
		{ "trigger": "osSetWindParam\t(void) function", "contents": "osSetWindParam(${1:string plugin}, ${2:string param}, ${3:float value})" },
		{ "trigger": "osTeleportAgent\t(void) function", "contents": "osTeleportAgent(${1:string agent}, ${2:string regionName}, ${3:vector position}, ${4:vector lookat})" },
		{ "trigger": "osTeleportOwner\t(void) function", "contents": "osTeleportOwner(${1:string regionName}, ${2:vector position}, ${3:vector lookat})" },
		{ "trigger": "osTerrainFlush\t(void) function", "contents": "osTerrainFlush()" },
		{ "trigger": "osUnixTimeToTimestamp\t(string) function", "contents": "osUnixTimeToTimestamp(${1:integer time})" },
		{ "trigger": "osVolumeDetect\t(void) function", "contents": "osVolumeDetect(${1:integer detect})" },
		{ "trigger": "osWindActiveModelPluginName\t(string) function", "contents": "osWindActiveModelPluginName()" }
	]
}