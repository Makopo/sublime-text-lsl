<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<!--

(C) Copyright 2012 Linden Research, Inc.
(C) Copyright 2013-2016 Sei Lisa.
Sei Lisa is the username of one of the authors in the Second Life online
virtual world.

    LSL2 Keywords Database

    LSL2 Keywords Database is free software: you can redistribute it
    and/or modify it under the terms of the GNU Lesser General Public License
    as published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    LSL2 Keywords Database is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with LSL2 Keywords Database. If not, see
    <http://www.gnu.org/licenses/>.

Second Life is a trademark of Linden Research, Inc.

-->

<!--

Currently supported grids (LSL dialects):
sl - Second Life
os - OpenSim
aa - AuroraSim

The grid= attribute can be omitted, meaning all supported grids.
If included, it should be a list of space-separated supported grids.
Example: grid="os aa"

-->

<!-- DOCTYPE keywords SYSTEM "kwdb.dtd" -->
<!-- Declare the DTD here to avoid problems with the Python parser we use -->

<!DOCTYPE keywords [

<!ELEMENT keywords (grid*, (keyword | type | constant | function | event)*,
                    (defaults, (keyword | type | constant | function | event)*)?)>
<!ATTLIST keywords
          version CDATA #REQUIRED>
<!ELEMENT grid (#PCDATA)>
<!ATTLIST grid
          id NMTOKEN #REQUIRED
          version CDATA #IMPLIED
          >
<!ELEMENT defaults (description*)>
<!ELEMENT keyword (description*)>
<!ATTLIST keyword
          name CDATA #REQUIRED
          grid NMTOKENS #IMPLIED
          status (normal | unimplemented) "normal">
<!ELEMENT type (description*)>
<!ATTLIST type
          name ID #REQUIRED
          grid NMTOKENS #IMPLIED>
<!ELEMENT constant (description*)>
<!ATTLIST constant
          name CDATA #REQUIRED
          grid NMTOKENS #IMPLIED
          type IDREF #REQUIRED
          value CDATA #IMPLIED
          version CDATA #IMPLIED
          status (normal | deprecated | unimplemented) "normal">
<!ELEMENT function (param | description)*>
<!ATTLIST function
          name CDATA #REQUIRED
          grid NMTOKENS #IMPLIED
          type IDREF #IMPLIED
          delay CDATA "0."
          energy CDATA "10."
          version CDATA #IMPLIED
          status (normal | deprecated | godmode | unimplemented) "normal">
<!ELEMENT event (param | description)*>
<!ATTLIST event
          name CDATA #REQUIRED
          version CDATA #IMPLIED
          grid NMTOKENS #IMPLIED>
<!ELEMENT description (#PCDATA)>
<!ATTLIST description
          lang NMTOKENS #REQUIRED>
<!ELEMENT param EMPTY>
<!ATTLIST param
          name CDATA #REQUIRED
          type IDREF #REQUIRED>

]>

<keywords version="0.0.20160606000">
  <!--The OpenSim/Aurora functions, constants and types are based on the following revisions:

      OpenSim revision 0.7.5-rc1
          http://dist.opensimulator.org/opensim-0.7.5-rc1-source.tar.gz

      AuroraSim revision 0049c9335f8b91ab119ce4fee5ba1d50d4f6f017
          https://github.com/aurora-sim/Aurora-Sim/commit/0049c9335f8b91ab119ce4fee5ba1d50d4f6f017
  -->

  <!-- Grids supported and their versions -->
  <grid id="sl" version="16.05.24.315768">Second Life</grid>
  <grid id="os" version="v0.7.5-rc1">OpenSimulator</grid>
  <grid id="aa" version="0049c9335f8b91ab119ce4fee5ba1d50d4f6f017">Aurora-Sim</grid>

  <!-- Defaults for absent descriptions -->
  <defaults>
    <description lang="en">
(No Description)
    </description>
  </defaults>

  <!-- Language keywords -->

  <keyword name="default">
    <description lang="en">
Name of default state that all scripts must have
    </description>
  </keyword>

  <keyword name="state">
    <description lang="en">
Keyword to indicate state block or state transition
    </description>
  </keyword>

  <keyword name="event" status="unimplemented" grid="sl"/>

  <keyword name="jump">
    <description lang="en">
jump statement
jump label;

    </description>
  </keyword>

  <keyword name="return">
    <description lang="en">
Leave current function or event handler
    </description>
  </keyword>

  <keyword name="if">
    <description lang="en">
if statement
if (test)
{    statements
}
    </description>
  </keyword>

  <keyword name="else">
    <description lang="en">
else clause
if (test)
{    statements
}
else
{    statements
}
    </description>
  </keyword>

  <keyword name="for">
    <description lang="en">
for loop
for (initializer; test; iteration)
{
   statements
}
    </description>
  </keyword>

  <keyword name="do">
    <description lang="en">
do loop
do
{
   statements
} while (test);
    </description>
  </keyword>

  <keyword name="while">
    <description lang="en">
while loop
while (test)
{    statements
}
    </description>
  </keyword>

  <keyword name="print" grid="sl"/>


  <!-- Language types -->

  <type name="integer">
    <description lang="en">
Integer type
    </description>
  </type>

  <type name="float">
    <description lang="en">
Floating-point type
    </description>
  </type>

  <type name="string">
    <description lang="en">
String type
    </description>
  </type>

  <type name="key">
    <description lang="en">
Key type. Use NULL_KEY to test for empty keys.
    </description>
  </type>

  <type name="vector">
    <description lang="en">
Vector type of 3 floats. Used to represent 3D motion, Euler angles, and color.
Access components by .x, .y, or .z
    </description>
  </type>

  <type name="rotation">
    <description lang="en">
Rotation type of 4 floats. Used to represent rotation.
Access components by .x, .y, .z, or .s
    </description>
  </type>

  <type name="quaternion">
    <description lang="en">
Rotation type of 4 floats. Used to represent rotation.
Access components by .x, .y, .z, or .s
    </description>
  </type>

  <type name="list">
    <description lang="en">
List of various data types
    </description>
  </type>

  <type name="bool" grid="os aa">
    <description lang="en">
Boolean type, either TRUE or FALSE
    </description>
  </type>

<!-- Not included:
  <type name="DateTime" grid="aa">
    <description lang="en">
Type for a date and time value
    </description>
  </type>
-->


  <!-- Language constants

       In LSL, TRUE and FALSE are actually keywords, not constants.
       The main difference between TRUE/FALSE and a constant is that
       you can write in globals: integer j = -CONSTANT;
       but you can't write: integer j = -TRUE; or -FALSE
       (although it is allowed in local definitions).

       However, the subtle difference doesn't justify them
       being treated as anything but constants. After all,
       internally, LSL constants are keywords too.
  -->

  <constant name="TRUE" type="integer" value="1">
    <description lang="en">
Integer constant for Boolean operations
    </description>
  </constant>

  <constant name="FALSE" type="integer" value="0">
    <description lang="en">
Integer constant for Boolean operations
    </description>
  </constant>

  <constant name="STATUS_PHYSICS" type="integer" value="0x1">
    <description lang="en">
Passed in the llSetStatus library function. If TRUE, object moves physically.
    </description>
  </constant>

  <constant name="STATUS_PHANTOM" type="integer" value="0x10">
    <description lang="en">
Passed in the llSetStatus library function. If TRUE, object doesn't collide with other objects.
    </description>
  </constant>

  <constant name="STATUS_ROTATE_X" type="integer" value="0x2">
    <description lang="en">
Passed in the llSetStatus library function. If FALSE, object doesn't rotate around local X axis.
    </description>
  </constant>

  <constant name="STATUS_ROTATE_Y" type="integer" value="0x4">
    <description lang="en">
Passed in the llSetStatus library function. If FALSE, object doesn't rotate around local Y axis.
    </description>
  </constant>

  <constant name="STATUS_ROTATE_Z" type="integer" value="0x8">
    <description lang="en">
Passed in the llSetStatus library function. If FALSE, object doesn't rotate around local Z axis.
    </description>
  </constant>

  <constant name="STATUS_SANDBOX" type="integer" value="0x20">
    <description lang="en">
Passed in the llSetStatus library function. If TRUE, object can't cross region boundaries or move more than 10 meters from its start location.
    </description>
  </constant>

  <constant name="STATUS_BLOCK_GRAB" type="integer" value="0x40" version="sl:0.2.0">
    <description lang="en">
Passed in the llSetStatus library function. If TRUE, object can't be grabbed and physically dragged.
    </description>
  </constant>

  <constant name="STATUS_BLOCK_GRAB_OBJECT" type="integer" value="0x400" grid="sl aa">
    <description lang="en">
Passed in the llSetStatus library function. If TRUE, the object can't be moved by grabs.
This flag applies to the entire linkset.
    </description>
  </constant>

  <constant name="STATUS_DIE_AT_EDGE" type="integer" value="0x80" version="sl:0.2.0">
    <description lang="en">
Passed in the llSetStatus library function. If TRUE, objects that reach the edge of the world just die
rather than teleporting back to the owner.
    </description>
  </constant>

  <constant name="STATUS_RETURN_AT_EDGE" type="integer" value="0x100" version="sl:1.5.0">
    <description lang="en">
Passed in the llSetStatus library function. If TRUE, script rezzed objects that reach the edge of the world are returned rather than killed.
STATUS_RETURN_AT_EDGE trumps STATUS_DIE_AT_EDGE if both are set.
    </description>
  </constant>

  <constant name="STATUS_CAST_SHADOWS" type="integer" value="0x200">
    <description lang="en">
Passed in the llSetStatus library function. If TRUE, object casts shadows on other objects.
    </description>
  </constant>

  <constant name="AGENT" type="integer" value="0x1">
    <description lang="en">
Passed in llSensor library function to look for other Agents (by Legacy name if filtered)
    </description>
  </constant>

  <constant name="AGENT_BY_USERNAME" type="integer" value="0x10">
    <description lang="en">
Passed in llSensor library function to look for other Agents, filtering by username
    </description>
  </constant>

  <constant name="AGENT_BY_LEGACY_NAME" type="integer" value="0x1">
    <description lang="en">
Passed in llSensor library function to look for other Agents, filtering by legacy name
    </description>
  </constant>

  <constant name="ACTIVE" type="integer" value="0x2">
    <description lang="en">
Passed in llSensor library function to look for moving objects
    </description>
  </constant>

  <constant name="PASSIVE" type="integer" value="0x4">
    <description lang="en">
Passed in llSensor library function to look for objects that aren't moving
    </description>
  </constant>

  <constant name="SCRIPTED" type="integer" value="0x8">
    <description lang="en">
Passed in llSensor library function to look for scripted objects
    </description>
  </constant>

  <constant name="CONTROL_FWD" type="integer" value="0x1">
    <description lang="en">
Passed to llTakeControls library function and used control event handler to test for agent forward control
    </description>
  </constant>

  <constant name="CONTROL_BACK" type="integer" value="0x2">
    <description lang="en">
Passed to llTakeControls library function and used control event handler to test for agent back control
    </description>
  </constant>

  <constant name="CONTROL_LEFT" type="integer" value="0x4">
    <description lang="en">
Passed to llTakeControls library function and used control event handler to test for agent left control
    </description>
  </constant>

  <constant name="CONTROL_RIGHT" type="integer" value="0x8">
    <description lang="en">
Passed to llTakeControls library function and used control event handler to test for agent right control
    </description>
  </constant>

  <constant name="CONTROL_ROT_LEFT" type="integer" value="0x100">
    <description lang="en">
Passed to llTakeControls library function and used control event handler to test for agent rotate left control
    </description>
  </constant>

  <constant name="CONTROL_ROT_RIGHT" type="integer" value="0x200">
    <description lang="en">
Passed to llTakeControls library function and used control event handler to test for agent rotate right control
    </description>
  </constant>

  <constant name="CONTROL_UP" type="integer" value="0x10">
    <description lang="en">
Passed to llTakeControls library function and used control event handler to test for agent up control
    </description>
  </constant>

  <constant name="CONTROL_DOWN" type="integer" value="0x20">
    <description lang="en">
Passed to llTakeControls library function and used control event handler to test for agent down control
    </description>
  </constant>

  <constant name="CONTROL_LBUTTON" type="integer" value="0x10000000">
    <description lang="en">
Passed to llTakeControls library function and used control event handler to test for agent left button control
    </description>
  </constant>

  <constant name="CONTROL_ML_LBUTTON" type="integer" value="0x40000000">
    <description lang="en">
Passed to llTakeControls library function and used control event handler to test for agent left button control with the agent in mouse look
    </description>
  </constant>

  <constant name="PERMISSION_DEBIT" type="integer" value="0x2">
    <description lang="en">
Passed to llRequestPermissions library function to request permission to take L$ from agent's account
    </description>
  </constant>

  <constant name="PERMISSION_TAKE_CONTROLS" type="integer" value="0x4">
    <description lang="en">
Passed to llRequestPermissions library function to request permission to take agent's controls
    </description>
  </constant>

  <constant name="PERMISSION_REMAP_CONTROLS" type="integer" value="0x8" status="unimplemented">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PERMISSION_TRIGGER_ANIMATION" type="integer" value="0x10">
    <description lang="en">
Passed to llRequestPermissions library function to request permission to trigger animation on agent
    </description>
  </constant>

  <constant name="PERMISSION_ATTACH" type="integer" value="0x20">
    <description lang="en">
Passed to llRequestPermissions library function to request permission to attach/detach from agent
    </description>
  </constant>

  <constant name="PERMISSION_RELEASE_OWNERSHIP" type="integer" value="0x40" status="unimplemented">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PERMISSION_CHANGE_LINKS" type="integer" value="0x80">
    <description lang="en">
Passed to llRequestPermissions library function to request permission to change links
    </description>
  </constant>

  <constant name="PERMISSION_CHANGE_JOINTS" type="integer" value="0x100" status="unimplemented">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PERMISSION_CHANGE_PERMISSIONS" type="integer" value="0x200" status="unimplemented">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PERMISSION_TRACK_CAMERA" type="integer" value="0x400">
    <description lang="en">
Passed to llRequestPermissions library function to request permission to track agent's camera
    </description>
  </constant>

  <constant name="PERMISSION_CONTROL_CAMERA" type="integer" value="0x800" version="sl:1.9.0(15)">
    <description lang="en">
Passed to llRequestPermissions library function to request permission to change agent's camera
    </description>
  </constant>

  <constant name="PERMISSION_TELEPORT" type="integer" value="0x1000" grid="sl aa">
    <description lang="en">
Passed to llRequestPermissions library function to request permission to teleport an agent
    </description>
  </constant>

  <constant name="PERMISSION_SILENT_ESTATE_MANAGEMENT" type="integer" value="0x4000" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PERMISSION_OVERRIDE_ANIMATIONS" type="integer" value="0x8000" grid="sl">
    <description lang="en">
Passed to llRequestPermissions library function to request permission to override animations
    </description>
  </constant>

  <constant name="PERMISSION_RETURN_OBJECTS" type="integer" value="0x10000" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PERMISSION_COMBAT" type="integer" value="0x2004" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>


  <constant name="DEBUG_CHANNEL" type="integer" value="0x7FFFFFFF" version="sl:1.9.0(15)">
    <description lang="en">
Chat channel reserved for debug and error messages from scripts
    </description>
  </constant>

  <constant name="PUBLIC_CHANNEL" type="integer" value="0">
    <description lang="en">
Chat channel that broadcasts to all nearby users
    </description>
  </constant>

  <constant name="AGENT_FLYING" type="integer" value="0x1" version="sl:0.4.0">
    <description lang="en">
Returned by llGetAgentInfo if the Agent is flying
    </description>
  </constant>

  <constant name="AGENT_ATTACHMENTS" type="integer" value="0x2" version="sl:0.4.0">
    <description lang="en">
Returned by llGetAgentInfo if the Agent has attachments
    </description>
  </constant>

  <constant name="AGENT_SCRIPTED" type="integer" value="0x4" version="sl:0.4.0">
    <description lang="en">
Returned by llGetAgentInfo if the Agent has scripted attachments
    </description>
  </constant>

  <constant name="AGENT_SITTING" type="integer" value="0x10">
    <description lang="en">
Returned by llGetAgentInfo if the Agent is sitting
    </description>
  </constant>

  <constant name="AGENT_ON_OBJECT" type="integer" value="0x20">
    <description lang="en">
Returned by llGetAgentInfo if the Agent is sitting on an object
    </description>
  </constant>

  <constant name="AGENT_MOUSELOOK" type="integer" value="0x8">
    <description lang="en">
Returned by llGetAgentInfo if the Agent is in mouselook
    </description>
  </constant>

  <constant name="AGENT_AWAY" type="integer" value="0x40">
    <description lang="en">
Returned by llGetAgentInfo if the Agent is in away mode
    </description>
  </constant>

  <constant name="AGENT_WALKING" type="integer" value="0x80">
    <description lang="en">
Returned by llGetAgentInfo if the Agent is walking
    </description>
  </constant>

  <constant name="AGENT_IN_AIR" type="integer" value="0x100">
    <description lang="en">
Returned by llGetAgentInfo if the Agent is in the air
    </description>
  </constant>

  <constant name="AGENT_TYPING" type="integer" value="0x200">
    <description lang="en">
Returned by llGetAgentInfo if the Agent is typing
    </description>
  </constant>

  <constant name="AGENT_CROUCHING" type="integer" value="0x400">
    <description lang="en">
Returned by llGetAgentInfo if the Agent is crouching
    </description>
  </constant>

  <constant name="AGENT_BUSY" type="integer" value="0x800">
    <description lang="en">
Returned by llGetAgentInfo if the Agent is busy
    </description>
  </constant>

  <constant name="AGENT_ALWAYS_RUN" type="integer" value="0x1000">
    <description lang="en">
Returned by llGetAgentInfo if the Agent has 'Always Run' enabled
    </description>
  </constant>

  <constant name="AGENT_AUTOPILOT" type="integer" value="0x2000" grid="sl">
    <description lang="en">
Returned by llGetAgentInfo if the Agent is under autopilot control
    </description>
  </constant>

  <constant name="AGENT_LIST_PARCEL" type="integer" value="1">
    <description lang="en">
Passed to llGetAgentList to return only agents on the same parcel where the script is running
    </description>
  </constant>

  <constant name="AGENT_LIST_PARCEL_OWNER" type="integer" value="2">
    <description lang="en">
Passed to llGetAgentList to return only agents on any parcel in the region where the parcel owner is the same as the owner of the parcel under the scripted object
    </description>
  </constant>

  <constant name="AGENT_LIST_REGION" type="integer" value="4">
    <description lang="en">
Passed to llGetAgentList to return any/all agents in the region
    </description>
  </constant>

  <constant name="PSYS_PART_FLAGS" type="integer" value="0"/>
  <constant name="PSYS_PART_START_COLOR" type="integer" value="1"/>
  <constant name="PSYS_PART_START_ALPHA" type="integer" value="2"/>
  <constant name="PSYS_PART_START_SCALE" type="integer" value="5"/>
  <constant name="PSYS_PART_END_COLOR" type="integer" value="3"/>
  <constant name="PSYS_PART_END_ALPHA" type="integer" value="4"/>
  <constant name="PSYS_PART_END_SCALE" type="integer" value="6"/>
  <constant name="PSYS_PART_MAX_AGE" type="integer" value="7"/>
  <constant name="PSYS_PART_INTERP_COLOR_MASK" type="integer" value="0x1"/>
  <constant name="PSYS_PART_INTERP_SCALE_MASK" type="integer" value="0x2"/>
  <constant name="PSYS_PART_BOUNCE_MASK" type="integer" value="0x4"/>
  <constant name="PSYS_PART_WIND_MASK" type="integer" value="0x8"/>
  <constant name="PSYS_PART_FOLLOW_SRC_MASK" type="integer" value="0x10"/>
  <constant name="PSYS_PART_FOLLOW_VELOCITY_MASK" type="integer" value="0x20"/>
  <constant name="PSYS_PART_TARGET_POS_MASK" type="integer" value="0x40"/>
  <constant name="PSYS_PART_TARGET_LINEAR_MASK" type="integer" value="0x80"/>
  <constant name="PSYS_PART_EMISSIVE_MASK" type="integer" value="0x100"/>
  <constant name="PSYS_PART_RIBBON_MASK" type="integer" value="0x400" grid="sl"/>
  <constant name="PSYS_SRC_PATTERN" type="integer" value="9"/>
  <constant name="PSYS_PART_BF_ONE" type="integer" value="0" grid="sl"/>
  <constant name="PSYS_PART_BF_ZERO" type="integer" value="1" grid="sl"/>
  <constant name="PSYS_PART_BF_DEST_COLOR" type="integer" value="2" grid="sl"/>
  <constant name="PSYS_PART_BF_SOURCE_COLOR" type="integer" value="3" grid="sl"/>
  <constant name="PSYS_PART_BF_ONE_MINUS_DEST_COLOR" type="integer" value="4" grid="sl"/>
  <constant name="PSYS_PART_BF_ONE_MINUS_SOURCE_COLOR" type="integer" value="5" grid="sl"/>
  <constant name="PSYS_PART_BF_SOURCE_ALPHA" type="integer" value="7" grid="sl"/>
  <constant name="PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA" type="integer" value="9" grid="sl"/>

  <constant name="PSYS_SRC_INNERANGLE" type="integer" value="10" status="deprecated">
    <description lang="en">
Deprecated -- Use PSYS_SRC_ANGLE_BEGIN
    </description>
  </constant>

  <constant name="PSYS_SRC_OUTERANGLE" type="integer" value="11" status="deprecated">
    <description lang="en">
Deprecated -- Use PSYS_SRC_ANGLE_END
    </description>
  </constant>

  <constant name="PSYS_SRC_ANGLE_BEGIN" type="integer" value="22"/>
  <constant name="PSYS_SRC_ANGLE_END" type="integer" value="23"/>
  <constant name="PSYS_SRC_BURST_RATE" type="integer" value="13"/>
  <constant name="PSYS_SRC_BURST_PART_COUNT" type="integer" value="15"/>
  <constant name="PSYS_SRC_BURST_RADIUS" type="integer" value="16"/>
  <constant name="PSYS_SRC_BURST_SPEED_MIN" type="integer" value="17"/>
  <constant name="PSYS_SRC_BURST_SPEED_MAX" type="integer" value="18"/>
  <constant name="PSYS_SRC_MAX_AGE" type="integer" value="19"/>
  <constant name="PSYS_SRC_ACCEL" type="integer" value="8"/>
  <constant name="PSYS_SRC_TEXTURE" type="integer" value="12"/>
  <constant name="PSYS_SRC_TARGET_KEY" type="integer" value="20"/>
  <constant name="PSYS_SRC_OMEGA" type="integer" value="21"/>
  <constant name="PSYS_SRC_PATTERN_DROP" type="integer" value="1"/>
  <constant name="PSYS_SRC_PATTERN_EXPLODE" type="integer" value="2"/>
  <constant name="PSYS_SRC_PATTERN_ANGLE" type="integer" value="4"/>
  <constant name="PSYS_SRC_PATTERN_ANGLE_CONE" type="integer" value="8"/>
  <constant name="PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY" type="integer" value="16"/>
  <constant name="PSYS_SRC_OBJ_REL_MASK" type="integer" value="1" status="unimplemented" grid="sl"/>
  <constant name="PSYS_PART_BLEND_FUNC_SOURCE" type="integer" value="24" grid="sl"/>
  <constant name="PSYS_PART_BLEND_FUNC_DEST" type="integer" value="25" grid="sl"/>
  <constant name="PSYS_PART_START_GLOW" type="integer" value="26" grid="sl"/>
  <constant name="PSYS_PART_END_GLOW" type="integer" value="27" grid="sl"/>

  <constant name="OBJECT_UNKNOWN_DETAIL" type="integer" value="-1" version="sl:1.18.3(5)">
    <description lang="en">
Returned by llGetObjectDetails when passed an invalid object parameter type
    </description>
  </constant>

  <constant name="OBJECT_NAME" type="integer" value="1" version="sl:1.18.3(5)">
    <description lang="en">
Used with llGetObjectDetails to get an object's name
    </description>
  </constant>

  <constant name="OBJECT_DESC" type="integer" value="2" version="sl:1.18.3(5)">
    <description lang="en">
Used with llGetObjectDetails to get an object's description
    </description>
  </constant>

  <constant name="OBJECT_POS" type="integer" value="3" version="sl:1.18.3(5)">
    <description lang="en">
Used with llGetObjectDetails to get an object's position
    </description>
  </constant>

  <constant name="OBJECT_ROT" type="integer" value="4" version="sl:1.18.3(5)">
    <description lang="en">
Used with llGetObjectDetails to get an object's rotation
    </description>
  </constant>

  <constant name="OBJECT_VELOCITY" type="integer" value="5" version="sl:1.18.3(5)">
    <description lang="en">
Used with llGetObjectDetails to get an object's velocity
    </description>
  </constant>

  <constant name="OBJECT_OWNER" type="integer" value="6" version="sl:1.18.3(5)">
    <description lang="en">
Used with llGetObjectDetails to get an object's owner's key. Will be NULL_KEY if group owned.
    </description>
  </constant>

  <constant name="OBJECT_GROUP" type="integer" value="7" version="sl:1.18.3(5)">
    <description lang="en">
Used with llGetObjectDetails to get an object's group's key
    </description>
  </constant>

  <constant name="OBJECT_CREATOR" type="integer" value="8" version="sl:1.18.3(5)">
    <description lang="en">
Used with llGetObjectDetails to get an object's creator's key
    </description>
  </constant>

  <constant name="OBJECT_RUNNING_SCRIPT_COUNT" type="integer" value="9">
    <description lang="en">
Used with llGetObjectDetails to get the number of running scripts attached to the object or agent
    </description>
  </constant>

  <constant name="OBJECT_TOTAL_SCRIPT_COUNT" type="integer" value="10">
    <description lang="en">
Used with llGetObjectDetails to get the number of scripts, both running and stopped, attached to the object or agent
    </description>
  </constant>

  <constant name="OBJECT_SCRIPT_MEMORY" type="integer" value="11">
    <description lang="en">
Used with llGetObjectDetails to get the total amount of script memory allocated to the object or agent, in bytes
    </description>
  </constant>

  <constant name="OBJECT_SCRIPT_TIME" type="integer" value="12">
    <description lang="en">
Used with llGetObjectDetails to get the average script CPU time (in seconds) an object/avatar is using
    </description>
  </constant>

  <constant name="OBJECT_PRIM_EQUIVALENCE" type="integer" value="13">
    <description lang="en">
Used with llGetObjectDetails to get the prim equivalence (land impact) of the object
    </description>
  </constant>

  <constant name="OBJECT_PHYSICS_COST" type="integer" value="16">
    <description lang="en">
Used with llGetObjectDetails to get the physics cost
    </description>
  </constant>

  <constant name="OBJECT_SERVER_COST" type="integer" value="14">
    <description lang="en">
Used with llGetObjectDetails to get the server cost
    </description>
  </constant>

  <constant name="OBJECT_STREAMING_COST" type="integer" value="15">
    <description lang="en">
Used with llGetObjectDetails to get the streaming (download) cost
    </description>
  </constant>

  <constant name="OBJECT_CHARACTER_TIME" type="integer" value="17" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_ROOT" type="integer" value="18" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_ATTACHED_POINT" type="integer" value="19" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_PATHFINDING_TYPE" type="integer" value="20" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_RENDER_WEIGHT" type="integer" value="24" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_HOVER_HEIGHT" type="integer" value="25" grid="sl" version="sl:15.04.08.300724">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_BODY_SHAPE_TYPE" type="integer" value="26" grid="sl" version="sl:15.04.08.300724">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_LAST_OWNER_ID" type="integer" value="27" grid="sl" version="sl:15.04.24.301279">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_CLICK_ACTION" type="integer" value="28" grid="sl" version="sl:15.09.14.305056">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_OMEGA" type="integer" value="29" grid="sl" version="sl:15.12.01.308474">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

<!-- Never implemented, removed:
  <constant name="OBJECT_ATTACHMENT_GEOMETRY_BYTES" type="integer" value="25" grid="sl"/>
  <constant name="OBJECT_ATTACHMENT_SURFACE_AREA" type="integer" value="26" grid="sl"/>
-->

  <constant name="OPT_AVATAR" type="integer" value="1" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OPT_CHARACTER" type="integer" value="2" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OPT_EXCLUSION_VOLUME" type="integer" value="6" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OPT_LEGACY_LINKSET" type="integer" value="0" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OPT_MATERIAL_VOLUME" type="integer" value="5" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OPT_OTHER" type="integer" value="-1" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OPT_STATIC_OBSTACLE" type="integer" value="4" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OPT_WALKABLE" type="integer" value="3" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="VEHICLE_TYPE_NONE" type="integer" value="0"/>
  <constant name="VEHICLE_TYPE_SLED" type="integer" value="1"/>
  <constant name="VEHICLE_TYPE_CAR" type="integer" value="2"/>
  <constant name="VEHICLE_TYPE_BOAT" type="integer" value="3"/>
  <constant name="VEHICLE_TYPE_AIRPLANE" type="integer" value="4"/>
  <constant name="VEHICLE_TYPE_BALLOON" type="integer" value="5"/>

  <constant name="VEHICLE_REFERENCE_FRAME" type="integer" value="44" version="sl:1.1.0">
    <description lang="en">
Rotation of vehicle axes relative to local frame
    </description>
  </constant>

  <constant name="VEHICLE_LINEAR_FRICTION_TIMESCALE" type="integer" value="16">
    <description lang="en">
A vector of timescales for exponential decay of linear velocity along the three vehicle axes
    </description>
  </constant>

  <constant name="VEHICLE_ANGULAR_FRICTION_TIMESCALE" type="integer" value="17">
    <description lang="en">
A vector of timescales for exponential decay of angular velocity about the three vehicle axes
    </description>
  </constant>

  <constant name="VEHICLE_LINEAR_MOTOR_DIRECTION" type="integer" value="18">
    <description lang="en">
The linear velocity that the vehicle will try to achieve
    </description>
  </constant>

  <constant name="VEHICLE_LINEAR_MOTOR_OFFSET" type="integer" value="20">
    <description lang="en">
An offset from the center of mass of the vehicle where the linear motor is applied
    </description>
  </constant>

  <constant name="VEHICLE_ANGULAR_MOTOR_DIRECTION" type="integer" value="19">
    <description lang="en">
The angular velocity that the vehicle will try to achieve
    </description>
  </constant>

  <constant name="VEHICLE_HOVER_HEIGHT" type="integer" value="24" version="sl:1.1.0">
    <description lang="en">
The height the vehicle will try to hover
    </description>
  </constant>

  <constant name="VEHICLE_HOVER_EFFICIENCY" type="integer" value="25">
    <description lang="en">
A slider between 0 (bouncy) and 1 (critically damped) hover behavior
    </description>
  </constant>

  <constant name="VEHICLE_HOVER_TIMESCALE" type="integer" value="26">
    <description lang="en">
The period of time for the vehicle to achieve its hover height
    </description>
  </constant>

  <constant name="VEHICLE_BUOYANCY" type="integer" value="27">
    <description lang="en">
A slider between 0 (no anti-gravity) and 1 (full anti-gravity)
    </description>
  </constant>

  <constant name="VEHICLE_LINEAR_DEFLECTION_EFFICIENCY" type="integer" value="28">
    <description lang="en">
A slider between 0 (no deflection) and 1 (maximum strength)
    </description>
  </constant>

  <constant name="VEHICLE_LINEAR_DEFLECTION_TIMESCALE" type="integer" value="29">
    <description lang="en">
The exponential timescale for the vehicle to redirect its velocity to be along its x-axis
    </description>
  </constant>

  <constant name="VEHICLE_LINEAR_MOTOR_TIMESCALE" type="integer" value="30">
    <description lang="en">
The exponential timescale for the vehicle to achive its full linear motor velocity
    </description>
  </constant>

  <constant name="VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE" type="integer" value="31">
    <description lang="en">
The exponential timescale for the linear motor's effectiveness to decay toward zero
    </description>
  </constant>

  <constant name="VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY" type="integer" value="32">
    <description lang="en">
A slider between 0 (no deflection) and 1 (maximum strength)
    </description>
  </constant>

  <constant name="VEHICLE_ANGULAR_DEFLECTION_TIMESCALE" type="integer" value="33">
    <description lang="en">
The exponential timescale for the vehicle to achieve full angular deflection
    </description>
  </constant>

  <constant name="VEHICLE_ANGULAR_MOTOR_TIMESCALE" type="integer" value="34">
    <description lang="en">
The exponential timescale for the vehicle to achive its full angular motor velocity
    </description>
  </constant>

  <constant name="VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE" type="integer" value="35">
    <description lang="en">
The exponential timescale for the angular motor's effectiveness to decay toward zero
    </description>
  </constant>

  <constant name="VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY" type="integer" value="36">
    <description lang="en">
A slider between 0 (bouncy) and 1 (critically damped) attraction of vehicle z-axis to world z-axis (vertical)
    </description>
  </constant>

  <constant name="VEHICLE_VERTICAL_ATTRACTION_TIMESCALE" type="integer" value="37">
    <description lang="en">
The exponential timescale for the vehicle to align its z-axis to the world z-axis (vertical)
    </description>
  </constant>

  <constant name="VEHICLE_BANKING_EFFICIENCY" type="integer" value="38">
    <description lang="en">
A slider between -1 (leans out of turns), 0 (no banking), and +1 (leans into turns)
    </description>
  </constant>

  <constant name="VEHICLE_BANKING_MIX" type="integer" value="39">
    <description lang="en">
A slider between 0 (static banking) and 1 (dynamic banking)
    </description>
  </constant>

  <constant name="VEHICLE_BANKING_TIMESCALE" type="integer" value="40">
    <description lang="en">
The exponential timescale for the banking behavior to take full effect
    </description>
  </constant>

  <constant name="VEHICLE_RANGE_BLOCK" type="integer" value="45" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="VEHICLE_ROLL_FRAME" type="integer" value="46" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_NO_FLY_UP" type="integer" value="0x1" status="deprecated" grid="sl aa" version="sl:1.1.0">
    <description lang="en">
DEPRECATED - use VEHICLE_FLAG_NO_DEFLECTION_UP
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_NO_DEFLECTION_UP" type="integer" value="0x1" version="sl:1.1.5">
    <description lang="en">
Prevents linear deflection along world-z axis
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_LIMIT_ROLL_ONLY" type="integer" value="0x2" version="sl:1.1.0">
    <description lang="en">
Removes vertical attraction for changes in vehicle pitch
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_HOVER_WATER_ONLY" type="integer" value="0x4">
    <description lang="en">
Hover only pays attention to water level
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_HOVER_TERRAIN_ONLY" type="integer" value="0x8">
    <description lang="en">
Hover only pays attention to terrain height
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT" type="integer" value="0x10">
    <description lang="en">
Hover only pays attention to global height
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_HOVER_UP_ONLY" type="integer" value="0x20">
    <description lang="en">
Hover only pushes up
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_LIMIT_MOTOR_UP" type="integer" value="0x40" version="sl:1.1.5">
    <description lang="en">
Prevents ground vehicles from motoring into the sky
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_MOUSELOOK_STEER" type="integer" value="0x80">
    <description lang="en">
Makes vehicle try to turn toward mouselook direction
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_MOUSELOOK_BANK" type="integer" value="0x100">
    <description lang="en">
Makes vehicle try to turn toward mouselook direction assuming banking is enabled
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_CAMERA_DECOUPLED" type="integer" value="0x200">
    <description lang="en">
Causes the camera look-at axis to NOT move when the vehicle rotates
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_NO_X" type="integer" value="0x400" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_NO_Y" type="integer" value="0x800" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_NO_Z" type="integer" value="0x1000" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_NO_DEFLECTION" type="integer" value="0x4008" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_LOCK_HOVER_HEIGHT" type="integer" value="0x2000" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="VEHICLE_FLAG_LOCK_ROTATION" type="integer" value="0x8010" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CAMERA_PITCH" type="integer" value="0" version="sl:1.9.0(15)">
    <description lang="en">
(-45 to 80) Adjusts the angular amount that the camera aims straight ahead vs. straight down, maintaining the same distance. Analogous to 'incidence'.
    </description>
  </constant>

  <constant name="CAMERA_FOCUS_OFFSET" type="integer" value="1" version="sl:1.9.0(15)">
    <description lang="en">
(-10 to 10) A vector that adjusts the position of the camera focus position relative to the subject
    </description>
  </constant>

  <constant name="CAMERA_FOCUS_OFFSET_X" type="integer" value="2" grid="os aa">
    <description lang="en">
    </description>
  </constant>

  <constant name="CAMERA_FOCUS_OFFSET_Y" type="integer" value="3" grid="os aa">
    <description lang="en">
    </description>
  </constant>

  <constant name="CAMERA_FOCUS_OFFSET_Z" type="integer" value="4" grid="os aa">
    <description lang="en">
    </description>
  </constant>

  <constant name="CAMERA_POSITION_LAG" type="integer" value="5" version="sl:1.9.0(15)">
    <description lang="en">
(0.0 to 3.0)  How much the camera lags as it tries to move towards its 'ideal' position
    </description>
  </constant>

  <constant name="CAMERA_FOCUS_LAG" type="integer" value="6" version="sl:1.9.0(15)">
    <description lang="en">
(0.0 to 3.0) How much the camera lags as it tries to aim towards the subject
    </description>
  </constant>

  <constant name="CAMERA_DISTANCE" type="integer" value="7" version="sl:1.9.0(15)">
    <description lang="en">
(0.5 to 10) Sets how far away the camera wants to be from its subject
    </description>
  </constant>

  <constant name="CAMERA_BEHINDNESS_ANGLE" type="integer" value="8" version="sl:1.9.0(15)">
    <description lang="en">
(0 to 180) Sets the angle in degrees within which the camera is not constrained by changes in subject rotation
    </description>
  </constant>

  <constant name="CAMERA_BEHINDNESS_LAG" type="integer" value="9" version="sl:1.9.0(15)">
    <description lang="en">
(0.0 to 3.0) Sets how strongly the camera is forced to stay behind the target if outside of behindness angle
    </description>
  </constant>

  <constant name="CAMERA_POSITION_THRESHOLD" type="integer" value="10" version="sl:1.9.0(15)">
    <description lang="en">
(0.0 to 4.0) Sets the radius of a sphere around the camera's ideal position within which it is not affected by subject motion
    </description>
  </constant>

  <constant name="CAMERA_FOCUS_THRESHOLD" type="integer" value="11" version="sl:1.9.0(15)">
    <description lang="en">
(0.0 to 4.0) Sets the radius of a sphere around the camera's subject position within which its focus is not affected by subject motion
    </description>
  </constant>

  <constant name="CAMERA_ACTIVE" type="integer" value="12" version="sl:1.9.0(15)">
    <description lang="en">
(0 or 1) Turns on or off scripted control of the camera
    </description>
  </constant>

  <constant name="CAMERA_POSITION" type="integer" value="13" version="sl:1.9.0(15)">
    <description lang="en">
Sets the position of the camera
    </description>
  </constant>

  <constant name="CAMERA_POSITION_X" type="integer" value="14" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CAMERA_POSITION_Y" type="integer" value="15" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CAMERA_POSITION_Z" type="integer" value="16" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CAMERA_FOCUS" type="integer" value="17" version="sl:1.9.0(15)">
    <description lang="en">
Sets the focus (target position) of the camera
    </description>
  </constant>

  <constant name="CAMERA_FOCUS_X" type="integer" value="18" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CAMERA_FOCUS_Y" type="integer" value="19" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CAMERA_FOCUS_Z" type="integer" value="20" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CAMERA_POSITION_LOCKED" type="integer" value="21" version="sl:1.9.0(15)">
    <description lang="en">
(0 or 1) Locks the camera position so it will not move
    </description>
  </constant>

  <constant name="CAMERA_FOCUS_LOCKED" type="integer" value="22" version="sl:1.9.0(15)">
    <description lang="en">
(0 or 1) Locks the camera focus so it will not move
    </description>
  </constant>

  <constant name="INVENTORY_TEXTURE" type="integer" value="0">
    <description lang="en">
Passed to task inventory library functions to reference textures
    </description>
  </constant>

  <constant name="INVENTORY_SOUND" type="integer" value="1">
    <description lang="en">
Passed to task inventory library functions to reference sounds
    </description>
  </constant>

  <constant name="INVENTORY_OBJECT" type="integer" value="6">
    <description lang="en">
Passed to task inventory library functions to reference objects
    </description>
  </constant>

  <constant name="INVENTORY_SCRIPT" type="integer" value="10">
    <description lang="en">
Passed to task inventory library functions to reference scripts
    </description>
  </constant>

  <constant name="INVENTORY_LANDMARK" type="integer" value="3">
    <description lang="en">
Passed to task inventory library functions to reference landmarks
    </description>
  </constant>

  <constant name="INVENTORY_CLOTHING" type="integer" value="5">
    <description lang="en">
Passed to task inventory library functions to reference clothing
    </description>
  </constant>

  <constant name="INVENTORY_NOTECARD" type="integer" value="7">
    <description lang="en">
Passed to task inventory library functions to reference notecards
    </description>
  </constant>

  <constant name="INVENTORY_BODYPART" type="integer" value="13">
    <description lang="en">
Passed to task inventory library functions to reference body parts
    </description>
  </constant>

  <constant name="INVENTORY_ANIMATION" type="integer" value="20">
    <description lang="en">
Passed to task inventory library functions to reference animations
    </description>
  </constant>

  <constant name="INVENTORY_GESTURE" type="integer" value="21">
    <description lang="en">
Passed to task inventory library functions to reference gestures
    </description>
  </constant>

  <constant name="INVENTORY_ALL" type="integer" value="-1" version="sl:1.6.0">
    <description lang="en">
Passed to task inventory library functions to reference all inventory items
    </description>
  </constant>

  <constant name="INVENTORY_NONE" type="integer" value="-1">
    <description lang="en">
Returned by llGetInventoryType when no item is found
    </description>
  </constant>

  <constant name="ATTACH_CHEST" type="integer" value="1">
    <description lang="en">
Passed to llAttachToAvatar to attach task to chest
    </description>
  </constant>

  <constant name="ATTACH_HEAD" type="integer" value="2">
    <description lang="en">
Passed to llAttachToAvatar to attach task to head
    </description>
  </constant>

  <constant name="ATTACH_LSHOULDER" type="integer" value="3">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left shoulder
    </description>
  </constant>

  <constant name="ATTACH_RSHOULDER" type="integer" value="4">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right shoulder
    </description>
  </constant>

  <constant name="ATTACH_LHAND" type="integer" value="5">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left hand
    </description>
  </constant>

  <constant name="ATTACH_RHAND" type="integer" value="6">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right hand
    </description>
  </constant>

  <constant name="ATTACH_LFOOT" type="integer" value="7">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left foot
    </description>
  </constant>

  <constant name="ATTACH_RFOOT" type="integer" value="8">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right foot
    </description>
  </constant>

  <constant name="ATTACH_BACK" type="integer" value="9">
    <description lang="en">
Passed to llAttachToAvatar to attach task to back
    </description>
  </constant>

  <constant name="ATTACH_PELVIS" type="integer" value="10">
    <description lang="en">
Passed to llAttachToAvatar to attach task to pelvis
    </description>
  </constant>

  <constant name="ATTACH_MOUTH" type="integer" value="11">
    <description lang="en">
Passed to llAttachToAvatar to attach task to mouth
    </description>
  </constant>

  <constant name="ATTACH_CHIN" type="integer" value="12">
    <description lang="en">
Passed to llAttachToAvatar to attach task to chin
    </description>
  </constant>

  <constant name="ATTACH_LEAR" type="integer" value="13">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left ear
    </description>
  </constant>

  <constant name="ATTACH_REAR" type="integer" value="14">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right ear
    </description>
  </constant>

  <constant name="ATTACH_LEYE" type="integer" value="15">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left eye
    </description>
  </constant>

  <constant name="ATTACH_REYE" type="integer" value="16">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right eye
    </description>
  </constant>

  <constant name="ATTACH_NOSE" type="integer" value="17">
    <description lang="en">
Passed to llAttachToAvatar to attach task to nose
    </description>
  </constant>

  <constant name="ATTACH_RUARM" type="integer" value="18">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right upper arm
    </description>
  </constant>

  <constant name="ATTACH_RLARM" type="integer" value="19">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right lower arm
    </description>
  </constant>

  <constant name="ATTACH_LUARM" type="integer" value="20">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left upper arm
    </description>
  </constant>

  <constant name="ATTACH_LLARM" type="integer" value="21">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left lower arm
    </description>
  </constant>

  <constant name="ATTACH_RHIP" type="integer" value="22">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right hip
    </description>
  </constant>

  <constant name="ATTACH_RULEG" type="integer" value="23">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right upper leg
    </description>
  </constant>

  <constant name="ATTACH_RLLEG" type="integer" value="24">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right lower leg
    </description>
  </constant>

  <constant name="ATTACH_LHIP" type="integer" value="25">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left hip
    </description>
  </constant>

  <constant name="ATTACH_LULEG" type="integer" value="26">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left upper leg
    </description>
  </constant>

  <constant name="ATTACH_LLLEG" type="integer" value="27">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left lower leg
    </description>
  </constant>

  <constant name="ATTACH_BELLY" type="integer" value="28">
    <description lang="en">
Passed to llAttachToAvatar to attach task to belly
    </description>
  </constant>

  <constant name="ATTACH_RPEC" type="integer" value="29" status="deprecated" grid="sl os">
    <description lang="en">
Passed to llAttachToAvatar to attach task to LEFT pectoral.
DEPRECATED/MISNAMED - use ATTACH_LEFT_PEC or ATTACH_RIGHT_PEC.
    </description>
  </constant>

  <constant name="ATTACH_LPEC" type="integer" value="29" grid="aa">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left pectoral
    </description>
  </constant>

  <constant name="ATTACH_LPEC" type="integer" value="30" status="deprecated" grid="sl os">
    <description lang="en">
Passed to llAttachToAvatar to attach task to RIGHT pectoral.
DEPRECATED/MISNAMED - use ATTACH_LEFT_PEC or ATTACH_RIGHT_PEC.
    </description>
  </constant>

  <constant name="ATTACH_RPEC" type="integer" value="30" grid="aa">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right pectoral
    </description>
  </constant>

  <constant name="ATTACH_LEFT_PEC" type="integer" value="29">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left pectoral
    </description>
  </constant>

  <constant name="ATTACH_RIGHT_PEC" type="integer" value="30">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right pectoral
    </description>
  </constant>

  <constant name="ATTACH_HUD_BOTTOM" type="integer" value="37">
    <description lang="en">
Passed to llAttachToAvatar to attach task to bottom HUD area
    </description>
  </constant>

  <constant name="ATTACH_HUD_BOTTOM_LEFT" type="integer" value="36">
    <description lang="en">
Passed to llAttachToAvatar to attach task to bottom left HUD area
    </description>
  </constant>

  <constant name="ATTACH_HUD_BOTTOM_RIGHT" type="integer" value="38">
    <description lang="en">
Passed to llAttachToAvatar to attach task to bottom right HUD area
    </description>
  </constant>

  <constant name="ATTACH_HUD_CENTER_1" type="integer" value="35">
    <description lang="en">
Passed to llAttachToAvatar to attach task to center 1 HUD area
    </description>
  </constant>

  <constant name="ATTACH_HUD_CENTER_2" type="integer" value="31">
    <description lang="en">
Passed to llAttachToAvatar to attach task to center 2 HUD area
    </description>
  </constant>

  <constant name="ATTACH_HUD_TOP_CENTER" type="integer" value="33">
    <description lang="en">
Passed to llAttachToAvatar to attach task to top center HUD area
    </description>
  </constant>

  <constant name="ATTACH_HUD_TOP_LEFT" type="integer" value="34">
    <description lang="en">
Passed to llAttachToAvatar to attach task to top left HUD area
    </description>
  </constant>

  <constant name="ATTACH_HUD_TOP_RIGHT" type="integer" value="32">
    <description lang="en">
Passed to llAttachToAvatar to attach task to top right HUD area
    </description>
  </constant>

  <constant name="ATTACH_NECK" type="integer" value="39">
    <description lang="en">
Passed to llAttachToAvatar to attach task to neck
    </description>
  </constant>

  <constant name="ATTACH_AVATAR_CENTER" type="integer" value="40">
    <description lang="en">
Passed to llAttachToAvatar to attach task to avatar center
    </description>
  </constant>

  <constant name="ATTACH_LHAND_RING1" type="integer" value="41" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left ring finger
    </description>
  </constant>

  <constant name="ATTACH_RHAND_RING1" type="integer" value="42" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right ring finger
    </description>
  </constant>

  <constant name="ATTACH_TAIL_BASE" type="integer" value="43" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to tail base
    </description>
  </constant>

  <constant name="ATTACH_TAIL_TIP" type="integer" value="44" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to tail tip
    </description>
  </constant>

  <constant name="ATTACH_LWING" type="integer" value="45" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left wing
    </description>
  </constant>

  <constant name="ATTACH_RWING" type="integer" value="46" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right wing
    </description>
  </constant>

  <constant name="ATTACH_FACE_JAW" type="integer" value="47" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to jaw
    </description>
  </constant>

  <constant name="ATTACH_FACE_LEAR" type="integer" value="48" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left ear (extended)
    </description>
  </constant>

  <constant name="ATTACH_FACE_REAR" type="integer" value="49" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right ear (extended)
    </description>
  </constant>

  <constant name="ATTACH_FACE_LEYE" type="integer" value="50" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left eye (extended)
    </description>
  </constant>

  <constant name="ATTACH_FACE_REYE" type="integer" value="51" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right eye (extended)
    </description>
  </constant>

  <constant name="ATTACH_FACE_TOUNGE" type="integer" value="52" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to tongue
    </description>
  </constant>

  <constant name="ATTACH_GROIN" type="integer" value="53" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to groin
    </description>
  </constant>

  <constant name="ATTACH_HIND_LFOOT" type="integer" value="54" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to left hindfoot
    </description>
  </constant>

  <constant name="ATTACH_HIND_RFOOT" type="integer" value="55" version="sl:16.05.24.315768">
    <description lang="en">
Passed to llAttachToAvatar to attach task to right hindfoot
    </description>
  </constant>

  <constant name="LAND_LEVEL" type="integer" value="0">
    <description lang="en">
Passed to llModifyLand to level terrain
    </description>
  </constant>

  <constant name="LAND_RAISE" type="integer" value="1">
    <description lang="en">
Passed to llModifyLand to raise terrain
    </description>
  </constant>

  <constant name="LAND_LOWER" type="integer" value="2">
    <description lang="en">
Passed to llModifyLand to lower terrain
    </description>
  </constant>

  <constant name="LAND_SMOOTH" type="integer" value="3">
    <description lang="en">
Passed to llModifyLand to smooth terrain
    </description>
  </constant>

  <constant name="LAND_NOISE" type="integer" value="4">
    <description lang="en">
Passed to llModifyLand to randomize terrain
    </description>
  </constant>

  <constant name="LAND_REVERT" type="integer" value="5">
    <description lang="en">
Passed to llModifyLand to revert terrain toward original state
    </description>
  </constant>

  <constant name="LAND_SMALL_BRUSH" type="integer" value="1" status="deprecated">
    <description lang="en">
Deprecated, do not use. Use the value 0 to mean a 2x2 brush.
    </description>
  </constant>

  <constant name="LAND_MEDIUM_BRUSH" type="integer" value="2" status="deprecated">
    <description lang="en">
Deprecated, do not use. Use the value 1 to mean a 4x4 brush.
    </description>
  </constant>

  <constant name="LAND_LARGE_BRUSH" type="integer" value="3" status="deprecated">
    <description lang="en">
Deprecated, do not use. Use the value 2 to mean an 8x8 brush.
    </description>
  </constant>

  <constant name="DATA_PAYINFO" type="integer" value="8" version="sl:1.11.2(1)">
    <description lang="en">
Passed to llRequestAgentData to get payment status of an agent
    </description>
  </constant>

  <constant name="DATA_ONLINE" type="integer" value="1">
    <description lang="en">
Passed to llRequestAgentData to determine if agent is online
    </description>
  </constant>

  <constant name="DATA_NAME" type="integer" value="2" version="sl:1.1.0">
    <description lang="en">
Passed to llRequestAgentData to get full agent name
    </description>
  </constant>

  <constant name="DATA_BORN" type="integer" value="3" version="sl:1.1.0">
    <description lang="en">
Passed to llRequestAgentData to get born on date as a string
    </description>
  </constant>

  <constant name="DATA_RATING" type="integer" value="4" status="deprecated" version="sl:1.1.0">
    <description lang="en">
Passed to llRequestAgentData to get a comma separated sting of integer ratings. DEPRECATED - Ratings are no longer in use and using this value in a query always returns "0, 0, 0, 0, 0, 0".
    </description>
  </constant>

  <constant name="DATA_SIM_POS" type="integer" value="5">
    <description lang="en">
Passed to llRequestSimulatorData to get a string (cast to vector) of a simulator's global position
    </description>
  </constant>

  <constant name="DATA_SIM_STATUS" type="integer" value="6">
    <description lang="en">
Passed to llRequestSimulatorData to get the status of a simulator
    </description>
  </constant>

  <constant name="DATA_SIM_RATING" type="integer" value="7" version="sl:1.7.0">
    <description lang="en">
Passed to llRequestSimulatorData to get the rating of a simulator
    </description>
  </constant>

  <constant name="DATA_SIM_RELEASE" type="integer" value="128" grid="os aa">
    <description lang="en">
Passed to llRequestSimulatorData to get the release of a simulator
    </description>
  </constant>

  <constant name="PAYMENT_INFO_ON_FILE" type="integer" value="0x1" grid="sl aa">
    <description lang="en">
Used with llRequestAgentData to tell if Agent is of "Payment Info On File" status
    </description>
  </constant>

  <constant name="PAYMENT_INFO_USED" type="integer" value="0x2" grid="sl aa">
    <description lang="en">
Used with llRequestAgentData to tell if Agent is of "Payment Info Used" status
    </description>
  </constant>

  <constant name="ANIM_ON" type="integer" value="0x1">
    <description lang="en">
Enable texture animation
    </description>
  </constant>

  <constant name="LOOP" type="integer" value="0x2">
    <description lang="en">
Loop when animating textures
    </description>
  </constant>

  <constant name="REVERSE" type="integer" value="0x4">
    <description lang="en">
Animate in the reverse direction
    </description>
  </constant>

  <constant name="PING_PONG" type="integer" value="0x8">
    <description lang="en">
Animate forward, then reverse
    </description>
  </constant>

  <constant name="SMOOTH" type="integer" value="0x10">
    <description lang="en">
Textures slides, instead of stepping
    </description>
  </constant>

  <constant name="ROTATE" type="integer" value="0x20">
    <description lang="en">
Rotates the texture, instead of using frames
    </description>
  </constant>

  <constant name="SCALE" type="integer" value="0x40">
    <description lang="en">
Scales the texture, instead of using frames
    </description>
  </constant>

  <constant name="ALL_SIDES" type="integer" value="-1">
    <description lang="en">
Passed to various texture and color library functions to modify all sides
    </description>
  </constant>

  <constant name="LINK_SET" type="integer" value="-1">
    <description lang="en">
Passed to various link functions to modify all blocks in the object
    </description>
  </constant>

  <constant name="LINK_ROOT" type="integer" value="1">
    <description lang="en">
Passed to various link functions to modify only the root block (no effect on single block objects)
    </description>
  </constant>

  <constant name="LINK_ALL_OTHERS" type="integer" value="-2">
    <description lang="en">
Passed to various link functions to modify all other blocks in the object
    </description>
  </constant>

  <constant name="LINK_ALL_CHILDREN" type="integer" value="-3">
    <description lang="en">
Passed to various link functions to modify all child blocks in the object
    </description>
  </constant>

  <constant name="LINK_THIS" type="integer" value="-4" version="sl:1.6.0">
    <description lang="en">
Passed to various link functions to modify only the calling block
    </description>
  </constant>

  <constant name="CHANGED_INVENTORY" type="integer" value="0x1">
    <description lang="en">
Parameter of changed event handler used to indicate change to task's inventory
    </description>
  </constant>

  <constant name="CHANGED_COLOR" type="integer" value="0x2">
    <description lang="en">
Parameter of changed event handler used to indicate change to task's color
    </description>
  </constant>

  <constant name="CHANGED_SHAPE" type="integer" value="0x4">
    <description lang="en">
Parameter of changed event handler used to indicate change to task's shape parameters
    </description>
  </constant>

  <constant name="CHANGED_SCALE" type="integer" value="0x8">
    <description lang="en">
Parameter of changed event handler used to indicate change to task's scale
    </description>
  </constant>

  <constant name="CHANGED_TEXTURE" type="integer" value="0x10">
    <description lang="en">
Parameter of changed event handler used to indicate change to task's texture
    </description>
  </constant>

  <constant name="CHANGED_LINK" type="integer" value="0x20">
    <description lang="en">
Parameter of changed event handler used to indicate change to task's link status
    </description>
  </constant>

  <constant name="CHANGED_ALLOWED_DROP" type="integer" value="0x40">
    <description lang="en">
Parameter of changed event handler used to indicate a user dropped an inventory item
onto task that was allowed only by llAllowInventoryDrop function call
    </description>
  </constant>

  <constant name="CHANGED_OWNER" type="integer" value="0x80">
    <description lang="en">
Parameter of changed event handler used to indicate change to task's owner ONLY when an object is sold as original or deeded to group
    </description>
  </constant>

  <constant name="CHANGED_REGION" type="integer" value="0x100">
    <description lang="en">
Parameter of changed event handler used to indicate the region has changed
    </description>
  </constant>

  <constant name="CHANGED_TELEPORT" type="integer" value="0x200">
    <description lang="en">
Parameter of changed event handler used to indicate teleport has completed
    </description>
  </constant>

  <constant name="CHANGED_REGION_START" type="integer" value="0x400">
    <description lang="en">
Parameter of changed event handler used to indicate the region has been restarted
    </description>
  </constant>

  <constant name="CHANGED_REGION_RESTART" type="integer" value="0x400" grid="os aa">
    <description lang="en">
Parameter of changed event handler used to indicate the region has been restarted
    </description>
  </constant>

  <constant name="CHANGED_MEDIA" type="integer" value="0x800">
    <description lang="en">
Parameter of changed event handler used to indicate that media has changed on a face of the task
    </description>
  </constant>

  <constant name="CHANGED_ANIMATION" type="integer" value="0x4000" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHANGED_STATE" type="integer" value="0x8000" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="TYPE_INTEGER" type="integer" value="1">
    <description lang="en">
Indicates that the list entry is holding an integer
    </description>
  </constant>

  <constant name="TYPE_FLOAT" type="integer" value="2">
    <description lang="en">
Indicates that the list entry is holding an float
    </description>
  </constant>

  <constant name="TYPE_STRING" type="integer" value="3">
    <description lang="en">
Indicates that the list entry is holding an string
    </description>
  </constant>

  <constant name="TYPE_KEY" type="integer" value="4">
    <description lang="en">
Indicates that the list entry is holding an key
    </description>
  </constant>

  <constant name="TYPE_VECTOR" type="integer" value="5">
    <description lang="en">
Indicates that the list entry is holding an vector
    </description>
  </constant>

  <constant name="TYPE_ROTATION" type="integer" value="6">
    <description lang="en">
Indicates that the list entry is holding an rotation
    </description>
  </constant>

  <constant name="TYPE_INVALID" type="integer" value="0">
    <description lang="en">
Indicates that this wasn't a valid list entry
    </description>
  </constant>

  <constant name="REMOTE_DATA_CHANNEL" type="integer" value="1">
    <description lang="en">
Value of event_type in remote_event after successful llOpenRemoteDataChannel
    </description>
  </constant>

  <constant name="REMOTE_DATA_REQUEST" type="integer" value="2">
    <description lang="en">
Value of event_type in remote_event if XML-RPC request is received
    </description>
  </constant>

  <constant name="REMOTE_DATA_REPLY" type="integer" value="3">
    <description lang="en">
Value of event_type in remote_event if XML-RPC reply is received
    </description>
  </constant>

  <constant name="PRIM_TYPE" type="integer" value="9">
    <description lang="en">
Followed by PRIM_TYPE_BOX, PRIM_TYPE_CYLINDER, PRIM_TYPE_PRISM, PRIM_TYPE_SPHERE, PRIM_TYPE_TORUS, PRIM_TYPE_TUBE, or PRIM_TYPE_SCULPT and their arguments
    </description>
  </constant>

  <constant name="PRIM_MATERIAL" type="integer" value="2">
    <description lang="en">
Followed by PRIM_MATERIAL_STONE, PRIM_MATERIAL_METAL, PRIM_MATERIAL_GLASS, PRIM_MATERIAL_WOOD, PRIM_MATERIAL_FLESH, PRIM_MATERIAL_PLASTIC, or PRIM_MATERIAL_RUBBER
    </description>
  </constant>

  <constant name="PRIM_PHYSICS" type="integer" value="3">
    <description lang="en">
Sets physics to TRUE or FALSE
    </description>
  </constant>

  <constant name="PRIM_FLEXIBLE" type="integer" value="21" version="sl:1.9.1.13">
    <description lang="en">
Followed by TRUE or FALSE, integer softness, float gravity, float friction, float wind, float tension, and vector force
    </description>
  </constant>

  <constant name="PRIM_POINT_LIGHT" type="integer" value="23" version="sl:1.9.1.13">
    <description lang="en">
Followed by TRUE or FALSE, vector color, float intensity, float radius, float falloff
    </description>
  </constant>

  <constant name="PRIM_TEMP_ON_REZ" type="integer" value="4">
    <description lang="en">
Sets temporary on rez to TRUE or FALSE
    </description>
  </constant>

  <constant name="PRIM_PHANTOM" type="integer" value="5">
    <description lang="en">
Sets phantom to TRUE or FALSE
    </description>
  </constant>

  <constant name="PRIM_CAST_SHADOWS" type="integer" value="24" status="deprecated">
    <description lang="en">
DEPRECATED. Takes 1 parameter, an integer, but has no effect when set and always returns 0 if used in llGetPrimitiveParams.
    </description>
  </constant>

  <constant name="PRIM_POSITION" type="integer" value="6">
    <description lang="en">
Sets prim's local position to a vector position; gets prim's world position
    </description>
  </constant>

  <constant name="PRIM_POS_LOCAL" type="integer" value="33">
    <description lang="en">
Gets/Sets primitive local (root-prim relative) position (vector position)
    </description>
  </constant>

  <constant name="PRIM_SIZE" type="integer" value="7">
    <description lang="en">
Sets primitive size to a vector size
    </description>
  </constant>

  <constant name="PRIM_ROTATION" type="integer" value="8">
    <description lang="en">
Gets primitive absolute rotation. Sets absolute rotation for root, and local rotation offset by root's rotation for children.
    </description>
  </constant>

  <constant name="PRIM_ROT_LOCAL" type="integer" value="29">
    <description lang="en">
Gets/Sets primitive local (root-prim relative) rotation
    </description>
  </constant>

  <constant name="PRIM_TEXTURE" type="integer" value="17">
    <description lang="en">
Followed by an integer face, string name, vector repeats, vector offsets,
and float rotation in radians
    </description>
  </constant>

  <constant name="PRIM_COLOR" type="integer" value="18">
    <description lang="en">
Followed by an integer face, vector color, and float alpha
    </description>
  </constant>

  <constant name="PRIM_BUMP_SHINY" type="integer" value="19">
    <description lang="en">
Followed by an integer face, one of PRIM_SHINY_NONE, PRIM_SHINY_LOW,
PRIM_SHINY_MEDIUM, or PRIM_SHINY_HIGH,
and one of PRIM_BUMP_NONE, PRIM_BUMP_BRIGHT, PRIM_BUMP_DARK, etc
    </description>
  </constant>

  <constant name="PRIM_FULLBRIGHT" type="integer" value="20" version="sl:1.7.0">
    <description lang="en">
Followed by an integer face, and TRUE or FALSE
    </description>
  </constant>

  <constant name="PRIM_TEXGEN" type="integer" value="22">
    <description lang="en">
Followed by an integer face, and one of PRIM_TEXGEN_DEFAULT or PRIM_TEXGEN_PLANAR
    </description>
  </constant>

  <constant name="PRIM_GLOW" type="integer" value="25" version="sl:1.20.15">
    <description lang="en">
Followed by an integer face, and a float from 0.0 to 1.0 specifying glow amount
    </description>
  </constant>

  <constant name="PRIM_TEXT" type="integer" value="26">
    <description lang="en">
For floating text. Followed by a string text, vector color, and float alpha.
    </description>
  </constant>

  <constant name="PRIM_NAME" type="integer" value="27">
    <description lang="en">
For primitive name. Followed by a string.
    </description>
  </constant>

  <constant name="PRIM_DESC" type="integer" value="28">
    <description lang="en">
For primitive description. Followed by a string.
    </description>
  </constant>

  <constant name="PRIM_OMEGA" type="integer" value="32">
    <description lang="en">
For primitive target omega. Followed by vector axis, float spinrate, float gain.
    </description>
  </constant>

  <constant name="PRIM_LINK_TARGET" type="integer" value="34">
    <description lang="en">
Will cause subsequent parameters to affect the prim which link number parameter follows this flag, independently of the original prim(s) being affected. Compatible with all PrimitiveParams functions.
    </description>
  </constant>

  <constant name="PRIM_PHYSICS_SHAPE_TYPE" type="integer" value="30" grid="sl">
    <description lang="en">
For primitive physics shape type. Followed with either PRIM_PHYSICS_SHAPE_PRIM, PRIM_PHYSICS_SHAPE_NONE or PRIM_PHYSICS_SHAPE_CONVEX.
    </description>
  </constant>

  <constant name="PRIM_PHYSICS_SHAPE_TYPE" type="integer" value="35" grid="aa">
    <description lang="en">
For primitive physics shape type. Followed with either PRIM_PHYSICS_SHAPE_PRIM, PRIM_PHYSICS_SHAPE_NONE or PRIM_PHYSICS_SHAPE_CONVEX.
    </description>
  </constant>

  <constant name="PRIM_SLICE" type="integer" value="35" grid="sl os">
    <description lang="en">
Get and set the 'slice' parameter of all shapes. Takes a vector parameter of the form &lt;start_slice, end_slice, 0&gt;.
    </description>
  </constant>

  <constant name="PRIM_TYPE_BOX" type="integer" value="0">
    <description lang="en">
Followed by integer hole shape, vector cut, float hollow, vector twist,
vector top size, and vector top shear
    </description>
  </constant>

  <constant name="PRIM_TYPE_CYLINDER" type="integer" value="1">
    <description lang="en">
Followed by integer hole shape, vector cut, float hollow, vector twist,
vector top size, and vector top shear
    </description>
  </constant>

  <constant name="PRIM_TYPE_PRISM" type="integer" value="2">
    <description lang="en">
Followed by integer hole shape, vector cut, float hollow, vector twist,
vector top size, and vector top shear
    </description>
  </constant>

  <constant name="PRIM_TYPE_SPHERE" type="integer" value="3">
    <description lang="en">
Followed by integer hole shape, vector cut, float hollow, vector twist,
and vector dimple
    </description>
  </constant>

  <constant name="PRIM_TYPE_TORUS" type="integer" value="4">
    <description lang="en">
Followed by integer hole shape, vector cut, float hollow, vector twist,
vector hole size, vector top shear, vector advanced cut, vector taper,
float revolutions, float radius offset, and float skew
    </description>
  </constant>

  <constant name="PRIM_TYPE_TUBE" type="integer" value="5">
    <description lang="en">
Followed by integer hole shape, vector cut, float hollow, vector twist,
vector hole size, vector top shear, vector advanced cut, vector taper,
float revolutions, float radius offset, and float skew
    </description>
  </constant>

  <constant name="PRIM_TYPE_RING" type="integer" value="6">
    <description lang="en">
Followed by integer hole shape, vector cut, float hollow, vector twist,
vector hole size, vector top shear, vector advanced cut, vector taper,
float revolutions, float radius offset, and float skew
    </description>
  </constant>

  <constant name="PRIM_TYPE_SCULPT" type="integer" value="7">
    <description lang="en">
Followed by a key/string texture uuid, and one of PRIM_SCULPT_TYPE_SPHERE, PRIM_SCULPT_TYPE_TORUS, PRIM_SCULPT_TYPE_PLANE, or PRIM_SCULPT_TYPE_CYLINDER
    </description>
  </constant>

  <constant name="PRIM_HOLE_DEFAULT" type="integer" value="0x0">
    <description lang="en">
Sets hole type to match the prim type
    </description>
  </constant>

  <constant name="PRIM_HOLE_SQUARE" type="integer" value="0x20">
    <description lang="en">
Sets hole type to square
    </description>
  </constant>

  <constant name="PRIM_HOLE_CIRCLE" type="integer" value="0x10">
    <description lang="en">
Sets hole type to circle
    </description>
  </constant>

  <constant name="PRIM_HOLE_TRIANGLE" type="integer" value="0x30">
    <description lang="en">
Sets hole type to triangle
    </description>
  </constant>

  <constant name="PRIM_MATERIAL_STONE" type="integer" value="0">
    <description lang="en">
Sets material to stone
    </description>
  </constant>

  <constant name="PRIM_MATERIAL_METAL" type="integer" value="1">
    <description lang="en">
Sets material to metal
    </description>
  </constant>

  <constant name="PRIM_MATERIAL_GLASS" type="integer" value="2">
    <description lang="en">
Sets material to glass
    </description>
  </constant>

  <constant name="PRIM_MATERIAL_WOOD" type="integer" value="3">
    <description lang="en">
Sets material to wood
    </description>
  </constant>

  <constant name="PRIM_MATERIAL_FLESH" type="integer" value="4">
    <description lang="en">
Sets material to flesh
    </description>
  </constant>

  <constant name="PRIM_MATERIAL_PLASTIC" type="integer" value="5">
    <description lang="en">
Sets material to plastic
    </description>
  </constant>

  <constant name="PRIM_MATERIAL_RUBBER" type="integer" value="6">
    <description lang="en">
Sets material to rubber
    </description>
  </constant>

  <constant name="PRIM_MATERIAL_LIGHT" type="integer" value="7" status="deprecated">
    <description lang="en">
Sets material to light. DEPRECATED - use PRIM_FULLBRIGHT instead.
    </description>
  </constant>

  <constant name="PRIM_SHINY_NONE" type="integer" value="0">
    <description lang="en">
No shininess
    </description>
  </constant>

  <constant name="PRIM_SHINY_LOW" type="integer" value="1">
    <description lang="en">
Low shininess
    </description>
  </constant>

  <constant name="PRIM_SHINY_MEDIUM" type="integer" value="2">
    <description lang="en">
Medium shininess
    </description>
  </constant>

  <constant name="PRIM_SHINY_HIGH" type="integer" value="3">
    <description lang="en">
High shininess
    </description>
  </constant>

  <constant name="PRIM_BUMP_NONE" type="integer" value="0">
    <description lang="en">
No bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_BRIGHT" type="integer" value="1">
    <description lang="en">
Generate bump map from highlights
    </description>
  </constant>

  <constant name="PRIM_BUMP_DARK" type="integer" value="2">
    <description lang="en">
Generate bump map from lowlights
    </description>
  </constant>

  <constant name="PRIM_BUMP_WOOD" type="integer" value="3">
    <description lang="en">
Wood bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_BARK" type="integer" value="4">
    <description lang="en">
Bark bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_BRICKS" type="integer" value="5">
    <description lang="en">
Brick bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_CHECKER" type="integer" value="6">
    <description lang="en">
Checker bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_CONCRETE" type="integer" value="7">
    <description lang="en">
Concrete bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_TILE" type="integer" value="8">
    <description lang="en">
Tile bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_STONE" type="integer" value="9">
    <description lang="en">
Stone bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_DISKS" type="integer" value="10">
    <description lang="en">
Disk bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_GRAVEL" type="integer" value="11">
    <description lang="en">
Gravel bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_BLOBS" type="integer" value="12">
    <description lang="en">
Blob bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_SIDING" type="integer" value="13">
    <description lang="en">
Siding bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_LARGETILE" type="integer" value="14">
    <description lang="en">
Large tile bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_STUCCO" type="integer" value="15">
    <description lang="en">
Stucco bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_SUCTION" type="integer" value="16">
    <description lang="en">
Suction cup bump map
    </description>
  </constant>

  <constant name="PRIM_BUMP_WEAVE" type="integer" value="17">
    <description lang="en">
Weave bump map
    </description>
  </constant>

  <constant name="PRIM_TEXGEN_DEFAULT" type="integer" value="0">
    <description lang="en">
Default texture mapping
    </description>
  </constant>

  <constant name="PRIM_TEXGEN_PLANAR" type="integer" value="1">
    <description lang="en">
Planar texture mapping
    </description>
  </constant>

  <constant name="PRIM_SCULPT_TYPE_SPHERE" type="integer" value="1">
    <description lang="en">
Stitch edges in a sphere-like way
    </description>
  </constant>

  <constant name="PRIM_SCULPT_TYPE_TORUS" type="integer" value="2">
    <description lang="en">
Stitch edges in a torus-like way
    </description>
  </constant>

  <constant name="PRIM_SCULPT_TYPE_PLANE" type="integer" value="3">
    <description lang="en">
Do not stitch edges
    </description>
  </constant>

  <constant name="PRIM_SCULPT_TYPE_CYLINDER" type="integer" value="4">
    <description lang="en">
Stitch edges in a cylinder-like way
    </description>
  </constant>

  <constant name="PRIM_SCULPT_TYPE_MESH" type="integer" value="5" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PRIM_SCULPT_TYPE_MASK" type="integer" value="7" grid="sl">
    <description lang="en">
Mask used to determine stitching type
    </description>
  </constant>

  <constant name="PRIM_SCULPT_FLAG_INVERT" type="integer" value="0x40">
    <description lang="en">
Flag to specify that the surface normals should be inverted
    </description>
  </constant>

  <constant name="PRIM_SCULPT_FLAG_MIRROR" type="integer" value="0x80">
    <description lang="en">
Flag to specify that the prim should be reflected along X axis
    </description>
  </constant>

  <constant name="PRIM_PHYSICS_SHAPE_PRIM" type="integer" value="0" grid="sl aa">
    <description lang="en">
Use the normal prim shape for physics (this is the default for all non-mesh objects)
    </description>
  </constant>

  <constant name="PRIM_PHYSICS_SHAPE_CONVEX" type="integer" value="2" grid="sl aa">
    <description lang="en">
Use the convex hull of the prim shape for physics (this is the default for mesh objects)
    </description>
  </constant>

  <constant name="PRIM_PHYSICS_SHAPE_NONE" type="integer" value="1" grid="sl aa">
    <description lang="en">
Ignore this prim in the physics shape. This cannot be applied to the root prim.
    </description>
  </constant>

  <constant name="DENSITY" type="integer" value="0x1" grid="sl">
    <description lang="en">
For use with llSetPhysicsMaterial() as a bitwise value in its material_bits parameter, to set the density
    </description>
  </constant>

  <constant name="DENSITY" type="integer" value="0" grid="aa">
    <description lang="en">
For use with llSetPhysicsMaterial() as a bitwise value in its material_bits parameter, to set the density
    </description>
  </constant>

  <constant name="FRICTION" type="integer" value="0x2" grid="sl">
    <description lang="en">
For use with llSetPhysicsMaterial as a bitwise value in its material_bits parameter, to set the friction
    </description>
  </constant>

  <constant name="FRICTION" type="integer" value="1" grid="aa">
    <description lang="en">
For use with llSetPhysicsMaterial as a bitwise value in its material_bits parameter, to set the friction
    </description>
  </constant>

  <constant name="RESTITUTION" type="integer" value="0x4" grid="sl">
    <description lang="en">
For use with llSetPhysicsMaterial as a bitwise value in its material_bits parameter, to set the restitution
    </description>
  </constant>

  <constant name="RESTITUTION" type="integer" value="2" grid="aa">
    <description lang="en">
For use with llSetPhysicsMaterial as a bitwise value in its material_bits parameter, to set the restitution
    </description>
  </constant>

  <constant name="GRAVITY_MULTIPLIER" type="integer" value="0x8" grid="sl">
    <description lang="en">
For use with llSetPhysicsMaterial as a bitwise value in its material_bits parameter, to set the gravity multiplier
    </description>
  </constant>

  <constant name="GRAVITY_MULTIPLIER" type="integer" value="3" grid="aa">
    <description lang="en">
For use with llSetPhysicsMaterial as a bitwise value in its material_bits parameter, to set the gravity multiplier
    </description>
  </constant>

  <constant name="MASK_BASE" type="integer" value="0">
    <description lang="en">
Base permissions
    </description>
  </constant>

  <constant name="MASK_OWNER" type="integer" value="1">
    <description lang="en">
Owner permissions
    </description>
  </constant>

  <constant name="MASK_GROUP" type="integer" value="2">
    <description lang="en">
Group permissions
    </description>
  </constant>

  <constant name="MASK_EVERYONE" type="integer" value="3">
    <description lang="en">
Everyone permissions
    </description>
  </constant>

  <constant name="MASK_NEXT" type="integer" value="4">
    <description lang="en">
Next owner permissions
    </description>
  </constant>

  <constant name="PERM_TRANSFER" type="integer" value="0x00002000">
    <description lang="en">
Transfer permission
    </description>
  </constant>

  <constant name="PERM_MODIFY" type="integer" value="0x00004000">
    <description lang="en">
Modify permission
    </description>
  </constant>

  <constant name="PERM_COPY" type="integer" value="0x00008000">
    <description lang="en">
Copy permission
    </description>
  </constant>

  <constant name="PERM_MOVE" type="integer" value="0x00080000">
    <description lang="en">
Move permission
    </description>
  </constant>

  <constant name="PERM_ALL" type="integer" value="0x7FFFFFFF">
    <description lang="en">
Move/Modify/Copy/Transfer permissions
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_STOP" type="integer" value="0">
    <description lang="en">
Stop media stream
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_PAUSE" type="integer" value="1">
    <description lang="en">
Pause media stream
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_PLAY" type="integer" value="2">
    <description lang="en">
Play media stream
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_LOOP" type="integer" value="3">
    <description lang="en">
Loop media stream
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_LOOP_SET" type="integer" value="13" grid="sl aa">
    <description lang="en">
Get or set the parcel's media loop duration
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_TEXTURE" type="integer" value="4">
    <description lang="en">
Get or set the parcel's media texture
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_URL" type="integer" value="5">
    <description lang="en">
Get or set the parcel's media url
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_TYPE" type="integer" value="10">
    <description lang="en">
Get or set the parcel's media mimetype
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_DESC" type="integer" value="12">
    <description lang="en">
Get or set the parcel's media description
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_TIME" type="integer" value="6">
    <description lang="en">
Set media stream to specific time
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_SIZE" type="integer" value="11">
    <description lang="en">
Get or set the parcel's media pixel resolution
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_AGENT" type="integer" value="7">
    <description lang="en">
Allows media stream commands to apply to only one agent
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_UNLOAD" type="integer" value="8">
    <description lang="en">
Unloads the media stream
    </description>
  </constant>

  <constant name="PARCEL_MEDIA_COMMAND_AUTO_ALIGN" type="integer" value="9">
    <description lang="en">
Auto aligns the media stream to the texture size. May cause a performance hit and loss of some visual quality.
    </description>
  </constant>

  <constant name="PAY_HIDE" type="integer" value="-1">
    <description lang="en">
Used with llSetPayPrice to hide a button
    </description>
  </constant>

  <constant name="PAY_DEFAULT" type="integer" value="-2">
    <description lang="en">
Used with llSetPayPrice to use the default price for a button
    </description>
  </constant>

  <constant name="LIST_STAT_MAX" type="integer" value="2" version="sl:1.9.0(15)">
    <description lang="en">
Used with llListStatistics to find the largest number in a list
    </description>
  </constant>

  <constant name="LIST_STAT_MIN" type="integer" value="1" version="sl:1.9.0(15)">
    <description lang="en">
Used with llListStatistics to find the smallest number in a list
    </description>
  </constant>

  <constant name="LIST_STAT_MEAN" type="integer" value="3" version="sl:1.9.0(15)">
    <description lang="en">
Used with llListStatistics to find the mean of the numbers in a list
    </description>
  </constant>

  <constant name="LIST_STAT_MEDIAN" type="integer" value="4" version="sl:1.9.0(15)">
    <description lang="en">
Used with llListStatistics to find the median of the numbers in a list
    </description>
  </constant>

  <constant name="LIST_STAT_STD_DEV" type="integer" value="5" version="sl:1.9.0(15)">
    <description lang="en">
Used with llListStatistics to find the standard deviation of the numbers in a list
    </description>
  </constant>

  <constant name="LIST_STAT_SUM" type="integer" value="6" version="sl:1.9.0(15)">
    <description lang="en">
Used with llListStatistics to find the sum of the numbers in a list
    </description>
  </constant>

  <constant name="LIST_STAT_SUM_SQUARES" type="integer" value="7" version="sl:1.9.0(15)">
    <description lang="en">
Used with llListStatistics to find the sum of the squares of the numbers in a list
    </description>
  </constant>

  <constant name="LIST_STAT_NUM_COUNT" type="integer" value="8" version="sl:1.9.0(15)">
    <description lang="en">
Used with llListStatistics to find how many numbers are in a list
    </description>
  </constant>

  <constant name="LIST_STAT_GEOMETRIC_MEAN" type="integer" value="9" version="sl:1.9.0(15)">
    <description lang="en">
Used with llListStatistics to find the geometric mean of the numbers in a list (all numbers must be &gt; 0)
    </description>
  </constant>

  <constant name="LIST_STAT_HARMONIC_MEAN" type="integer" value="100" grid="os aa">
    <description lang="en">
Used with llListStatistics to find the harmonic mean of the numbers in a list (all numbers must be &lt;&gt; 0)
    </description>
  </constant>

  <constant name="LIST_STAT_RANGE" type="integer" value="0" version="sl:1.9.0(15)">
    <description lang="en">
Used with llListStatistics to find the range of the numbers in a list
    </description>
  </constant>

  <constant name="PARCEL_FLAG_ALLOW_FLY" type="integer" value="0x00000001" version="sl:1.9.1.9">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel allows flying
    </description>
  </constant>

  <constant name="PARCEL_FLAG_ALLOW_GROUP_SCRIPTS" type="integer" value="0x02000000">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel allows group scripts
    </description>
  </constant>

  <constant name="PARCEL_FLAG_ALLOW_SCRIPTS" type="integer" value="0x00000002" version="sl:1.9.1.9">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel allows outside scripts
    </description>
  </constant>

  <constant name="PARCEL_FLAG_ALLOW_LANDMARK" type="integer" value="0x00000008" version="sl:1.9.1.9">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel allows landmarks to be created
    </description>
  </constant>

  <constant name="PARCEL_FLAG_ALLOW_TERRAFORM" type="integer" value="0x00000010" version="sl:1.9.1.9">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel allows anyone to terraform the land
    </description>
  </constant>

  <constant name="PARCEL_FLAG_ALLOW_DAMAGE" type="integer" value="0x00000020" version="sl:1.9.1.9">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel allows damage
    </description>
  </constant>

  <constant name="PARCEL_FLAG_ALLOW_CREATE_OBJECTS" type="integer" value="0x00000040" version="sl:1.9.1.9">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel allows anyone to create objects
    </description>
  </constant>

  <constant name="PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS" type="integer" value="0x04000000">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel allows group members or objects to create objects
    </description>
  </constant>

  <constant name="PARCEL_FLAG_USE_ACCESS_GROUP" type="integer" value="0x00000100" version="sl:1.9.1.9">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel limits access to a group
    </description>
  </constant>

  <constant name="PARCEL_FLAG_USE_ACCESS_LIST" type="integer" value="0x00000200" version="sl:1.9.1.9">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel limits access to a list of residents
    </description>
  </constant>

  <constant name="PARCEL_FLAG_USE_BAN_LIST" type="integer" value="0x00000400" version="sl:1.9.1.9">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel uses a ban list
    </description>
  </constant>

  <constant name="PARCEL_FLAG_USE_LAND_PASS_LIST" type="integer" value="0x00000800" version="sl:1.9.1.9">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel allows passes to be purchased
    </description>
  </constant>

  <constant name="PARCEL_FLAG_LOCAL_SOUND_ONLY" type="integer" value="0x00008000" version="sl:1.9.1.9">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel restricts spacialized sound to the parcel
    </description>
  </constant>

  <constant name="PARCEL_FLAG_RESTRICT_PUSHOBJECT" type="integer" value="0x00200000" version="sl:1.11.2(1)">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel restricts llPushObject calls
    </description>
  </constant>

  <constant name="PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY" type="integer" value="0x08000000" version="sl:1.15.0(2)">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel allows all objects to enter
    </description>
  </constant>

  <constant name="PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY" type="integer" value="0x10000000" version="sl:1.15.0(2)">
    <description lang="en">
Used with llGetParcelFlags to find if a parcel only allows group (and owner) objects to enter
    </description>
  </constant>

  <constant name="REGION_FLAG_ALLOW_DAMAGE" type="integer" value="0x00000001" version="sl:1.9.0(15)">
    <description lang="en">
Used with llGetRegionFlags to find if a region is entirely damage enabled
    </description>
  </constant>

  <constant name="REGION_FLAG_FIXED_SUN" type="integer" value="0x00000010" version="sl:1.9.0(15)">
    <description lang="en">
Used with llGetRegionFlags to find if a region has a fixed sun position
    </description>
  </constant>

  <constant name="REGION_FLAG_BLOCK_TERRAFORM" type="integer" value="0x00000040" version="sl:1.9.0(15)">
    <description lang="en">
Used with llGetRegionFlags to find if a region terraforming disabled
    </description>
  </constant>

  <constant name="REGION_FLAG_SANDBOX" type="integer" value="0x00000100" version="sl:1.9.0(15)">
    <description lang="en">
Used with llGetRegionFlags to find if a region is a sandbox
    </description>
  </constant>

  <constant name="REGION_FLAG_DISABLE_COLLISIONS" type="integer" value="0x00001000" version="sl:1.9.0(15)">
    <description lang="en">
Used with llGetRegionFlags to find if a region has disabled collisions
    </description>
  </constant>

  <constant name="REGION_FLAG_DISABLE_PHYSICS" type="integer" value="0x00004000" version="sl:1.9.0(15)">
    <description lang="en">
Used with llGetRegionFlags to find if a region has disabled physics
    </description>
  </constant>

  <constant name="REGION_FLAG_BLOCK_FLY" type="integer" value="0x00080000" version="sl:1.9.0(15)">
    <description lang="en">
Used with llGetRegionFlags to find if a region blocks flying
    </description>
  </constant>

  <constant name="REGION_FLAG_ALLOW_DIRECT_TELEPORT" type="integer" value="0x00100000" version="sl:1.9.0(15)">
    <description lang="en">
Used with llGetRegionFlags to find if a region allows direct teleports
    </description>
  </constant>

  <constant name="REGION_FLAG_RESTRICT_PUSHOBJECT" type="integer" value="0x00400000" version="sl:1.11.2(1)">
    <description lang="en">
Used with llGetRegionFlags to find if a region restricts llPushObject calls
    </description>
  </constant>

  <constant name="HTTP_METHOD" type="integer" value="0">
    <description lang="en">
Used with llHTTPRequest to specify the method, such as "GET" or "POST"
    </description>
  </constant>

  <constant name="HTTP_MIMETYPE" type="integer" value="1" version="sl:1.10.4(0)">
    <description lang="en">
Used with llHTTPRequest to specify the MIME type, defaults to "text/plain"
    </description>
  </constant>

  <constant name="HTTP_BODY_MAXLENGTH" type="integer" value="2">
    <description lang="en">
Used with llHTTPRequest to specify the maximum reponse body to return
    </description>
  </constant>

  <constant name="HTTP_VERIFY_CERT" type="integer" value="3" version="sl:1.10.4(0)">
    <description lang="en">
Used with llHTTPRequest to specify SSL certificate verification
    </description>
  </constant>

  <constant name="HTTP_BODY_TRUNCATED" type="integer" value="0" grid="sl">
    <description lang="en">
Used with http_response to indicate truncation point in bytes
    </description>
  </constant>

  <constant name="HTTP_CUSTOM_HEADER" type="integer" value="5" grid="sl aa">
    <description lang="en">
Used with http_response to indicate truncation point in bytes
    </description>
  </constant>

  <constant name="HTTP_VERBOSE_THROTTLE" type="integer" value="4" grid="sl aa">
    <description lang="en">
Used with llHTTPRequest to toggle errors on outgoing requests throttling hit
    </description>
  </constant>

  <constant name="PARCEL_COUNT_TOTAL" type="integer" value="0" version="sl:1.13.0(8)">
    <description lang="en">
Used with llGetParcelPrimCount to get the total number of prims on the parcel
    </description>
  </constant>

  <constant name="PARCEL_COUNT_OWNER" type="integer" value="1" version="sl:1.13.0(8)">
    <description lang="en">
Used with llGetParcelPrimCount to get the number of prims on the parcel owned by the owner
    </description>
  </constant>

  <constant name="PARCEL_COUNT_GROUP" type="integer" value="2" version="sl:1.13.0(8)">
    <description lang="en">
Used with llGetParcelPrimCount to get the number of prims on the parcel owned by the group
    </description>
  </constant>

  <constant name="PARCEL_COUNT_OTHER" type="integer" value="3" version="sl:1.13.0(8)">
    <description lang="en">
Used with llGetParcelPrimCount to get the number of prims on the parcel owned by others
    </description>
  </constant>

  <constant name="PARCEL_COUNT_SELECTED" type="integer" value="4" version="sl:1.13.0(8)">
    <description lang="en">
Used with llGetParcelPrimCount to get the number of prims on the parcel currently selected or sat upon
    </description>
  </constant>

  <constant name="PARCEL_COUNT_TEMP" type="integer" value="5" version="sl:1.13.0(8)">
    <description lang="en">
Used with llGetParcelPrimCount to get the number of prims on the parcel that are temp on rez
    </description>
  </constant>

  <constant name="PARCEL_DETAILS_NAME" type="integer" value="0" version="sl:1.13.0(8)">
    <description lang="en">
Used with llGetParcelDetails to get the parcel name
    </description>
  </constant>

  <constant name="PARCEL_DETAILS_DESC" type="integer" value="1" version="sl:1.13.0(8)">
    <description lang="en">
Used with llGetParcelDetails to get the parcel description
    </description>
  </constant>

  <constant name="PARCEL_DETAILS_OWNER" type="integer" value="2" version="sl:1.13.0(8)">
    <description lang="en">
Used with llGetParcelDetails to get the parcel owner id
    </description>
  </constant>

  <constant name="PARCEL_DETAILS_GROUP" type="integer" value="3" version="sl:1.13.0(8)">
    <description lang="en">
Used with llGetParcelDetails to get the parcel group id
    </description>
  </constant>

  <constant name="PARCEL_DETAILS_AREA" type="integer" value="4" version="sl:1.13.0(8)">
    <description lang="en">
Used with llGetParcelDetails to get the parcel area in square meters
    </description>
  </constant>

  <constant name="PARCEL_DETAILS_ID" type="integer" value="5">
    <description lang="en">
Used with llGetParcelDetails to get the parcel id
    </description>
  </constant>

  <constant name="PARCEL_DETAILS_CLAIMDATE" type="integer" value="10" grid="os">
    <description lang="en">
    </description>
  </constant>

  <constant name="PARCEL_DETAILS_SEE_AVATARS" type="integer" value="6">
    <description lang="en">
Used with llGetParcelDetails to get the avatars visibility setting
    </description>
  </constant>

  <constant name="PARCEL_DETAILS_PRIVACY" type="integer" value="6" grid="aa">
    <description lang="en">
Used with llGetParcelDetails to get the avatars visibility setting
    </description>
  </constant>

  <constant name="STRING_TRIM_HEAD" type="integer" value="0x1" version="sl:1.15.0(2)">
    <description lang="en">
Used with llStringTrim to trim leading spaces from a string
    </description>
  </constant>

  <constant name="STRING_TRIM_TAIL" type="integer" value="0x2" version="sl:1.15.0(2)">
    <description lang="en">
Used with llStringTrim to trim trailing spaces from a string
    </description>
  </constant>

  <constant name="STRING_TRIM" type="integer" value="0x3" version="sl:1.15.0(2)">
    <description lang="en">
Used with llStringTrim to trim both leading and trailing spaces from a string
    </description>
  </constant>

  <constant name="CLICK_ACTION_NONE" type="integer" value="0">
    <description lang="en">
Used with llSetClickAction to disable the click action
    </description>
  </constant>

  <constant name="CLICK_ACTION_TOUCH" type="integer" value="0">
    <description lang="en">
Used with llSetClickAction to set touch as the default action when object is clicked
    </description>
  </constant>

  <constant name="CLICK_ACTION_SIT" type="integer" value="1">
    <description lang="en">
Used with llSetClickAction to set sit as the default action when object is clicked
    </description>
  </constant>

  <constant name="CLICK_ACTION_BUY" type="integer" value="2">
    <description lang="en">
Used with llSetClickAction to set buy as the default action when object is clicked
    </description>
  </constant>

  <constant name="CLICK_ACTION_PAY" type="integer" value="3">
    <description lang="en">
Used with llSetClickAction to set pay as the default action when object is clicked
    </description>
  </constant>

  <constant name="CLICK_ACTION_OPEN" type="integer" value="4">
    <description lang="en">
Used with llSetClickAction to set open as the default action when object is clicked
    </description>
  </constant>

  <constant name="CLICK_ACTION_PLAY" type="integer" value="5">
    <description lang="en">
Used with llSetClickAction to set play as the default action when object is clicked
    </description>
  </constant>

  <constant name="CLICK_ACTION_OPEN_MEDIA" type="integer" value="6">
    <description lang="en">
Used with llSetClickAction to set open-media as the default action when object is clicked
    </description>
  </constant>

  <constant name="CLICK_ACTION_ZOOM" type="integer" value="7" grid="os aa">
    <description lang="en">
Used with llSetClickAction to set zoom in as the default action when object is clicked
    </description>
  </constant>

  <constant name="TOUCH_INVALID_FACE" type="integer" value="-1">
    <description lang="en">
Value returned by llDetectedTouchFace when the touch position is not valid
    </description>
  </constant>

  <constant name="PRIM_MEDIA_ALT_IMAGE_ENABLE" type="integer" value="0">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to enable the default alt image for media
    </description>
  </constant>

  <constant name="PRIM_MEDIA_CONTROLS" type="integer" value="1">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to determine the controls shown for media
    </description>
  </constant>

  <constant name="PRIM_MEDIA_CURRENT_URL" type="integer" value="2">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to navigate/access the current URL
    </description>
  </constant>

  <constant name="PRIM_MEDIA_HOME_URL" type="integer" value="3">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to access the home URL
    </description>
  </constant>

  <constant name="PRIM_MEDIA_AUTO_LOOP" type="integer" value="4">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to determine if media should auto-loop (if applicable)
    </description>
  </constant>

  <constant name="PRIM_MEDIA_AUTO_PLAY" type="integer" value="5">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to determine if media should start playing as soon as it is created
    </description>
  </constant>

  <constant name="PRIM_MEDIA_AUTO_SCALE" type="integer" value="6">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to determine if media should scale to fit the face it is on
    </description>
  </constant>

  <constant name="PRIM_MEDIA_AUTO_ZOOM" type="integer" value="7">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to determine if the user would zoom in when viewing media
    </description>
  </constant>

  <constant name="PRIM_MEDIA_FIRST_CLICK_INTERACT" type="integer" value="8">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to determine whether the user interacts with media or not when she first clicks it (versus selection)
    </description>
  </constant>

  <constant name="PRIM_MEDIA_WIDTH_PIXELS" type="integer" value="9">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to access the media's width in pixels
    </description>
  </constant>

  <constant name="PRIM_MEDIA_HEIGHT_PIXELS" type="integer" value="10">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to access the media's height in pixels
    </description>
  </constant>

  <constant name="PRIM_MEDIA_WHITELIST_ENABLE" type="integer" value="11">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to determine if the domain whitelist is enabled
    </description>
  </constant>

  <constant name="PRIM_MEDIA_WHITELIST" type="integer" value="12">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to access the media's list of allowable URL prefixes to navigate to
    </description>
  </constant>

  <constant name="PRIM_MEDIA_PERMS_INTERACT" type="integer" value="13">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to determine the permissions for who can interact with the media
    </description>
  </constant>

  <constant name="PRIM_MEDIA_PERMS_CONTROL" type="integer" value="14">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams to determine the permissions for who has controls
    </description>
  </constant>

  <constant name="PRIM_MEDIA_PARAM_MAX" type="integer" value="14" grid="sl">
    <description lang="en">
The value of the largest media param
    </description>
  </constant>

  <constant name="PRIM_MEDIA_CONTROLS_STANDARD" type="integer" value="0">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_CONTROLS value meaning "standard controls"
    </description>
  </constant>

  <constant name="PRIM_MEDIA_CONTROLS_MINI" type="integer" value="1">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_CONTROLS value meaning "mini controls"
    </description>
  </constant>

  <constant name="PRIM_MEDIA_PERM_NONE" type="integer" value="0x0">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_PERMS_INTERACT or PRIM_MEDIA_PERMS_CONTROL bit, no permissions
    </description>
  </constant>

  <constant name="PRIM_MEDIA_PERM_OWNER" type="integer" value="0x1">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_PERMS_INTERACT or PRIM_MEDIA_PERMS_CONTROL bit, owner permissions
    </description>
  </constant>

  <constant name="PRIM_MEDIA_PERM_GROUP" type="integer" value="0x2">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_PERMS_INTERACT or PRIM_MEDIA_PERMS_CONTROL bit, group permissions
    </description>
  </constant>

  <constant name="PRIM_MEDIA_PERM_ANYONE" type="integer" value="0x4">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams, a PRIM_MEDIA_PERMS_INTERACT or PRIM_MEDIA_PERMS_CONTROL bit, anyone has permissions
    </description>
  </constant>

  <constant name="PRIM_MEDIA_MAX_URL_LENGTH" type="integer" value="1024" grid="sl">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams, the maximum length of PRIM_MEDIA_CURRENT_URL or PRIM_MEDIA_HOME_URL
    </description>
  </constant>

  <constant name="PRIM_MEDIA_MAX_WHITELIST_SIZE" type="integer" value="1024" grid="sl">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams, the maximum length, in bytes, of PRIM_MEDIA_WHITELIST
    </description>
  </constant>

  <constant name="PRIM_MEDIA_MAX_WHITELIST_COUNT" type="integer" value="64" grid="sl">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams, the maximum number of items allowed in PRIM_MEDIA_WHITELIST
    </description>
  </constant>

  <constant name="PRIM_MEDIA_MAX_WIDTH_PIXELS" type="integer" value="2048" grid="sl">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams, the maximum width allowed in PRIM_MEDIA_WIDTH_PIXELS
    </description>
  </constant>

  <constant name="PRIM_MEDIA_MAX_HEIGHT_PIXELS" type="integer" value="2048" grid="sl">
    <description lang="en">
Used with ll{Get,Set}PrimMediaParams, the maximum width allowed in PRIM_MEDIA_HEIGHT_PIXELS
    </description>
  </constant>

  <constant name="STATUS_OK" type="integer" value="0" grid="sl">
    <description lang="en">
Result of llSetPrimMediaParams function call was success
    </description>
  </constant>

  <constant name="LSL_STATUS_OK" type="integer" value="0" grid="os aa">
    <description lang="en">
Result of llSetPrimMediaParams function call was success
    </description>
  </constant>

  <constant name="STATUS_MALFORMED_PARAMS" type="integer" value="1000" grid="sl">
    <description lang="en">
llSetPrimMediaParams function was called with malformed params
    </description>
  </constant>

  <constant name="LSL_STATUS_MALFORMED_PARAMS" type="integer" value="1000" grid="os aa">
    <description lang="en">
llSetPrimMediaParams function was called with malformed params
    </description>
  </constant>

  <constant name="STATUS_TYPE_MISMATCH" type="integer" value="1001" grid="sl">
    <description lang="en">
Argument(s) passed to llSetPrimMediaParams function had a type mismatch
    </description>
  </constant>

  <constant name="LSL_STATUS_TYPE_MISMATCH" type="integer" value="1001" grid="os aa">
    <description lang="en">
Argument(s) passed to llSetPrimMediaParams function had a type mismatch
    </description>
  </constant>

  <constant name="STATUS_BOUNDS_ERROR" type="integer" value="1002" grid="sl">
    <description lang="en">
Argument(s) passed to llSetPrimMediaParams function had a bounds error
    </description>
  </constant>

  <constant name="LSL_STATUS_BOUNDS_ERROR" type="integer" value="1002" grid="os aa">
    <description lang="en">
Argument(s) passed to llSetPrimMediaParams function had a bounds error
    </description>
  </constant>

  <constant name="STATUS_NOT_FOUND" type="integer" value="1003" grid="sl">
    <description lang="en">
llSetPrimMediaParams reported that the object or other item was not found
    </description>
  </constant>

  <constant name="LSL_STATUS_NOT_FOUND" type="integer" value="1003" grid="os aa">
    <description lang="en">
llSetPrimMediaParams reported that the object or other item was not found
    </description>
  </constant>

  <constant name="STATUS_NOT_SUPPORTED" type="integer" value="1004" grid="sl">
    <description lang="en">
Feature not supported in llSetPrimMediaParams
    </description>
  </constant>

  <constant name="LSL_STATUS_NOT_SUPPORTED" type="integer" value="1004" grid="os aa">
    <description lang="en">
Feature not supported in llSetPrimMediaParams
    </description>
  </constant>

  <constant name="STATUS_INTERNAL_ERROR" type="integer" value="1999" grid="sl">
    <description lang="en">
An internal error occurred in llSetPrimMediaParams
    </description>
  </constant>

  <constant name="LSL_STATUS_INTERNAL_ERROR" type="integer" value="1999" grid="os aa">
    <description lang="en">
An internal error occurred in llSetPrimMediaParams
    </description>
  </constant>

  <constant name="STATUS_WHITELIST_FAILED" type="integer" value="2001" grid="sl">
    <description lang="en">
URL failed to pass whitelist in llSetPrimMediaParams
    </description>
  </constant>

  <constant name="LSL_STATUS_WHITELIST_FAILED" type="integer" value="2001" grid="os aa">
    <description lang="en">
URL failed to pass whitelist in llSetPrimMediaParams
    </description>
  </constant>

  <constant name="CONTENT_TYPE_TEXT" type="integer" value="0" grid="sl aa">
    <description lang="en">
Used with llSetContentType to indicate text contents
    </description>
  </constant>

  <constant name="CONTENT_TYPE_HTML" type="integer" value="1" grid="sl aa">
    <description lang="en">
Used with llSetContentType to indicate HTML contents
    </description>
  </constant>

  <constant name="CONTENT_TYPE_XML" type="integer" value="2" grid="sl">
    <description lang="en">
Used with llSetContentType to indicate XML contents
    </description>
  </constant>

  <constant name="CONTENT_TYPE_XHTML" type="integer" value="3" grid="sl">
    <description lang="en">
Used with llSetContentType to indicate XHTML contents
    </description>
  </constant>

  <constant name="CONTENT_TYPE_ATOM" type="integer" value="4" grid="sl">
    <description lang="en">
Used with llSetContentType to indicate Atom Syndication Format contents
    </description>
  </constant>

  <constant name="CONTENT_TYPE_JSON" type="integer" value="5" grid="sl">
    <description lang="en">
Used with llSetContentType to indicate JSON (JavaScript Object Notation) contents
    </description>
  </constant>

  <constant name="CONTENT_TYPE_LLSD" type="integer" value="6" grid="sl">
    <description lang="en">
Used with llSetContentType to indicate LLSD (Linden Lab Serialized Data) contents
    </description>
  </constant>

  <constant name="CONTENT_TYPE_FORM" type="integer" value="7" grid="sl">
    <description lang="en">
Used with llSetContentType to indicate form data contents
    </description>
  </constant>

  <constant name="CONTENT_TYPE_RSS" type="integer" value="8" grid="sl">
    <description lang="en">
Used with llSetContentType to indicate RSS contents
    </description>
  </constant>

  <constant name="KFM_COMMAND" type="integer" value="0" grid="sl">
    <description lang="en">
Option for llSetKeyframedMotion, followed by one of KFM_CMD_STOP, KFM_CMD_PLAY, KFM_CMD_PAUSE. Note that KFM_COMMAND must be the only option in the list, and cannot be specified in the same function call that sets the keyframes list.
    </description>
  </constant>

  <constant name="KFM_COMMAND" type="integer" value="0x100" grid="aa">
    <description lang="en">
Option for llSetKeyframedMotion, followed by one of KFM_CMD_STOP, KFM_CMD_PLAY, KFM_CMD_PAUSE. Note that KFM_COMMAND must be the only option in the list, and cannot be specified in the same function call that sets the keyframes list.
    </description>
  </constant>

  <constant name="KFM_MODE" type="integer" value="1" grid="sl">
    <description lang="en">
Option for llSetKeyframedMotion, used to specify the playback mode, followed by one of KFM_FORWARD, KFM_LOOP, KFM_PING_PONG or KFM_REVERSE
    </description>
  </constant>

  <constant name="KFM_MODE" type="integer" value="0x2" grid="aa">
    <description lang="en">
Option for llSetKeyframedMotion, used to specify the playback mode, followed by one of KFM_FORWARD, KFM_LOOP, KFM_PING_PONG or KFM_REVERSE
    </description>
  </constant>

  <constant name="KFM_DATA" type="integer" value="2" grid="sl">
    <description lang="en">
Option for llSetKeyframedMotion, followed by a bitwise combination of KFM_TRANSLATION and KFM_ROTATION. If you specify one or the other, you should only include translations or rotations in your keyframe list.
    </description>
  </constant>

  <constant name="KFM_DATA" type="integer" value="0x1000" grid="aa">
    <description lang="en">
Option for llSetKeyframedMotion, followed by a bitwise combination of KFM_TRANSLATION and KFM_ROTATION. If you specify one or the other, you should only include translations or rotations in your keyframe list.
    </description>
  </constant>

  <constant name="KFM_FORWARD" type="integer" value="0" grid="sl">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_MODE to specify the forward playback mode
    </description>
  </constant>

  <constant name="KFM_FORWARD" type="integer" value="0x10" grid="aa">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_MODE to specify the forward playback mode
    </description>
  </constant>

  <constant name="KFM_LOOP" type="integer" value="1" grid="sl">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_MODE to specify the loop playback mode
    </description>
  </constant>

  <constant name="KFM_LOOP" type="integer" value="0x4" grid="aa">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_MODE to specify the loop playback mode
    </description>
  </constant>

  <constant name="KFM_PING_PONG" type="integer" value="2" grid="sl">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_MODE to specify the ping pong playback mode
    </description>
  </constant>

  <constant name="KFM_PING_PONG" type="integer" value="0x20" grid="aa">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_MODE to specify the ping pong playback mode
    </description>
  </constant>

  <constant name="KFM_REVERSE" type="integer" value="3" grid="sl">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_MODE to specify the reverse playback mode
    </description>
  </constant>

  <constant name="KFM_REVERSE" type="integer" value="0x8" grid="aa">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_MODE to specify the reverse playback mode
    </description>
  </constant>

  <constant name="KFM_ROTATION" type="integer" value="1" grid="sl">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_DATA, possibly as a bitwise combination with KFM_TRANSLATION
    </description>
  </constant>

  <constant name="KFM_ROTATION" type="integer" value="0x80" grid="aa">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_DATA, possibly as a bitwise combination with KFM_TRANSLATION
    </description>
  </constant>

  <constant name="KFM_TRANSLATION" type="integer" value="2" grid="sl">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_DATA, possibly as a bitwise combination with KFM_ROTATION
    </description>
  </constant>

  <constant name="KFM_TRANSLATION" type="integer" value="0x40" grid="aa">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_DATA, possibly as a bitwise combination with KFM_ROTATION
    </description>
  </constant>

  <constant name="KFM_CMD_PLAY" type="integer" value="0" grid="sl">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_COMMAND to play the motion
    </description>
  </constant>

  <constant name="KFM_CMD_PLAY" type="integer" value="0x400" grid="aa">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_COMMAND to play the motion
    </description>
  </constant>

  <constant name="KFM_CMD_STOP" type="integer" value="1" grid="sl">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_COMMAND to stop the motion
    </description>
  </constant>

  <constant name="KFM_CMD_STOP" type="integer" value="0x200" grid="aa">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_COMMAND to stop the motion
    </description>
  </constant>

  <constant name="KFM_CMD_PAUSE" type="integer" value="2" grid="sl">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_COMMAND to pause the motion
    </description>
  </constant>

  <constant name="KFM_CMD_PAUSE" type="integer" value="0x800" grid="aa">
    <description lang="en">
Option for llSetKeyframedMotion, used after KFM_COMMAND to pause the motion
    </description>
  </constant>

  <constant name="KFM_CMD_SET_MODE" type="integer" value="3" grid="sl" status="unimplemented">
    <description lang="en">
This constant has no use for keyframed motion.
    </description>
  </constant>

  <constant name="ESTATE_ACCESS_ALLOWED_AGENT_ADD" type="integer" value="0x4" grid="sl">
    <description lang="en">
Used with llManageEstateAccess to add an agent to this estate's allowed residents list
    </description>
  </constant>

  <constant name="ESTATE_ACCESS_ALLOWED_AGENT_ADD" type="integer" value="0" grid="os aa">
    <description lang="en">
Used with llManageEstateAccess to add an agent to this estate's allowed residents list
    </description>
  </constant>

  <constant name="ESTATE_ACCESS_ALLOWED_AGENT_REMOVE" type="integer" value="0x8" grid="sl">
    <description lang="en">
Used with llManageEstateAccess to remove an agent from this estate's allowed residents list
    </description>
  </constant>

  <constant name="ESTATE_ACCESS_ALLOWED_AGENT_REMOVE" type="integer" value="1" grid="os aa">
    <description lang="en">
Used with llManageEstateAccess to remove an agent from this estate's allowed residents list
    </description>
  </constant>

  <constant name="ESTATE_ACCESS_ALLOWED_GROUP_ADD" type="integer" value="0x10" grid="sl">
    <description lang="en">
Used with llManageEstateAccess to add a group to this estate's allowed groups list
    </description>
  </constant>

  <constant name="ESTATE_ACCESS_ALLOWED_GROUP_ADD" type="integer" value="2" grid="os aa">
    <description lang="en">
Used with llManageEstateAccess to add a group to this estate's allowed groups list
    </description>
  </constant>

  <constant name="ESTATE_ACCESS_ALLOWED_GROUP_REMOVE" type="integer" value="0x20" grid="sl">
    <description lang="en">
Used with llManageEstateAccess to remove a group from this estate's allowed groups list
    </description>
  </constant>

  <constant name="ESTATE_ACCESS_ALLOWED_GROUP_REMOVE" type="integer" value="3" grid="os aa">
    <description lang="en">
Used with llManageEstateAccess to remove a group from this estate's allowed groups list
    </description>
  </constant>

  <constant name="ESTATE_ACCESS_BANNED_AGENT_ADD" type="integer" value="0x40" grid="sl">
    <description lang="en">
Used with llManageEstateAccess to add an agent to this estate's banned residents list
    </description>
  </constant>

  <constant name="ESTATE_ACCESS_BANNED_AGENT_ADD" type="integer" value="4" grid="os aa">
    <description lang="en">
Used with llManageEstateAccess to add an agent to this estate's banned residents list
    </description>
  </constant>

  <constant name="ESTATE_ACCESS_BANNED_AGENT_REMOVE" type="integer" value="0x80" grid="sl">
    <description lang="en">
Used with llManageEstateAccess to remove an agent from this estate's banned residents list
    </description>
  </constant>

  <constant name="ESTATE_ACCESS_BANNED_AGENT_REMOVE" type="integer" value="5" grid="os aa">
    <description lang="en">
Used with llManageEstateAccess to remove an agent from this estate's banned residents list
    </description>
  </constant>

  <constant name="PROFILE_NONE" type="integer" value="0">
    <description lang="en">
Disables memory profiling when passed to llScriptProfiler
    </description>
  </constant>

  <constant name="PROFILE_SCRIPT_MEMORY" type="integer" value="1">
    <description lang="en">
Enables memory profiling when passed to llScriptProfiler
    </description>
  </constant>

  <constant name="RCERR_UNKNOWN" type="integer" value="-1" grid="sl os">
    <description lang="en">
Returned by llCastRay when the raycast failed for an unspecified reason
    </description>
  </constant>

  <constant name="RCERR_SIM_PERF_LOW" type="integer" value="-2" grid="sl os">
    <description lang="en">
Returned by llCastRay when the raycast failed because simulator performance is low
    </description>
  </constant>

  <constant name="RCERR_CAST_TIME_EXCEEDED" type="integer" value="-3" grid="sl">
    <description lang="en">
Returned by llCastRay when the raycast failed because the parcel or agent has exceeded the maximum time allowed for raycasting
    </description>
  </constant>

  <constant name="RCERR_CAST_TIME_EXCEEDED" type="integer" value="3" grid="os">
    <description lang="en">
Returned by llCastRay when the raycast failed because the parcel or agent has exceeded the maximum time allowed for raycasting
    </description>
  </constant>

  <constant name="RCERR_CAST_TIME_EXCEEDED" type="integer" value="1" grid="aa">
    <description lang="en">
Returned by llCastRay when the raycast failed because the parcel or agent has exceeded the maximum time allowed for raycasting
    </description>
  </constant>

  <constant name="RC_REJECT_TYPES" type="integer" value="0" grid="sl os">
    <description lang="en">
Option for llCastRay used to ignore specific types of objects, followed with a bitwise combination of RC_REJECT_AGENTS, RC_REJECT_PHYSICAL, RC_REJECT_NONPHYSICAL and RC_REJECT_LAND
    </description>
  </constant>

  <constant name="RC_REJECT_TYPES" type="integer" value="2" grid="aa">
    <description lang="en">
Option for llCastRay used to ignore specific types of objects, followed with a bitwise combination of RC_REJECT_AGENTS, RC_REJECT_PHYSICAL, RC_REJECT_NONPHYSICAL and RC_REJECT_LAND
    </description>
  </constant>

  <constant name="RC_DETECT_PHANTOM" type="integer" value="1" grid="sl os">
    <description lang="en">
Option for llCastRay followed with TRUE to detect phantom AND volume detect objects, FASLE otherwise
    </description>
  </constant>

  <constant name="RC_DETECT_PHANTOM" type="integer" value="16" grid="aa">
    <description lang="en">
Option for llCastRay followed with TRUE to detect phantom AND volume detect objects, FASLE otherwise
    </description>
  </constant>

  <constant name="RC_DATA_FLAGS" type="integer" value="2" grid="sl os">
    <description lang="en">
Option for llCastRay followed with a bitwise combination of RC_GET_NORMAL, RC_GET_ROOT_KEY and RC_GET_LINK_NUM
    </description>
  </constant>

  <constant name="RC_DATA_FLAGS" type="integer" value="4" grid="aa">
    <description lang="en">
Option for llCastRay followed with a bitwise combination of RC_GET_NORMAL, RC_GET_ROOT_KEY and RC_GET_LINK_NUM
    </description>
  </constant>

  <constant name="RC_MAX_HITS" type="integer" value="3" grid="sl os">
    <description lang="en">
Option for llCastRay followed with an integer specifying the maximum number of hits to return (must be &lt;= 256)
    </description>
  </constant>

  <constant name="RC_MAX_HITS" type="integer" value="8" grid="aa">
    <description lang="en">
Option for llCastRay followed with an integer specifying the maximum number of hits to return (must be &lt;= 256)
    </description>
  </constant>

  <constant name="RC_REJECT_AGENTS" type="integer" value="0x1" grid="sl os">
    <description lang="en">
Flag used in the RC_REJECT_TYPES mask to reject agents in llCastRay
    </description>
  </constant>

  <constant name="RC_REJECT_AGENTS" type="integer" value="0x2" grid="aa">
    <description lang="en">
Flag used in the RC_REJECT_TYPES mask to reject agents in llCastRay
    </description>
  </constant>

  <constant name="RC_REJECT_PHYSICAL" type="integer" value="0x2" grid="sl os">
    <description lang="en">
Flag used in the RC_REJECT_TYPES mask to reject physical objects in llCastRay
    </description>
  </constant>

  <constant name="RC_REJECT_PHYSICAL" type="integer" value="0x4" grid="aa">
    <description lang="en">
Flag used in the RC_REJECT_TYPES mask to reject physical objects in llCastRay
    </description>
  </constant>

  <constant name="RC_REJECT_NONPHYSICAL" type="integer" value="0x4" grid="sl os">
    <description lang="en">
Flag used in the RC_REJECT_TYPES mask to reject non-physical objects in llCastRay
    </description>
  </constant>

  <constant name="RC_REJECT_NONPHYSICAL" type="integer" value="0x8" grid="aa">
    <description lang="en">
Flag used in the RC_REJECT_TYPES mask to reject non-physical objects in llCastRay
    </description>
  </constant>

  <constant name="RC_REJECT_LAND" type="integer" value="0x8" grid="sl os">
    <description lang="en">
Flag used in the RC_REJECT_TYPES mask to reject land in llCastRay
    </description>
  </constant>

  <constant name="RC_REJECT_LAND" type="integer" value="0x10" grid="aa">
    <description lang="en">
Flag used in the RC_REJECT_TYPES mask to reject land in llCastRay
    </description>
  </constant>

  <constant name="RC_GET_NORMAL" type="integer" value="0x1" grid="sl os">
    <description lang="en">
Flag used in the RC_DATA_FLAGS mask to get hit normals in llCastRay results
    </description>
  </constant>

  <constant name="RC_GET_NORMAL" type="integer" value="0x2" grid="aa">
    <description lang="en">
Flag used in the RC_DATA_FLAGS mask to get hit normals in llCastRay results
    </description>
  </constant>

  <constant name="RC_GET_ROOT_KEY" type="integer" value="0x2" grid="sl os">
    <description lang="en">
Flag used in the RC_DATA_FLAGS mask to get root keys in llCastRay results
    </description>
  </constant>

  <constant name="RC_GET_ROOT_KEY" type="integer" value="0x4" grid="aa">
    <description lang="en">
Flag used in the RC_DATA_FLAGS mask to get root keys in llCastRay results
    </description>
  </constant>

  <constant name="RC_GET_LINK_NUM" type="integer" value="0x4" grid="sl os">
    <description lang="en">
Flag used in the RC_DATA_FLAGS mask to get link numbers in llCastRay results
    </description>
  </constant>

  <constant name="RC_GET_LINK_NUM" type="integer" value="0x8" grid="aa">
    <description lang="en">
Flag used in the RC_DATA_FLAGS mask to get link numbers in llCastRay results
    </description>
  </constant>

  <constant name="REQUIRE_LINE_OF_SIGHT" type="integer" value="2" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PURSUIT_FUZZ_FACTOR" type="integer" value="3" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PURSUIT_FUZZ_FACTOR" type="integer" value="8" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PURSUIT_INTERCEPT" type="integer" value="4" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PURSUIT_GOAL_TOLERANCE" type="integer" value="5" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PURSUIT_OFFSET" type="integer" value="1" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="FORCE_DIRECT_PATH" type="integer" value="1" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="AVOID_CHARACTERS" type="integer" value="1" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="AVOID_DYNAMIC_OBSTACLES" type="integer" value="2" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="AVOID_NONE" type="integer" value="0" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PU_EVADE_HIDDEN" type="integer" value="7" grid="sl aa">
    <description lang="en">
Triggered when an llEvade character thinks it has hidden from its pursuer
    </description>
  </constant>

  <constant name="PU_EVADE_SPOTTED" type="integer" value="8" grid="sl aa">
    <description lang="en">
Triggered when an llEvade character switches from hiding to running
    </description>
  </constant>

  <constant name="PU_FAILURE_INVALID_GOAL" type="integer" value="3" grid="sl aa">
    <description lang="en">
Goal is not on the navigation-mesh and cannot be reached
    </description>
  </constant>

  <constant name="PU_FAILURE_INVALID_START" type="integer" value="2" grid="sl aa">
    <description lang="en">
Character cannot navigate from the current location - e.g., the character is off the navmesh or too high above it
    </description>
  </constant>

  <constant name="PU_FAILURE_NO_VALID_DESTINATION" type="integer" value="6" grid="sl aa">
    <description lang="en">
There's no good place for the character to go - e.g., it is patrolling and all the patrol points are now unreachable
    </description>
  </constant>

  <constant name="PU_FAILURE_OTHER" type="integer" value="1000000" grid="sl aa">
    <description lang="en">
Unknown failure
    </description>
  </constant>

  <constant name="PU_FAILURE_TARGET_GONE" type="integer" value="5" grid="sl aa">
    <description lang="en">
Target (for llPursue or llEvade) can no longer be tracked - e.g., it left the region or is an avatar that is now more than about 30m outside the region
    </description>
  </constant>

  <constant name="PU_FAILURE_UNREACHABLE" type="integer" value="4" grid="sl aa">
    <description lang="en">
Goal is no longer reachable for some reason - e.g., an obstacle blocks the path
    </description>
  </constant>

  <constant name="PU_GOAL_REACHED" type="integer" value="1" grid="sl aa">
    <description lang="en">
Character has reached the goal and will stop or choose a new goal (if wandering)
    </description>
  </constant>

  <constant name="PU_SLOWDOWN_DISTANCE_REACHED" type="integer" value="0" grid="sl aa">
    <description lang="en">
Character is near current goal
    </description>
  </constant>

  <constant name="PU_FAILURE_NO_NAVMESH" type="integer" value="9" grid="sl aa">
    <description lang="en">
Triggered if no navmesh is available for the region
    </description>
  </constant>

  <constant name="PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED" type="integer" value="10" grid="sl">
    <description lang="en">
Triggered when a character enters a region with dynamic pathfinding disabled
    </description>
  </constant>

  <constant name="PU_FAILURE_PARCEL_UNREACHABLE" type="integer" value="11" grid="sl">
    <description lang="en">
Triggered when a character failed to enter a parcel because it is not allowed to enter, e.g. because the parcel is already full or because object entry was disabled after the navmesh was baked
    </description>
  </constant>

  <constant name="TRAVERSAL_TYPE" type="integer" value="7" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="TRAVERSAL_TYPE_SLOW" type="integer" value="0" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="TRAVERSAL_TYPE_SLOW" type="integer" value="4" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="TRAVERSAL_TYPE_FAST" type="integer" value="1" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="TRAVERSAL_TYPE_FAST" type="integer" value="2" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="TRAVERSAL_TYPE_NONE" type="integer" value="2" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="TRAVERSAL_TYPE_NONE" type="integer" value="1" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_AVOIDANCE_MODE" type="integer" value="5" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_AVOIDANCE_MODE" type="integer" value="9" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_CMD_JUMP" type="integer" value="1" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_CMD_SMOOTH_STOP" type="integer" value="2" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_CMD_STOP" type="integer" value="0" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_DESIRED_SPEED" type="integer" value="1" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_DESIRED_TURN_SPEED" type="integer" value="12" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_LENGTH" type="integer" value="3" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_MAX_ACCEL" type="integer" value="8" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_MAX_ACCEL" type="integer" value="10" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_MAX_ANGULAR_ACCEL" type="integer" value="13" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_MAX_DECEL" type="integer" value="9" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_MAX_DECEL" type="integer" value="11" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_MAX_SPEED" type="integer" value="13" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_MAX_ANGULAR_SPEED" type="integer" value="13" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_MAX_TURN_RADIUS" type="integer" value="10" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TURN_SPEED_MULTIPLIER" type="integer" value="14" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_ORIENTATION" type="integer" value="4" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_RADIUS" type="integer" value="2" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TYPE" type="integer" value="6" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TYPE" type="integer" value="8" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TYPE_A" type="integer" value="0" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TYPE_A" type="integer" value="1" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TYPE_B" type="integer" value="1" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TYPE_B" type="integer" value="2" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TYPE_C" type="integer" value="2" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TYPE_C" type="integer" value="3" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TYPE_D" type="integer" value="3" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TYPE_D" type="integer" value="4" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TYPE_NONE" type="integer" value="4" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_TYPE_NONE" type="integer" value="0" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="GCNP_RADIUS" type="integer" value="0" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="GCNP_STATIC" type="integer" value="1" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="NPC" type="integer" value="0x20" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="HORIZONTAL" type="integer" value="1" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="HORIZONTAL" type="integer" value="0" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="VERTICAL" type="integer" value="0" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="VERTICAL" type="integer" value="1" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PATROL_PAUSE_AT_WAYPOINTS" type="integer" value="0" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WANDER_PAUSE_AT_WAYPOINTS" type="integer" value="0" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES" type="integer" value="14" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="CHARACTER_STAY_WITHIN_PARCEL" type="integer" value="15" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="SIM_STAT_PCT_CHARS_STEPPED" type="integer" value="0" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="HTTP_PRAGMA_NO_CACHE" type="integer" value="6" grid="sl aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_PHYSICS" type="integer" value="21" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_PHANTOM" type="integer" value="22" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_TEMP_ON_REZ" type="integer" value="23" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="JSON_APPEND" type="integer" value="-1" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_RETURN_PARCEL" type="integer" value="0x1" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_RETURN_PARCEL_OWNER" type="integer" value="0x2" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_RETURN_REGION" type="integer" value="0x4" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="ERR_GENERIC" type="integer" value="-1" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="ERR_PARCEL_PERMISSIONS" type="integer" value="-2" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="ERR_MALFORMED_PARAMS" type="integer" value="-3" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="ERR_RUNTIME_PERMISSIONS" type="integer" value="-4" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="ERR_THROTTLED" type="integer" value="-5" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PRIM_NORMAL" type="integer" value="37" grid="sl" version="sl:14.06.20.291351">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PRIM_SPECULAR" type="integer" value="36" grid="sl" version="sl:14.06.20.291351">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PRIM_ALPHA_MODE" type="integer" value="38" grid="sl" version="sl:14.06.20.291351">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PRIM_ALPHA_MODE_NONE" type="integer" value="0" grid="sl" version="sl:14.06.20.291351">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PRIM_ALPHA_MODE_BLEND" type="integer" value="1" grid="sl" version="sl:14.06.20.291351">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PRIM_ALPHA_MODE_MASK" type="integer" value="2" grid="sl" version="sl:14.06.20.291351">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PRIM_ALPHA_MODE_EMISSIVE" type="integer" value="3" grid="sl" version="sl:14.06.20.291351">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_NONE" type="integer" value="0" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_THROTTLED" type="integer" value="1" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_EXPERIENCES_DISABLED" type="integer" value="2" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_INVALID_PARAMETERS" type="integer" value="3" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_NOT_PERMITTED" type="integer" value="4" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_NO_EXPERIENCE" type="integer" value="5" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_NOT_FOUND" type="integer" value="6" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_INVALID_EXPERIENCE" type="integer" value="7" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_EXPERIENCE_DISABLED" type="integer" value="8" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_EXPERIENCE_SUSPENDED" type="integer" value="9" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_UNKNOWN_ERROR" type="integer" value="10" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_QUOTA_EXCEEDED" type="integer" value="11" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_STORE_DISABLED" type="integer" value="12" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_STORAGE_EXCEPTION" type="integer" value="13" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_KEY_NOT_FOUND" type="integer" value="14" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_RETRY_UPDATE" type="integer" value="15" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_MATURITY_EXCEEDED" type="integer" value="16" grid="sl" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="XP_ERROR_NOT_PERMITTED_LAND" type="integer" value="17" grid="sl" version="sl:15.01.23.298475">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <!-- The following three constants were added as a result of SVC-5923 -->
  <constant name="PASS_IF_NOT_HANDLED" type="integer" value="0" grid="sl" version="sl:1.40.0">
    <description lang="en">
Used with llPassTouches to only pass touches to the root if the touch event was not handled.
    </description>
  </constant>

  <constant name="PASS_ALWAYS" type="integer" value="1" grid="sl" version="sl:1.40.0">
    <description lang="en">
Used with llPassTouches to always pass touches to the root regardless of whether the touch event was handled or not.
    </description>
  </constant>

  <constant name="PASS_NEVER" type="integer" value="2" grid="sl" version="sl:1.40.0">
    <description lang="en">
Used with llPassTouches to never pass touches to the root.
    </description>
  </constant>

  <constant name="OBJECT_PRIM_COUNT" type="integer" value="30" grid="sl" version="sl:16.01.05.309639">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_TOTAL_INVENTORY_COUNT" type="integer" value="31" grid="sl" version="sl:16.01.05.309639">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OBJECT_REZZER_KEY" type="integer" value="32" grid="sl" version="sl:16.01.19.310114">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>



<!-- These do not exist but are in the official viewer's keywords.ini:

  <constant name="PURSUIT_MODE" type="integer" value="">
    <description lang="en">
    </description>
  </constant>

-->


  <!-- String constants -->

  <constant name="NULL_KEY" type="string" value="00000000-0000-0000-0000-000000000000">
    <description lang="en">
Indicates an empty key
    </description>
  </constant>

  <constant name="EOF" type="string" value="&#x0A;&#x0A;&#x0A;">
    <description lang="en">
Indicates the last line of a notecard was read
    </description>
  </constant>

  <constant name="TEXTURE_BLANK" type="string" value="5748decc-f629-461c-9a36-a35a221fe21f">
    <description lang="en">
UUID for the "Blank" texture
    </description>
  </constant>

  <constant name="TEXTURE_DEFAULT" type="string" value="89556747-24cb-43ed-920b-47caed15465f">
    <description lang="en">
Alias for TEXTURE_PLYWOOD
    </description>
  </constant>

  <constant name="TEXTURE_MEDIA" type="string" value="8b5fec65-8d8d-9dc5-cda8-8fdf2716e361">
    <description lang="en">
UUID for the "Default Media" texture
    </description>
  </constant>

  <constant name="TEXTURE_PLYWOOD" type="string" value="89556747-24cb-43ed-920b-47caed15465f">
    <description lang="en">
UUID for the default "Plywood" texture
    </description>
  </constant>

  <constant name="TEXTURE_TRANSPARENT" type="string" value="8dcd4a48-2d37-4909-9f78-f7a9eb4ef903">
    <description lang="en">
UUID for the "Default Transparent" texture
    </description>
  </constant>

  <constant name="URL_REQUEST_GRANTED" type="string" value="URL_REQUEST_GRANTED">
    <description lang="en">
Used with http_request when a public URL is successfully granted
    </description>
  </constant>

  <constant name="URL_REQUEST_DENIED" type="string" value="URL_REQUEST_DENIED">
    <description lang="en">
Used with http_request when a public URL is not available
    </description>
  </constant>

  <constant name="JSON_INVALID" type="string" value="&#xFDD0;" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="JSON_OBJECT" type="string" value="&#xFDD1;" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="JSON_ARRAY" type="string" value="&#xFDD2;" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="JSON_NUMBER" type="string" value="&#xFDD3;" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="JSON_STRING" type="string" value="&#xFDD4;" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="JSON_NULL" type="string" value="&#xFDD5;" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="JSON_TRUE" type="string" value="&#xFDD6;" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="JSON_FALSE" type="string" value="&#xFDD7;" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="JSON_DELETE" type="string" value="&#xFDD8;" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>


<!-- These are actually strings without a constant, returned in the transaction_result() event. Maybe one is added some day...
  <constant name="LINDENDOLLAR_ENTITYDOESNOTEXIST" type="string" value="LINDENDOLLAR_ENTITYDOESNOTEXIST"/>
  <constant name="LINDENDOLLAR_INSUFFICIENTFUNDS" type="string" value="LINDENDOLLAR_INSUFFICIENTFUNDS"/>
  <constant name="LINDENDOLLAR_BADCLOCKSKEW" type="string" value="LINDENDOLLAR_BADCLOCKSKEW"/>
  <constant name="INVALID_AGENT" type="string" value="INVALID_AGENT"/>
  <constant name="INVALID_AMOUNT" type="string" value="INVALID_AMOUNT"/>
  <constant name="THROTTLED" type="string" value="THROTTLED"/>
  <constant name="MISSING_PERMISSION_DEBIT" type="string" value="MISSING_PERMISSION_DEBIT"/>
  <constant name="GROUP_OWNED" type="string" value="GROUP_OWNED"/>
  <constant name="TRANSFERS_DISABLED" type="string" value="TRANSFERS_DISABLED"/>
  <constant name="EXPIRED" type="string" value="EXPIRED"/>
  <constant name="SERVICE_ERROR" type="string" value="SERVICE_ERROR"/>
-->

<!-- These constants were in en_sl.dic but don't have a corresponding constant in LSL:
    PRIM_BUMP_
    PRIM_FULL
    VEHICLE_HOVER_GLOBAL_HEIGHT
    VEHICLE_HOVER_TERRAIN_ONLY
    VEHICLE_HOVER_WATER_ONLY
    PSYS_PART_BEAM_MASK
    LL_PART_HUD
    LL_PART_DEAD_MASK
    LL_PART_RANDOM_ACCEL_MASK
    LL_PART_RANDOM_VEL_MASK
    LL_PART_TRAIL_MASK
-->

<!-- This one is documented in the wiki as a feature request, but not implemented as of 2013-01-01:
    PRIM_PHYSICS_MATERIAL
-->


  <!-- Float constants -->

  <constant name="PI" type="float" value="3.14159265">
    <description lang="en">
3.1415926535897932384626433832795
    </description>
  </constant>

  <constant name="TWO_PI" type="float" value="6.2831853">
    <description lang="en">
6.283185307179586476925286766559
    </description>
  </constant>

  <constant name="PI_BY_TWO" type="float" value="1.57079632">
    <description lang="en">
1.5707963267948966192313216916398
    </description>
  </constant>

  <constant name="DEG_TO_RAD" type="float" value="0.017453292">
    <description lang="en">
To convert from degrees to radians
    </description>
  </constant>

  <constant name="RAD_TO_DEG" type="float" value="57.295779">
    <description lang="en">
To convert from radians to degrees
    </description>
  </constant>

  <constant name="SQRT2" type="float" value="1.4142135">
    <description lang="en">
1.4142135623730950488016887242097
    </description>
  </constant>

  <!-- Vector and rotation constants -->

  <constant name="ZERO_VECTOR" type="vector" value="&lt;0.0, 0.0, 0.0&gt;">
    <description lang="en">
&lt;0.0, 0.0, 0.0&gt;
    </description>
  </constant>

  <constant name="TOUCH_INVALID_TEXCOORD" type="vector" value="&lt;-1.0, -1.0, 0.0&gt;">
    <description lang="en">
Value returned by llDetectedTouchUV and llDetectedTouchST when the touch position is not valid
    </description>
  </constant>

  <constant name="TOUCH_INVALID_VECTOR" type="vector" value="&lt;0.0, 0.0, 0.0&gt;">
    <description lang="en">
Value returned by llDetectedTouchPos, llDetectedTouchNormal, and llDetectedTouchBinormal when the touch position is not valid
    </description>
  </constant>

  <constant name="ZERO_ROTATION" type="rotation" value="&lt;0.0, 0.0, 0.0, 1.0&gt;">
    <description lang="en">
&lt;0.0, 0.0, 0.0, 1.0&gt;
    </description>
  </constant>


  <!-- OpenSim/Aurora constants -->

  <constant name="STATS_ACTIVE_PRIMS" type="integer" value="7" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_ACTIVE_PRIMS" type="integer" value="12" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_ACTIVE_SCRIPTS" type="integer" value="19" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_ACTIVE_SCRIPTS" type="integer" value="15" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_AGENT_MS" type="integer" value="16" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_AGENT_MS" type="integer" value="8" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_AGENT_UPDATES" type="integer" value="3" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_CHILD_AGENTS" type="integer" value="5" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_CHILD_AGENTS" type="integer" value="14" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_FRAME_MS" type="integer" value="8" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_FRAME_MS" type="integer" value="4" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_IMAGE_MS" type="integer" value="11" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_IMAGE_MS" type="integer" value="9" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_IN_PACKETS_PER_SECOND" type="integer" value="13" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_IN_PACKETS_PER_SECOND" type="integer" value="17" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_NET_MS" type="integer" value="9" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_NET_MS" type="integer" value="5" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_OTHER_MS" type="integer" value="12" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_OTHER_MS" type="integer" value="6" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_OUT_PACKETS_PER_SECOND" type="integer" value="14" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_OUT_PACKETS_PER_SECOND" type="integer" value="18" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_PENDING_DOWNLOADS" type="integer" value="17" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_PENDING_DOWNLOADS" type="integer" value="19" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_PENDING_UPLOADS" type="integer" value="18" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_PENDING_UPLOADS" type="integer" value="20" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_PHYSICS_FPS" type="integer" value="2" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_PHYSICS_MS" type="integer" value="10" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_PHYSICS_MS" type="integer" value="7" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_ROOT_AGENTS" type="integer" value="4" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_ROOT_AGENTS" type="integer" value="13" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_SCRIPT_LPS" type="integer" value="20" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_SCRIPT_LPS" type="integer" value="16" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_SCRIPT_EPS" type="integer" value="31" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_SCRIPT_MS" type="integer" value="10" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_SIM_FPS" type="integer" value="1" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_TIME_DILATION" type="integer" value="0" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_TOTAL_PRIMS" type="integer" value="6" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_TOTAL_PRIMS" type="integer" value="11" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_UNACKED_BYTES" type="integer" value="15" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STATS_UNACKED_BYTES" type="integer" value="24" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>


  <!-- OpenSim-specific constants -->

  <!-- From LSL_Constants.cs -->

  <constant name="OS_ATTACH_MSG_ALL" type="integer" value="-65535" grid="os">
    <description lang="en">
Instructs osMessageAttachements to send the message to attachments on every point
    </description>
  </constant>

  <constant name="OS_ATTACH_MSG_INVERT_POINTS" type="integer" value="1" grid="os">
    <description lang="en">
Instructs osMessageAttachements to invert how the attachment points list should be treated (e.g. go from inclusive operation to exclusive operation)
    </description>
  </constant>

  <constant name="OS_ATTACH_MSG_OBJECT_CREATOR" type="integer" value="2" grid="os">
    <description lang="en">
Instructs osMessageAttachments to only send the message to attachments with a CreatorID that matches the host object CreatorID
    </description>
  </constant>

  <constant name="OS_ATTACH_MSG_SCRIPT_CREATOR" type="integer" value="4" grid="os">
    <description lang="en">
Instructs osMessageAttachments to only send the message to attachments with a CreatorID that matches the sending script CreatorID
    </description>
  </constant>

  <constant name="OS_LISTEN_REGEX_NAME" type="integer" value="0x1" grid="os">
    <description lang="en">
process name parameter as regex
   </description>
  </constant>

  <constant name="OS_LISTEN_REGEX_MESSAGE" type="integer" value="0x2" grid="os">
    <description lang="en">
process message parameter as regex
    </description>
  </constant>

  <constant name="OS_NPC" type="integer" value="0x01000000" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OS_NPC_CREATOR_OWNED" type="integer" value="0x1" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OS_NPC_FLY" type="integer" value="0" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OS_NPC_LAND_AT_TARGET" type="integer" value="2" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OS_NPC_NOT_OWNED" type="integer" value="0x2" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OS_NPC_NO_FLY" type="integer" value="1" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OS_NPC_RUNNING" type="integer" value="4" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OS_NPC_SENSE_AS_AGENT" type="integer" value="0x4" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="OS_NPC_SIT_NOW" type="integer" value="0" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <!-- From CM_Constants.cs -->

  <constant name="WL_WATER_COLOR" type="integer" value="0" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_FOG_DENSITY_EXPONENT" type="integer" value="1" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_UNDERWATER_FOG_MODIFIER" type="integer" value="2" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_REFLECTION_WAVELET_SCALE" type="integer" value="3" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_FRESNEL_SCALE" type="integer" value="4" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_FRESNEL_OFFSET" type="integer" value="5" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_REFRACT_SCALE_ABOVE" type="integer" value="6" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_REFRACT_SCALE_BELOW" type="integer" value="7" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_BLUR_MULTIPLIER" type="integer" value="8" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_BIG_WAVE_DIRECTION" type="integer" value="9" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_LITTLE_WAVE_DIRECTION" type="integer" value="10" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_NORMAL_MAP_TEXTURE" type="integer" value="11" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_HORIZON" type="integer" value="12" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_HAZE_HORIZON" type="integer" value="13" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_BLUE_DENSITY" type="integer" value="14" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_HAZE_DENSITY" type="integer" value="15" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_DENSITY_MULTIPLIER" type="integer" value="16" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_DISTANCE_MULTIPLIER" type="integer" value="17" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_MAX_ALTITUDE" type="integer" value="18" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SUN_MOON_COLOR" type="integer" value="19" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_AMBIENT" type="integer" value="20" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_EAST_ANGLE" type="integer" value="21" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SUN_GLOW_FOCUS" type="integer" value="22" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SUN_GLOW_SIZE" type="integer" value="23" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SCENE_GAMMA" type="integer" value="24" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_STAR_BRIGHTNESS" type="integer" value="25" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_COLOR" type="integer" value="26" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_XY_DENSITY" type="integer" value="27" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_COVERAGE" type="integer" value="28" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_SCALE" type="integer" value="29" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_DETAIL_XY_DENSITY" type="integer" value="30" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_SCROLL_X" type="integer" value="31" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_SCROLL_Y" type="integer" value="32" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_SCROLL_Y_LOCK" type="integer" value="33" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_SCROLL_X_LOCK" type="integer" value="34" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_DRAW_CLASSIC_CLOUDS" type="integer" value="35" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SUN_MOON_POSITION" type="integer" value="36" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>


  <!-- AuroraSim specific constants -->

  <!-- From LSL_Constants.cs -->

  <constant name="PASS_IF_NOT_HANDLED" type="integer" value="0" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PASS_ALWAYS" type="integer" value="1" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="PASS_NEVER" type="integer" value="2" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <!-- From AA_Constants.cs -->

  <constant name="ENABLE_GRAVITY" type="string" value="enable_gravity" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="GRAVITY_FORCE_X" type="string" value="gravity_force_x" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="GRAVITY_FORCE_Y" type="string" value="gravity_force_y" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="GRAVITY_FORCE_Z" type="string" value="gravity_force_z" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="ADD_GRAVITY_POINT" type="string" value="add_gravity_point" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="ADD_GRAVITY_FORCE" type="string" value="add_gravity_force" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="START_TIME_REVERSAL_SAVING" type="string" value="start_time_reversal_saving" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STOP_TIME_REVERSAL_SAVING" type="string" value="stop_time_reversal_saving" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="START_TIME_REVERSAL" type="string" value="start_time_reversal" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="STOP_TIME_REVERSAL" type="string" value="stop_time_reversal" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="BOT_FOLLOW_FLAG_NONE" type="integer" value="0" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="BOT_FOLLOW_FLAG_INDEFINITELY" type="integer" value="1" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="BOT_FOLLOW_FLAG_FORCEDIRECTPATH" type="integer" value="4" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="BOT_TAG_FIND_ALL" type="string" value="AllBots" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="BOT_FOLLOW_WALK" type="integer" value="0" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="BOT_FOLLOW_RUN" type="integer" value="1" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="BOT_FOLLOW_FLY" type="integer" value="2" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="BOT_FOLLOW_TELEPORT" type="integer" value="3" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="BOT_FOLLOW_WAIT" type="integer" value="4" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="BOT_FOLLOW_TRIGGER_HERE_EVENT" type="integer" value="1" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>


  <constant name="WL_OK" type="integer" value="-1" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_ERROR" type="integer" value="-2" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_ERROR_NO_SCENE_SET" type="integer" value="-3" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_ERROR_SCENE_MUST_BE_STATIC" type="integer" value="-4" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_ERROR_SCENE_MUST_NOT_BE_STATIC" type="integer" value="-5" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_ERROR_BAD_SETTING" type="integer" value="-6" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_ERROR_NO_PRESET_FOUND" type="integer" value="-7" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_AMBIENT" type="integer" value="0" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SKY_BLUE_DENSITY" type="integer" value="1" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SKY_BLUR_HORIZON" type="integer" value="2" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_COLOR" type="integer" value="3" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_POS_DENSITY1" type="integer" value="4" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_POS_DENSITY2" type="integer" value="5" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_SCALE" type="integer" value="6" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_SCROLL_X" type="integer" value="7" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_SCROLL_Y" type="integer" value="8" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_SCROLL_X_LOCK" type="integer" value="9" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_SCROLL_Y_LOCK" type="integer" value="10" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_CLOUD_SHADOW" type="integer" value="11" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SKY_DENSITY_MULTIPLIER" type="integer" value="12" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SKY_DISTANCE_MULTIPLIER" type="integer" value="13" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SKY_GAMMA" type="integer" value="14" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SKY_GLOW" type="integer" value="15" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SKY_HAZE_DENSITY" type="integer" value="16" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SKY_HAZE_HORIZON" type="integer" value="17" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SKY_LIGHT_NORMALS" type="integer" value="18" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SKY_MAX_ALTITUDE" type="integer" value="19" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SKY_STAR_BRIGHTNESS" type="integer" value="20" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_SKY_SUNLIGHT_COLOR" type="integer" value="21" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_BLUR_MULTIPLIER" type="integer" value="22" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_FRESNEL_OFFSET" type="integer" value="23" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_FRESNEL_SCALE" type="integer" value="24" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_NORMAL_MAP" type="integer" value="25" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_NORMAL_SCALE" type="integer" value="26" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_SCALE_ABOVE" type="integer" value="27" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_SCALE_BELOW" type="integer" value="28" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_UNDERWATER_FOG_MODIFIER" type="integer" value="29" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_FOG_COLOR" type="integer" value="30" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_FOG_DENSITY" type="integer" value="31" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_BIG_WAVE_DIRECTION" type="integer" value="32" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>

  <constant name="WL_WATER_LITTLE_WAVE_DIRECTION" type="integer" value="33" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </constant>


  <!-- Functions -->

  <function name="llSin" type="float">
    <param type="float" name="theta"/>
    <description lang="en">
Returns the sine of theta (theta in radians)
    </description>
  </function>

  <function name="llCos" type="float">
    <param type="float" name="theta"/>
    <description lang="en">
Returns the cosine of theta (theta in radians)
    </description>
  </function>

  <function name="llTan" type="float">
    <param type="float" name="theta"/>
    <description lang="en">
Returns the tangent of theta (theta in radians)
    </description>
  </function>

  <function name="llAtan2" type="float">
    <param type="float" name="y"/>
    <param type="float" name="x"/>
    <description lang="en">
Returns the arctangent2 of y, x
    </description>
  </function>

  <function name="llSqrt" type="float">
    <param type="float" name="val"/>
    <description lang="en">
Returns the square root of val, or returns 0 and triggers a Math Error for imaginary results
    </description>
  </function>

  <function name="llPow" type="float">
    <param type="float" name="base"/>
    <param type="float" name="exponent"/>
    <description lang="en">
Returns the base raised to the power exponent, or returns 0 and triggers Math Error for imaginary results
    </description>
  </function>

  <function name="llAbs" type="integer">
    <param type="integer" name="val"/>
    <description lang="en">
Returns the positive version of val
    </description>
  </function>

  <function name="llFabs" type="float">
    <param type="float" name="val"/>
    <description lang="en">
Returns the positive version of val
    </description>
  </function>

  <function name="llFrand" type="float">
    <param type="float" name="mag"/>
    <description lang="en">
Returns a pseudo random number in the range [0,mag) or (mag,0]
    </description>
  </function>

  <function name="llFloor" type="integer">
    <param type="float" name="val"/>
    <description lang="en">
Returns largest integer value &lt;= val
    </description>
  </function>

  <function name="llCeil" type="integer">
    <param type="float" name="val"/>
    <description lang="en">
Returns smallest integer value &gt;= val
    </description>
  </function>

  <function name="llRound" type="integer">
    <param type="float" name="val"/>
    <description lang="en">
Returns val rounded to the nearest integer
    </description>
  </function>

  <function name="llVecMag" type="float">
    <param type="vector" name="v"/>
    <description lang="en">
Returns the magnitude of v
    </description>
  </function>

  <function name="llVecNorm" type="vector">
    <param type="vector" name="v"/>
    <description lang="en">
Returns the v normalized
    </description>
  </function>

  <function name="llVecDist" type="float">
    <param type="vector" name="v1"/>
    <param type="vector" name="v2"/>
    <description lang="en">
Returns the 3D distance between v1 and v2
    </description>
  </function>

  <function name="llRot2Euler" type="vector">
    <param type="rotation" name="q"/>
    <description lang="en">
Returns the Euler representation (roll, pitch, yaw) of q
    </description>
  </function>

  <function name="llEuler2Rot" type="rotation">
    <param type="vector" name="v"/>
    <description lang="en">
Returns the rotation representation of Euler Angles v
    </description>
  </function>

  <function name="llAxes2Rot" type="rotation">
    <param type="vector" name="fwd"/>
    <param type="vector" name="left"/>
    <param type="vector" name="up"/>
    <description lang="en">
Returns the rotation defined by the coordinate axes
    </description>
  </function>

  <function name="llRot2Fwd" type="vector">
    <param type="rotation" name="q"/>
    <description lang="en">
Returns the forward vector defined by q
    </description>
  </function>

  <function name="llRot2Left" type="vector">
    <param type="rotation" name="q"/>
    <description lang="en">
Returns the left vector defined by q
    </description>
  </function>

  <function name="llRot2Up" type="vector">
    <param type="rotation" name="q"/>
    <description lang="en">
Returns the up vector defined by q
    </description>
  </function>

  <function name="llRotBetween" type="rotation">
    <param type="vector" name="v1"/>
    <param type="vector" name="v2"/>
    <description lang="en">
Returns the rotation to rotate v1 to v2
    </description>
  </function>

  <function name="llWhisper">
    <param type="integer" name="channel"/>
    <param type="string" name="msg"/>
    <description lang="en">
Whispers the text of msg on channel
    </description>
  </function>

  <!-- In AuroraSim, this function accepts an object type param instead of a string.
       We're not adding the Aurora specifics here.
  -->
  <function name="llSay">
    <param type="integer" name="channel"/>
    <param type="string" name="msg"/>
    <description lang="en">
Says the text of msg on channel
    </description>
  </function>

  <function name="llShout">
    <param type="integer" name="channel"/>
    <param type="string" name="msg"/>
    <description lang="en">
Shouts the text of msg on channel
    </description>
  </function>

  <function name="llListen" type="integer">
    <param type="integer" name="channel"/>
    <param type="string" name="name"/>
    <param type="key" name="id"/>
    <param type="string" name="msg"/>
    <description lang="en">
Sets a callback for msg on channel from name and id (name, id, and/or msg can be empty) and returns an identifier that can be used to deactivate or remove the listen
    </description>
  </function>

  <function name="llListenControl">
    <param type="integer" name="number"/>
    <param type="integer" name="active"/>
    <description lang="en">
Makes a listen event callback active or inactive
    </description>
  </function>

  <function name="llListenRemove">
    <param type="integer" name="number"/>
    <description lang="en">
Removes listen event callback number
    </description>
  </function>

  <function name="llSensor">
    <param type="string" name="name"/>
    <param type="key" name="id"/>
    <param type="integer" name="type"/>
    <param type="float" name="range"/>
    <param type="float" name="arc"/>
    <description lang="en">
Performs a single scan for name and id with type (AGENT, ACTIVE, PASSIVE, and/or SCRIPTED) within range meters and arc radians of forward vector (name, id, and/or keytype can be empty or 0)
    </description>
  </function>

  <function name="llSensorRepeat">
    <param type="string" name="name"/>
    <param type="key" name="id"/>
    <param type="integer" name="type"/>
    <param type="float" name="range"/>
    <param type="float" name="arc"/>
    <param type="float" name="rate"/>
    <description lang="en">
Sets a callback for name and id with type (AGENT, ACTIVE, PASSIVE, and/or SCRIPTED) within range meters and arc radians of forward vector (name, id, and/or keytype can be empty or 0) and repeats every rate seconds
    </description>
  </function>

  <function name="llSensorRemove">
    <description lang="en">
Removes the sensor setup by llSensorRepeat
    </description>
  </function>

  <function name="llDetectedName" type="string">
    <param type="integer" name="number"/>
    <description lang="en">
Returns the name of detected object number (returns empty string if number is not a valid sensed object)
    </description>
  </function>

  <function name="llDetectedKey" type="key">
    <param type="integer" name="number"/>
    <description lang="en">
Returns the key of detected object number (returns empty key if number is not a valid sensed object)
    </description>
  </function>

  <function name="llDetectedOwner" type="key">
    <param type="integer" name="number"/>
    <description lang="en">
Returns the key of detected object's owner (returns empty key if number is not a valid sensed object)
    </description>
  </function>

  <function name="llDetectedType" type="integer">
    <param type="integer" name="number"/>
    <description lang="en">
Returns the type (AGENT, ACTIVE, PASSIVE, SCRIPTED) of detected object (returns 0 if number is not a valid sensed object)
    </description>
  </function>

  <function name="llDetectedPos" type="vector">
    <param type="integer" name="number"/>
    <description lang="en">
Returns the position of detected object number (returns &lt;0,0,0&gt; if number is not a valid sensed object)
    </description>
  </function>

  <function name="llDetectedVel" type="vector">
    <param type="integer" name="number"/>
    <description lang="en">
Returns the velocity of detected object number (returns &lt;0,0,0&gt; if number is not a valid sensed object)
    </description>
  </function>

  <function name="llDetectedGrab" type="vector">
    <param type="integer" name="number"/>
    <description lang="en">
Returns the grab offset of the user touching object (returns &lt;0,0,0&gt; if number is not a valid sensed object)
    </description>
  </function>

  <function name="llDetectedRot" type="rotation">
    <param type="integer" name="number"/>
    <description lang="en">
Returns the rotation of detected object number (returns &lt;0,0,0,1&gt; if number is not a valid sensed object)
    </description>
  </function>

  <function name="llDetectedGroup" type="integer">
    <param type="integer" name="number"/>
    <description lang="en">
Returns TRUE if detected object is part of same group as owner
    </description>
  </function>

  <function name="llDetectedLinkNumber" type="integer">
    <param type="integer" name="number"/>
    <description lang="en">
Returns the link position of the triggered event for touches and collisions only
    </description>
  </function>

  <function name="llDie" energy="0">
    <description lang="en">
Deletes the object
    </description>
  </function>

  <function name="llGround" type="float">
    <param type="vector" name="offset"/>
    <description lang="en">
Returns the ground height below the object position + offset
    </description>
  </function>

  <function name="llCloud" type="float" status="deprecated">
    <param type="vector" name="offset"/>
    <description lang="en">
Returns the cloud density at the object position + offset.
DEPRECATED - It always returns 0.0 now.
    </description>
  </function>

  <function name="llWind" type="vector">
    <param type="vector" name="offset"/>
    <description lang="en">
Returns the wind velocity at the object position + offset
    </description>
  </function>

  <function name="llSetStatus" version="sl:0.1.0">
    <param type="integer" name="status"/>
    <param type="integer" name="value"/>
    <description lang="en">
Sets status (STATUS_PHYSICS, STATUS_PHANTOM, STATUS_BLOCK_GRAB, STATUS_ROTATE_X, STATUS_ROTATE_Y, and/or STATUS_ROTATE_Z) to value
    </description>
  </function>

  <function name="llGetStatus" type="integer">
    <param type="integer" name="status"/>
    <description lang="en">
Returns value of status (STATUS_PHYSICS, STATUS_PHANTOM, STATUS_BLOCK_GRAB, STATUS_ROTATE_X, STATUS_ROTATE_Y, and/or STATUS_ROTATE_Z)
    </description>
  </function>

  <function name="llSetScale" version="sl:0.1.0">
    <param type="vector" name="scale"/>
    <description lang="en">
Sets the scale of the prim
    </description>
  </function>

  <function name="llGetScale" type="vector">
    <description lang="en">
Returns the scale of the prim
    </description>
  </function>

  <function name="llSetColor">
    <param type="vector" name="color"/>
    <param type="integer" name="face"/>
    <description lang="en">
Sets the color on face of the prim
    </description>
  </function>

  <function name="llGetAlpha" type="float">
    <param type="integer" name="face"/>
    <description lang="en">
Returns the alpha of face
    </description>
  </function>

  <function name="llSetAlpha">
    <param type="float" name="alpha"/>
    <param type="integer" name="face"/>
    <description lang="en">
Sets the alpha on face
    </description>
  </function>

  <function name="llGetColor" type="vector">
    <param type="integer" name="face"/>
    <description lang="en">
Returns the color on face
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llSetTexture" delay="0.2">
    <param type="string" name="texture"/>
    <param type="integer" name="face"/>
    <description lang="en">
Sets the texture of face or ALL_SIDES
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llScaleTexture" delay="0.2">
    <param type="float" name="u"/>
    <param type="float" name="v"/>
    <param type="integer" name="face"/>
    <description lang="en">
Sets the texture u &amp; v scales for the chosen face or ALL_SIDES
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llOffsetTexture" delay="0.2">
    <param type="float" name="u"/>
    <param type="float" name="v"/>
    <param type="integer" name="face"/>
    <description lang="en">
Sets the texture u  &amp; v offsets for the chosen face or ALL_SIDES
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llRotateTexture" delay="0.2">
    <param type="float" name="angle"/>
    <param type="integer" name="face"/>
    <description lang="en">
Sets the texture rotation for the chosen face
    </description>
  </function>

  <function name="llGetTexture" type="string">
    <param type="integer" name="face"/>
    <description lang="en">
Returns a string that is the texture on face (the inventory name if it is a texture in the prim's inventory, otherwise the key)
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llSetPos" delay="0.2">
    <param type="vector" name="pos"/>
    <description lang="en">
Moves the object or prim towards pos without using physics (if the script isn't physical)
    </description>
  </function>

  <function name="llGetPos" type="vector">
    <description lang="en">
Returns the position of the task in region coordinates
    </description>
  </function>

  <function name="llGetLocalPos" type="vector">
    <description lang="en">
Returns the position relative to the root
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llSetRot" delay="0.2">
    <param type="rotation" name="rot"/>
    <description lang="en">
Sets the rotation
    </description>
  </function>

  <function name="llGetRot" type="rotation">
    <description lang="en">
Returns the rotation relative to the region's axes
    </description>
  </function>

  <function name="llGetLocalRot" type="rotation">
    <description lang="en">
Returns the rotation local to the root
    </description>
  </function>

  <function name="llSetForce">
    <param type="vector" name="force"/>
    <param type="integer" name="local"/>
    <description lang="en">
Applies force to the object (if the script is physical), in local coords if local == TRUE
    </description>
  </function>

  <function name="llGetForce" type="vector">
    <description lang="en">
Returns the force (if the script is physical)
    </description>
  </function>

  <function name="llTarget" type="integer">
    <param type="vector" name="position"/>
    <param type="float" name="range"/>
    <description lang="en">
Sets positions within range of position as a target and return an ID for the target
    </description>
  </function>

  <function name="llTargetRemove">
    <param type="integer" name="number"/>
    <description lang="en">
Removes positional target number registered with llTarget
    </description>
  </function>

  <function name="llRotTarget" type="integer">
    <param type="rotation" name="rot"/>
    <param type="float" name="error"/>
    <description lang="en">
Set rotations with error of rot as a rotational target and return an ID for the rotational target
    </description>
  </function>

  <function name="llRotTargetRemove">
    <param type="integer" name="number"/>
    <description lang="en">
Removes rotational target number registered with llRotTarget
    </description>
  </function>

  <function name="llMoveToTarget">
    <param type="vector" name="target"/>
    <param type="float" name="tau"/>
    <description lang="en">
Critically damps to target in tau seconds (if the script is physical)
    </description>
  </function>

  <function name="llStopMoveToTarget">
    <description lang="en">
Stops critically damped motion
    </description>
  </function>

  <function name="llApplyImpulse">
    <param type="vector" name="force"/>
    <param type="integer" name="local"/>
    <description lang="en">
Applies impulse to object (if the script is physical), in local coords if local == TRUE
    </description>
  </function>

  <function name="llApplyRotationalImpulse">
    <param type="vector" name="force"/>
    <param type="integer" name="local"/>
    <description lang="en">
Applies rotational impulse to object (if the script is physical), in local coords if local == TRUE
    </description>
  </function>

  <function name="llSetTorque">
    <param type="vector" name="torque"/>
    <param type="integer" name="local"/>
    <description lang="en">
Sets the torque of object (if the script is physical), in local coords if local == TRUE
    </description>
  </function>

  <function name="llGetTorque" type="vector">
    <description lang="en">
Returns the torque (if the script is physical)
    </description>
  </function>

  <function name="llSetForceAndTorque">
    <param type="vector" name="force"/>
    <param type="vector" name="torque"/>
    <param type="integer" name="local"/>
    <description lang="en">
Sets the force and torque of object (if the script is physical), in local coords if local == TRUE
    </description>
  </function>

  <function name="llGetVel" type="vector">
    <description lang="en">
Returns the velocity of the object
    </description>
  </function>

  <function name="llGetAccel" type="vector">
    <description lang="en">
Returns the acceleration of the object relative to the region's axes
    </description>
  </function>

  <function name="llGetOmega" type="vector">
    <description lang="en">
Returns the rotation velocity in radians per second
    </description>
  </function>

  <function name="llGetTimeOfDay" type="float">
    <description lang="en">
Returns the time in seconds since [CURRENT_GRID] server midnight or since region up-time, whichever is smaller
    </description>
  </function>

  <function name="llGetWallclock" type="float">
    <description lang="en">
Returns the time in seconds since midnight California Pacific time (PST/PDT)
    </description>
  </function>

  <function name="llGetTime" type="float">
    <description lang="en">
Returns the time in seconds since the last region reset, script reset, or call to either llResetTime or llGetAndResetTime
    </description>
  </function>

  <function name="llResetTime">
    <description lang="en">
Sets the script timer to zero
    </description>
  </function>

  <function name="llGetAndResetTime" type="float">
    <description lang="en">
Returns the script time in seconds and then resets the script timer to zero
    </description>
  </function>

  <function name="llSound" status="deprecated" version="sl:0.1.0">
    <param type="string" name="sound"/>
    <param type="float" name="volume"/>
    <param type="integer" name="queue"/>
    <param type="integer" name="loop"/>
    <description lang="en">
Plays sound at volume and whether it should loop or not. DEPRECATED - Use llPlaySound / llLoopSound / llSetSoundQueueing.
    </description>
  </function>

  <function name="llPlaySound" version="sl:0.1.0">
    <param type="string" name="sound"/>
    <param type="float" name="volume"/>
    <description lang="en">
Plays attached sound once at volume (0.0 - 1.0)
    </description>
  </function>

  <function name="llLoopSound" version="sl:0.1.0">
    <param type="string" name="sound"/>
    <param type="float" name="volume"/>
    <description lang="en">
Plays attached sound looping indefinitely at volume (0.0 - 1.0)
    </description>
  </function>

  <function name="llLoopSoundMaster">
    <param type="string" name="sound"/>
    <param type="float" name="volume"/>
    <description lang="en">
Plays attached sound looping at volume (0.0 - 1.0), declares it a sync master
    </description>
  </function>

  <function name="llLoopSoundSlave">
    <param type="string" name="sound"/>
    <param type="float" name="volume"/>
    <description lang="en">
Plays attached sound looping at volume (0.0 - 1.0), synced to most audible sync master
    </description>
  </function>

  <function name="llPlaySoundSlave">
    <param type="string" name="sound"/>
    <param type="float" name="volume"/>
    <description lang="en">
Plays attached sound once at volume (0.0 - 1.0), synced to next loop of most audible sync master
    </description>
  </function>

  <function name="llTriggerSound">
    <param type="string" name="sound"/>
    <param type="float" name="volume"/>
    <description lang="en">
Plays sound at volume (0.0 - 1.0), centered at but not attached to object
    </description>
  </function>

  <function name="llStopSound">
    <description lang="en">
Stops currently attached sound
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llPreloadSound" delay="1" version="sl:0.1.0">
    <param type="string" name="sound"/>
    <description lang="en">
Preloads a sound on viewers within range
    </description>
  </function>

  <function name="llGetSubString" type="string">
    <param type="string" name="src"/>
    <param type="integer" name="start"/>
    <param type="integer" name="end"/>
    <description lang="en">
Returns the indicated substring
    </description>
  </function>

  <function name="llDeleteSubString" type="string">
    <param type="string" name="src"/>
    <param type="integer" name="start"/>
    <param type="integer" name="end"/>
    <description lang="en">
Removes the indicated substring and returns the result
    </description>
  </function>

  <function name="llInsertString" type="string">
    <param type="string" name="dst"/>
    <param type="integer" name="position"/>
    <param type="string" name="src"/>
    <description lang="en">
Returns a destination string dst with the string src inserted starting at position pos
    </description>
  </function>

  <function name="llToUpper" type="string">
    <param type="string" name="src"/>
    <description lang="en">
Returns a string that is src with all upper-case characters
    </description>
  </function>

  <function name="llToLower" type="string">
    <param type="string" name="src"/>
    <description lang="en">
Returns a string that is src with all lower-case characters
    </description>
  </function>

  <function name="llGiveMoney" type="integer">
    <param type="key" name="destination"/>
    <param type="integer" name="amount"/>
    <description lang="en">
Transfers amount of L$ from script owner to destination
    </description>
  </function>

  <function name="llMakeExplosion" delay="0.1" status="deprecated" grid="sl os">
    <param type="integer" name="particles"/>
    <param type="float" name="scale"/>
    <param type="float" name="vel"/>
    <param type="float" name="lifetime"/>
    <param type="float" name="arc"/>
    <param type="string" name="texture"/>
    <param type="vector" name="offset"/>
    <description lang="en">
(DEPRECATED) Makes a round explosion of particles
    </description>
  </function>

  <function name="llMakeFountain" delay="0.1" status="deprecated" grid="sl os">
    <param type="integer" name="particles"/>
    <param type="float" name="scale"/>
    <param type="float" name="vel"/>
    <param type="float" name="lifetime"/>
    <param type="float" name="arc"/>
    <param type="integer" name="bounce"/>
    <param type="string" name="texture"/>
    <param type="vector" name="offset"/>
    <param type="float" name="bounce_offset"/>
    <description lang="en">
(DEPRECATED) Makes a fountain of particles
    </description>
  </function>

  <function name="llMakeSmoke" delay="0.1" status="deprecated" grid="sl os">
    <param type="integer" name="particles"/>
    <param type="float" name="scale"/>
    <param type="float" name="vel"/>
    <param type="float" name="lifetime"/>
    <param type="float" name="arc"/>
    <param type="string" name="texture"/>
    <param type="vector" name="offset"/>
    <description lang="en">
(DEPRECATED) Makes smoke like particles
    </description>
  </function>

  <function name="llMakeFire" delay="0.1" status="deprecated" grid="sl os">
    <param type="integer" name="particles"/>
    <param type="float" name="scale"/>
    <param type="float" name="vel"/>
    <param type="float" name="lifetime"/>
    <param type="float" name="arc"/>
    <param type="string" name="texture"/>
    <param type="vector" name="offset"/>
    <description lang="en">
(DEPRECATED) Makes fire like particles
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llRezObject" delay="0.1" energy="200" version="sl:0.1.0">
    <param type="string" name="inventory"/>
    <param type="vector" name="pos"/>
    <param type="vector" name="vel"/>
    <param type="rotation" name="rot"/>
    <param type="integer" name="param"/>
    <description lang="en">
Instantiates owner's inventory object at pos with velocity vel and rotation rot with start parameter param
    </description>
  </function>

  <function name="llLookAt" version="sl:0.1.0">
    <param type="vector" name="target"/>
    <param type="float" name="strength"/>
    <param type="float" name="damping"/>
    <description lang="en">
Causes object to point its up axis (positive z) towards target, while keeping its forward axis (positive x) below the horizon
    </description>
  </function>

  <function name="llLinkLookAt" grid="aa">
    <param type="integer" name="link"/>
    <param type="vector" name="target"/>
    <param type="float" name="strength"/>
    <param type="float" name="damping"/>
    <description lang="en">
Causes a linked prim to point its up axis (positive z) towards target, while keeping its forward axis (positive x) below the horizon
    </description>
  </function>

  <function name="llStopLookAt">
    <description lang="en">
Stops causing object to point at a target
    </description>
  </function>

  <function name="llSetTimerEvent">
    <param type="float" name="sec"/>
    <description lang="en">
Causes the timer event to be triggered a maximum of once every sec seconds
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llSleep" energy="0">
    <param type="float" name="sec"/>
    <description lang="en">
Puts the script to sleep for sec seconds
    </description>
  </function>

  <function name="llGetMass" type="float" version="sl:0.1.0">
    <description lang="en">
Returns the mass of object that the script is attached to
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llCollisionFilter">
    <param type="string" name="name"/>
    <param type="key" name="id"/>
    <param type="integer" name="accept"/>
    <description lang="en">
Sets the collision filter, exclusively or inclusively. If accept == TRUE, only accept collisions with objects name and id (either is optional), otherwise with objects not name or id.
    </description>
  </function>

  <function name="llTakeControls">
    <param type="integer" name="controls"/>
    <param type="integer" name="accept"/>
    <param type="integer" name="pass_on"/>
    <description lang="en">
Allows for intercepting keyboard and mouse clicks from the agent the script has permissions for
    </description>
  </function>

  <function name="llReleaseControls">
    <description lang="en">
Stops taking inputs that were taken with llTakeControls
    </description>
  </function>

  <function name="llAttachToAvatar">
    <param type="integer" name="attach_point"/>
    <description lang="en">
Attaches the object to the avatar who has granted permission to the script
    </description>
  </function>

  <function name="llDetachFromAvatar">
    <description lang="en">
Detaches object from avatar
    </description>
  </function>

  <function name="llTakeCamera" status="unimplemented">
    <param type="key" name="avatar"/>
    <description lang="en">
Moves avatar's viewpoint to task
    </description>
  </function>

  <function name="llReleaseCamera" status="unimplemented">
    <param type="key" name="avatar"/>
    <description lang="en">
Returns camera to agent avatar
    </description>
  </function>

  <function name="llGetOwner" type="key">
    <description lang="en">
Returns the object owner's UUID
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llInstantMessage" delay="2">
    <param type="key" name="user"/>
    <param type="string" name="message"/>
    <description lang="en">
Sends the specified string as an Instant Message to the user
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llEmail" delay="20" version="sl:1.3.0">
    <param type="string" name="address"/>
    <param type="string" name="subject"/>
    <param type="string" name="message"/>
    <description lang="en">
Sends an email to address with the subject and message
    </description>
  </function>

  <function name="llGetNextEmail" version="sl:1.3.0">
    <param type="string" name="address"/>
    <param type="string" name="subject"/>
    <description lang="en">
Gets the next waiting email that comes from address, with specified subject
    </description>
  </function>

  <function name="llGetKey" type="key">
    <description lang="en">
Returns the key of the prim the script is attached to
    </description>
  </function>

  <function name="llSetBuoyancy">
    <param type="float" name="buoyancy"/>
    <description lang="en">
Sets the buoyancy of the task or object (0 is disabled, &lt; 1.0 sinks, 1.0 floats, &gt; 1.0 rises)
    </description>
  </function>

  <function name="llSetHoverHeight">
    <param type="float" name="height"/>
    <param type="integer" name="water"/>
    <param type="float" name="tau"/>
    <description lang="en">
Critically damps to a height above the ground (or water) in tau seconds
    </description>
  </function>

  <function name="llStopHover">
    <description lang="en">
Stops hovering to a height
    </description>
  </function>

  <function name="llMinEventDelay">
    <param type="float" name="delay"/>
    <description lang="en">
Sets the minimum time between events being handled
    </description>
  </function>

  <function name="llSoundPreload" status="deprecated">
    <param type="string" name="sound"/>
    <description lang="en">
Preloads a sound on viewers within range. DEPRECATED - Use llPreloadSound.
    </description>
  </function>

  <function name="llRotLookAt" version="sl:0.1.0">
    <param type="rotation" name="target"/>
    <param type="float" name="strength"/>
    <param type="float" name="damping"/>
    <description lang="en">
Causes object to point its forward axis towards target
    </description>
  </function>

  <function name="llLinkRotLookAt" grid="aa">
    <param type="integer" name="link"/>
    <param type="rotation" name="target"/>
    <param type="float" name="strength"/>
    <param type="float" name="damping"/>
    <description lang="en">
Causes linked prim to point its forward axis towards target
    </description>
  </function>

  <function name="llStringLength" type="integer">
    <param type="string" name="str"/>
    <description lang="en">
Returns the length of string
    </description>
  </function>

  <function name="llStartAnimation">
    <param type="string" name="anim"/>
    <description lang="en">
Starts animation anim for agent that granted PERMISSION_TRIGGER_ANIMATION if the permission has not been revoked
    </description>
  </function>

  <function name="llStopAnimation">
    <param type="string" name="anim"/>
    <description lang="en">
Stops animation anim for agent that granted permission
    </description>
  </function>

  <function name="llPointAt" status="unimplemented">
    <param type="vector" name="pos"/>
    <description lang="en">
Makes agent that owns object point at pos
    </description>
  </function>

  <function name="llStopPointAt" status="unimplemented">
    <description lang="en">
Stops pointing agent that owns object
    </description>
  </function>

  <function name="llTargetOmega" version="sl:0.2.0">
    <param type="vector" name="axis"/>
    <param type="float" name="spinrate"/>
    <param type="float" name="gain"/>
    <description lang="en">
Rotates the object around axis at spinrate with strength gain
    </description>
  </function>

  <function name="llGetStartParameter" type="integer">
    <description lang="en">
Returns an integer that is the script start/rez parameter
    </description>
  </function>

  <function name="llGodLikeRezObject" status="godmode">
    <param type="key" name="inventory"/>
    <param type="vector" name="pos"/>
    <description lang="en">
Rezzes directly off of UUID if owner is in God Mode
    </description>
  </function>

  <function name="llRequestPermissions">
    <param type="key" name="agent"/>
    <param type="integer" name="perm"/>
    <description lang="en">
Asks the agent for permission to run certain classes of functions
    </description>
  </function>

  <function name="llGetPermissionsKey" type="key">
    <description lang="en">
Returns the key of the avatar that last granted permissions to the script
    </description>
  </function>

  <function name="llGetPermissions" type="integer">
    <description lang="en">
Returns an integer bitfield with the permissions that have been granted
    </description>
  </function>

  <function name="llGetLinkNumber" type="integer">
    <description lang="en">
Returns the link number of the prim containing the script (0 means not linked, 1 the prim is the root, 2 the prim is the first child, etc)
    </description>
  </function>

  <function name="llSetLinkColor">
    <param type="integer" name="linknumber"/>
    <param type="vector" name="color"/>
    <param type="integer" name="face"/>
    <description lang="en">
Sets face to color if a task exists in the link chain at linknumber
    </description>
  </function>

  <function name="llCreateLink" delay="1">
    <param type="key" name="target"/>
    <param type="integer" name="parent"/>
    <description lang="en">
Attempts to link the script's object with the target (requires that PERMISSION_CHANGE_LINKS be granted). If parent == TRUE, then the script's object becomes the root.
    </description>
  </function>

  <function name="llBreakLink">
    <param type="integer" name="linknum"/>
    <description lang="en">
Delinks the prim with the given link number in a linked object set (requires that PERMISSION_CHANGE_LINKS be granted)
    </description>
  </function>

  <function name="llBreakAllLinks">
    <description lang="en">
Delinks all prims in the link set (requires that PERMISSION_CHANGE_LINKS be granted)
    </description>
  </function>

  <function name="llGetLinkKey" type="key">
    <param type="integer" name="linknumber"/>
    <description lang="en">
Returns the key of the linked prim linknumber
    </description>
  </function>

  <function name="llGetLinkName" type="string">
    <param type="integer" name="linknumber"/>
    <description lang="en">
Returns the name of linknumber in a link set
    </description>
  </function>

  <function name="llGetInventoryNumber" type="integer">
    <param type="integer" name="type"/>
    <description lang="en">
Returns the number of items of a given type (INVENTORY_* flag) in the prim's inventory
    </description>
  </function>

  <function name="llGetInventoryName" type="string">
    <param type="integer" name="type"/>
    <param type="integer" name="number"/>
    <description lang="en">
Returns the name of the inventory item number of a given type
    </description>
  </function>

  <function name="llSetScriptState">
    <param type="string" name="name"/>
    <param type="integer" name="run"/>
    <description lang="en">
Sets the running state of the specified script
    </description>
  </function>

  <function name="llGetEnergy" type="float">
    <description lang="en">
Returns how much energy is in the object as a percentage of maximum
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llGiveInventory">
    <param type="key" name="destination"/>
    <param type="string" name="inventory"/>
    <description lang="en">
Gives inventory to destination.
Sleeps script for 2 seconds if destination is an avatar.
    </description>
  </function>

  <function name="llRemoveInventory">
    <param type="string" name="item"/>
    <description lang="en">
Removes the named inventory item
    </description>
  </function>

  <function name="llSetText" version="sl:0.1.0">
    <param type="string" name="text"/>
    <param type="vector" name="color"/>
    <param type="float" name="alpha"/>
    <description lang="en">
Displays text that hovers over the prim with specific color and translucency specified with alpha
    </description>
  </function>

  <function name="llWater" type="float">
    <param type="vector" name="offset"/>
    <description lang="en">
Returns the water height below the object position + offset
    </description>
  </function>

  <function name="llPassTouches">
    <param type="integer" name="pass"/>
    <description lang="en">
If pass == TRUE, touches are passed from children on to parents
    </description>
  </function>

  <function name="llRequestAgentData" type="key" delay="0.1">
    <param type="key" name="id"/>
    <param type="integer" name="data"/>
    <description lang="en">
Requests data about agent id. When data is available the dataserver event will be raised.
    </description>
  </function>

  <function name="llRequestInventoryData" type="key" delay="1">
    <param type="string" name="name"/>
    <description lang="en">
Requests data from object's inventory object. When data is available the dataserver event will be raised.
    </description>
  </function>

  <function name="llSetDamage">
    <param type="float" name="damage"/>
    <description lang="en">
Sets the amount of damage that will be done when this object hits an avatar
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llTeleportAgentHome" delay="5" energy="100">
    <param type="key" name="id"/>
    <description lang="en">
Teleports avatar on the owner's land to their home location without any warning
    </description>
  </function>

  <function name="llModifyLand">
    <param type="integer" name="action"/>
    <param type="integer" name="brush"/>
    <description lang="en">
Modifies land using the specified action on the specified brush size of land
    </description>
  </function>

  <function name="llCollisionSound" version="sl:0.2.0">
    <param type="string" name="impact_sound"/>
    <param type="float" name="impact_volume"/>
    <description lang="en">
Suppresses default collision sounds, replaces default impact sounds with impact_sound at the volume impact_volume
    </description>
  </function>

  <function name="llCollisionSprite" status="unimplemented" version="sl:0.2.0">
    <param type="string" name="impact_sprite"/>
    <description lang="en">
Suppresses default collision sprites, replaces default impact sprite with impact_sprite (use an empty string to just suppress)
    </description>
  </function>

  <function name="llGetAnimation" type="string">
    <param type="key" name="id"/>
    <description lang="en">
Returns the name of the currently playing locomotion animation for avatar id
    </description>
  </function>

  <function name="llResetScript">
    <description lang="en">
Resets the script
    </description>
  </function>

  <function name="llMessageLinked">
    <param type="integer" name="linknum"/>
    <param type="integer" name="num"/>
    <param type="string" name="str"/>
    <param type="key" name="id"/>
    <description lang="en">
Allows scripts in the same object to communicate. Triggers a link_message event with the same parameters num, str, and id in all scripts in the prim(s) described by linknum.
    </description>
  </function>

  <function name="llPushObject">
    <param type="key" name="id"/>
    <param type="vector" name="impulse"/>
    <param type="vector" name="ang_impulse"/>
    <param type="integer" name="local"/>
    <description lang="en">
Applies impulse and ang_impulse to object id
    </description>
  </function>

  <function name="llPassCollisions">
    <param type="integer" name="pass"/>
    <description lang="en">
If pass == TRUE, collisions are passed from children on to parents (default is FALSE)
    </description>
  </function>

  <function name="llGetScriptName" type="string">
    <description lang="en">
Returns the name of the script that this function is used in
    </description>
  </function>

  <function name="llGetNumberOfSides" type="integer">
    <description lang="en">
Returns the number of faces (or sides) of the prim
    </description>
  </function>

  <function name="llAxisAngle2Rot" type="rotation">
    <param type="vector" name="axis"/>
    <param type="float" name="angle"/>
    <description lang="en">
Returns the rotation that is a generated angle about axis
    </description>
  </function>

  <function name="llRot2Axis" type="vector">
    <param type="rotation" name="rot"/>
    <description lang="en">
Returns the rotation axis represented by rot
    </description>
  </function>

  <function name="llRot2Angle" type="float">
    <param type="rotation" name="rot"/>
    <description lang="en">
Returns the rotation angle represented by rot
    </description>
  </function>

  <function name="llAcos" type="float">
    <param type="float" name="val"/>
    <description lang="en">
Returns the arccosine in radians of val
    </description>
  </function>

  <function name="llAsin" type="float">
    <param type="float" name="val"/>
    <description lang="en">
Returns the arcsine in radians of val
    </description>
  </function>

  <function name="llAngleBetween" type="float">
    <param type="rotation" name="a"/>
    <param type="rotation" name="b"/>
    <description lang="en">
Returns angle between rotation a and b
    </description>
  </function>

  <function name="llGetInventoryKey" type="key">
    <param type="string" name="name"/>
    <description lang="en">
Returns the key that is the UUID of the inventory name
    </description>
  </function>

  <function name="llAllowInventoryDrop">
    <param type="integer" name="add"/>
    <description lang="en">
If add == TRUE, users without modify permissions can still drop inventory items onto a prim
    </description>
  </function>

  <function name="llGetSunDirection" type="vector">
    <description lang="en">
Returns a normalized vector of the direction of the sun in the region
    </description>
  </function>

  <function name="llGetTextureOffset" type="vector">
    <param type="integer" name="face"/>
    <description lang="en">
Returns the texture offset of face in the x and y components of a vector
    </description>
  </function>

  <function name="llGetTextureScale" type="vector">
    <param type="integer" name="side"/>
    <description lang="en">
Returns the texture scale of side in the x and y components of a vector
    </description>
  </function>

  <function name="llGetTextureRot" type="float">
    <param type="integer" name="side"/>
    <description lang="en">
Returns the texture rotation of side
    </description>
  </function>

  <function name="llSubStringIndex" type="integer">
    <param type="string" name="source"/>
    <param type="string" name="pattern"/>
    <description lang="en">
Returns an integer that is the index in source where pattern first appears.
(Returns -1 if not found.)
    </description>
  </function>

  <function name="llGetOwnerKey" type="key">
    <param type="key" name="id"/>
    <description lang="en">
Returns the owner of object id
    </description>
  </function>

  <function name="llGetCenterOfMass" type="vector">
    <description lang="en">
Returns the prim's center of mass (unless called from the root prim, where it returns the object's center of mass)
    </description>
  </function>

  <function name="llListSort" type="list">
    <param type="list" name="src"/>
    <param type="integer" name="stride"/>
    <param type="integer" name="ascending"/>
    <description lang="en">
Sorts the list into blocks of stride, in ascending order if ascending == TRUE.
The sort order is affected by type.
    </description>
  </function>

  <function name="llGetListLength" type="integer">
    <param type="list" name="src"/>
    <description lang="en">
Returns the number of elements in the list
    </description>
  </function>

  <function name="llList2Integer" type="integer">
    <param type="list" name="src"/>
    <param type="integer" name="index"/>
    <description lang="en">
Copies the integer at index in the list
    </description>
  </function>

  <function name="llList2Float" type="float">
    <param type="list" name="src"/>
    <param type="integer" name="index"/>
    <description lang="en">
Copies the float at index in the list
    </description>
  </function>

  <function name="llList2String" type="string">
    <param type="list" name="src"/>
    <param type="integer" name="index"/>
    <description lang="en">
Copies the string at index in the list
    </description>
  </function>

  <function name="llList2Key" type="key">
    <param type="list" name="src"/>
    <param type="integer" name="index"/>
    <description lang="en">
Copies the key at index in the list
    </description>
  </function>

  <function name="llList2Vector" type="vector">
    <param type="list" name="src"/>
    <param type="integer" name="index"/>
    <description lang="en">
Copies the vector at index in the list
    </description>
  </function>

  <function name="llList2Rot" type="rotation">
    <param type="list" name="src"/>
    <param type="integer" name="index"/>
    <description lang="en">
Copies the rotation at index in the list
    </description>
  </function>

  <function name="llList2List" type="list">
    <param type="list" name="src"/>
    <param type="integer" name="start"/>
    <param type="integer" name="end"/>
    <description lang="en">
Copies the slice of the list from start to end
    </description>
  </function>

  <function name="llDeleteSubList" type="list">
    <param type="list" name="src"/>
    <param type="integer" name="start"/>
    <param type="integer" name="end"/>
    <description lang="en">
Removes the slice from start to end and returns the remainder of the list
    </description>
  </function>

  <function name="llGetListEntryType" type="integer">
    <param type="list" name="src"/>
    <param type="integer" name="index"/>
    <description lang="en">
Returns the type of the index entry in the list
(TYPE_INTEGER, TYPE_FLOAT, TYPE_STRING, TYPE_KEY, TYPE_VECTOR, TYPE_ROTATION, or TYPE_INVALID if index is off list)
    </description>
  </function>

  <function name="llList2CSV" type="string">
    <param type="list" name="src"/>
    <description lang="en">
Creates a string of comma separated values from list
    </description>
  </function>

  <function name="llCSV2List" type="list">
    <param type="string" name="src"/>
    <description lang="en">
Creates a list from a string of comma separated values
    </description>
  </function>

  <function name="llListRandomize" type="list">
    <param type="list" name="src"/>
    <param type="integer" name="stride"/>
    <description lang="en">
Returns a randomized list of blocks of size stride
    </description>
  </function>

  <function name="llList2ListStrided" type="list">
    <param type="list" name="src"/>
    <param type="integer" name="start"/>
    <param type="integer" name="end"/>
    <param type="integer" name="stride"/>
    <description lang="en">
Copies the strided slice of the list from start to end
    </description>
  </function>

  <function name="llGetRegionCorner" type="vector">
    <description lang="en">
Returns a vector in meters that is the global location of the south-west corner of the region which the object is in
    </description>
  </function>

  <function name="llListInsertList" type="list">
    <param type="list" name="dest"/>
    <param type="list" name="src"/>
    <param type="integer" name="start"/>
    <description lang="en">
Returns a list that contains all the elements from dest but with the elements from src inserted at position start
    </description>
  </function>

  <function name="llListFindList" type="integer">
    <param type="list" name="src"/>
    <param type="list" name="test"/>
    <description lang="en">
Returns the index of the first instance of test in src.
(Returns -1 if not found.)
    </description>
  </function>

  <function name="llGetObjectName" type="string">
    <description lang="en">
Returns the name of the prim which the script is attached to
    </description>
  </function>

  <function name="llSetObjectName">
    <param type="string" name="name"/>
    <description lang="en">
Sets the prim's name to the name parameter
    </description>
  </function>

  <function name="llGetDate" type="string">
    <description lang="en">
Returns the current date in the UTC time zone in the format YYYY-MM-DD
    </description>
  </function>

  <function name="llEdgeOfWorld" type="integer" version="sl:0.2.0">
    <param type="vector" name="pos"/>
    <param type="vector" name="dir"/>
    <description lang="en">
Checks to see whether the border hit by dir from pos is the edge of the world (has no neighboring region)
    </description>
  </function>

  <function name="llGetAgentInfo" type="integer" version="sl:0.4.0">
    <param type="key" name="id"/>
    <description lang="en">
Returns an integer bitfield containing the agent information about id.
Returns AGENT_FLYING, AGENT_ATTACHMENTS, AGENT_SCRIPTED, AGENT_SITTING, AGENT_ON_OBJECT, AGENT_MOUSELOOK, AGENT_AWAY, AGENT_BUSY, AGENT_TYPING, AGENT_CROUCHING, AGENT_ALWAYS_RUN, AGENT_WALKING and/or AGENT_IN_AIR.
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llAdjustSoundVolume" delay="0.1"><!-- Version is unclear - mentioned in 0.2 and also in 0.4 -->
    <param type="float" name="volume"/>
    <description lang="en">
Adjusts volume of attached sound (0.0 - 1.0)
    </description>
  </function>

  <function name="llSetSoundQueueing"><!-- Version is unclear - mentioned in 0.2 and also in 0.4 -->
    <param type="integer" name="queue"/>
    <description lang="en">
Sets whether attached sounds wait for the current sound to finish (If queue == TRUE then queuing is enabled, if FALSE queuing is disabled [default])
    </description>
  </function>

  <function name="llSetSoundRadius" version="sl:0.4.0">
    <param type="float" name="radius"/>
    <description lang="en">
Establishes a hard cut-off radius for audibility of scripted sounds (both attached and triggered)
    </description>
  </function>

  <function name="llKey2Name" type="string" version="sl:0.4.0">
    <param type="key" name="id"/>
    <description lang="en">
Returns the name of the prim or avatar specified by id.
(The id must be a valid rezzed prim or avatar key in the current simulator, otherwise an empty string is returned.)
    </description>
  </function>

  <function name="llSetTextureAnim" version="sl:0.4.0">
    <param type="integer" name="mode"/>
    <param type="integer" name="face"/>
    <param type="integer" name="sizex"/>
    <param type="integer" name="sizey"/>
    <param type="float" name="start"/>
    <param type="float" name="length"/>
    <param type="float" name="rate"/>
    <description lang="en">
Animates the texture on the specified face/faces
    </description>
  </function>

  <function name="llTriggerSoundLimited" version="sl:0.4.0">
    <param type="string" name="sound"/>
    <param type="float" name="volume"/>
    <param type="vector" name="top_north_east"/>
    <param type="vector" name="bottom_south_west"/>
    <description lang="en">
Plays sound at volume (0.0 - 1.0), centered at but not attached to object, limited to the box defined by vectors top_north_east and bottom_south_west
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llEjectFromLand" version="sl:0.6.0">
    <param type="key" name="avatar"/>
    <description lang="en">
Ejects avatar from the parcel
    </description>
  </function>

  <function name="llParseString2List" type="list" version="sl:0.6.0">
    <param type="string" name="src"/>
    <param type="list" name="separators"/>
    <param type="list" name="spacers"/>
    <description lang="en">
Breaks src into a list, discarding separators, keeping spacers
(separators and spacers must be lists of strings, maximum of 8 each)
    </description>
  </function>

  <function name="llOverMyLand" type="integer" version="sl:0.6.0">
    <param type="key" name="id"/>
    <description lang="en">
Returns TRUE if id is over land owned by the script owner, otherwise FALSE
    </description>
  </function>

  <function name="llGetLandOwnerAt" type="key" version="sl:0.6.0">
    <param type="vector" name="pos"/>
    <description lang="en">
Returns the key of the land owner, returns NULL_KEY if public
    </description>
  </function>

  <function name="llGetNotecardLine" type="key" delay="0.1" version="sl:0.6.0">
    <param type="string" name="name"/>
    <param type="integer" name="line"/>
    <description lang="en">
Returns line line of notecard name via the dataserver event
    </description>
  </function>

  <function name="llGetAgentSize" type="vector">
    <param type="key" name="id"/>
    <description lang="en">
If the avatar is in the same region, returns the size of the bounding box of the requested avatar by id, otherwise returns ZERO_VECTOR
    </description>
  </function>

  <function name="llSameGroup" type="integer">
    <param type="key" name="id"/>
    <description lang="en">
Returns TRUE if avatar id is in the same region and has the same active group, otherwise FALSE
    </description>
  </function>

  <function name="llUnSit">
    <param type="key" name="id"/>
    <description lang="en">
If avatar identified by id is sitting on the object the script is attached to or is over land owned by the object's owner, the avatar is forced to stand up
    </description>
  </function>

  <function name="llGroundSlope" type="vector" version="sl:0.9.0">
    <param type="vector" name="offset"/>
    <description lang="en">
Returns the ground slope below the object position + offset
    </description>
  </function>

  <function name="llGroundNormal" type="vector" version="sl:0.9.0">
    <param type="vector" name="offset"/>
    <description lang="en">
Returns the ground normal below the object position + offset
    </description>
  </function>

  <function name="llGroundContour" type="vector" version="sl:0.9.0">
    <param type="vector" name="offset"/>
    <description lang="en">
Returns the ground contour direction below the object position + offset
    </description>
  </function>

  <function name="llGetAttached" type="integer" version="sl:1.1.0">
    <description lang="en">
Returns the object's attachment point, or 0 if not attached
    </description>
  </function>

  <function name="llGetFreeMemory" type="integer" version="sl:1.1.0">
    <description lang="en">
Returns the number of free bytes of memory the script can use
    </description>
  </function>

  <function name="llGetRegionName" type="string" version="sl:1.1.0">
    <description lang="en">
Returns the current region name
    </description>
  </function>

  <function name="llGetRegionTimeDilation" type="float" version="sl:1.1.0">
    <description lang="en">
Returns the current time dilation as a float between 0.0 (full dilation) and 1.0 (no dilation)
    </description>
  </function>

  <function name="llGetRegionFPS" type="float" version="sl:1.1.0">
    <description lang="en">
Returns the mean region frames per second
    </description>
  </function>

  <function name="llParticleSystem" version="sl:1.1.0">
    <param type="list" name="rules"/>
    <description lang="en">
Creates a particle system based on rules. An empty list removes the particle system.
List format is [ rule1, data1, rule2, data2 ... rulen, datan ].
    </description>
  </function>

  <function name="llGroundRepel" version="sl:1.1.0"><!-- Version deduced (presumed to be introduced with vehicles) -->
    <param type="float" name="height"/>
    <param type="integer" name="water"/>
    <param type="float" name="tau"/>
    <description lang="en">
Critically damps to height if within height*0.5 of level (either above ground level, or above the higher of land and water if water == TRUE)
    </description>
  </function>

  <function name="llGiveInventoryList" delay="3" version="sl:1.1.0">
    <param type="key" name="target"/>
    <param type="string" name="folder"/>
    <param type="list" name="inventory"/>
    <description lang="en">
Gives inventory items to target, creating a new folder to put them in
    </description>
  </function>

  <function name="llSetVehicleType" version="sl:1.1.0">
    <param type="integer" name="type"/>
    <description lang="en">
Sets the vehicle to one of the default types
    </description>
  </function>

  <function name="llSetVehicleFloatParam" version="sl:1.1.0">
    <param type="integer" name="param"/>
    <param type="float" name="value"/>
    <description lang="en">
Sets the specified vehicle float parameter
    </description>
  </function>

  <function name="llSetVehicleVectorParam" version="sl:1.1.0">
    <param type="integer" name="param"/>
    <param type="vector" name="vec"/>
    <description lang="en">
Sets the specified vehicle vector parameter
    </description>
  </function>

  <function name="llSetVehicleRotationParam" version="sl:1.1.0">
    <param type="integer" name="param"/>
    <param type="rotation" name="rot"/>
    <description lang="en">
Sets the specified vehicle rotation parameter
    </description>
  </function>

  <function name="llSetVehicleFlags" version="sl:1.1.0">
    <param type="integer" name="flags"/>
    <description lang="en">
Sets the enabled bits in 'flags'
    </description>
  </function>

  <function name="llRemoveVehicleFlags" version="sl:1.1.0">
    <param type="integer" name="flags"/>
    <description lang="en">
Removes the enabled bits in 'flags'
    </description>
  </function>

  <function name="llSitTarget">
    <param type="vector" name="offset"/>
    <param type="rotation" name="rot"/>
    <description lang="en">
Sets the sit location for the prim. If offset == &lt;0,0,0&gt; then the sit target is removed.
    </description>
  </function>

  <function name="llAvatarOnSitTarget" type="key">
    <description lang="en">
If an avatar is seated on the sit target, returns the avatar's key, otherwise NULL_KEY
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llAddToLandPassList" delay="0.1">
    <param type="key" name="avatar"/>
    <param type="float" name="hours"/>
    <description lang="en">
Adds avatar to the land pass list for hours, or indefinitely if hours is 0
    </description>
  </function>

  <function name="llSetTouchText">
    <param type="string" name="text"/>
    <description lang="en">
Displays text rather than the default 'Touch' in the pie menu
    </description>
  </function>

  <function name="llSetSitText">
    <param type="string" name="text"/>
    <description lang="en">
Displays text rather than the default 'Sit Here' in the pie menu
    </description>
  </function>

  <function name="llSetCameraEyeOffset">
    <param type="vector" name="offset"/>
    <description lang="en">
Sets the camera eye offset for avatars that sit on the object
    </description>
  </function>

  <function name="llSetCameraAtOffset">
    <param type="vector" name="offset"/>
    <description lang="en">
Sets the point the camera is looking at to offset for avatars that sit on the object
    </description>
  </function>

  <function name="llDumpList2String" type="string" version="sl:1.2.0">
    <param type="list" name="src"/>
    <param type="string" name="separator"/>
    <description lang="en">
Returns the list in a single string, using separator between the entries
    </description>
  </function>

  <function name="llScriptDanger" type="integer" version="sl:1.2.0">
    <param type="vector" name="pos"/>
    <description lang="en">
Returns TRUE if pos is over public land, sandbox land, land that doesn't allow everyone to edit and build, or land that doesn't allow outside scripts
    </description>
  </function>

  <function name="llDialog" delay="1" version="sl:1.2.0">
    <param type="key" name="avatar"/>
    <param type="string" name="message"/>
    <param type="list" name="buttons"/>
    <param type="integer" name="chat_channel"/>
    <description lang="en">
Shows a dialog box on the avatar's screen with a message and up to 12 buttons.
If a button is pressed, the avatar says the text of the button label on chat_channel.
    </description>
  </function>

  <function name="llVolumeDetect" version="sl:1.2.0">
    <param type="integer" name="detect"/>
    <description lang="en">
If detect = TRUE, object works much like Phantom, but triggers collision_start and collision_end events when other objects start and stop interpenetrating.
Must be applied to the root prim.
    </description>
  </function>

  <function name="llResetOtherScript">
    <param type="string" name="name"/>
    <description lang="en">
Resets script name
    </description>
  </function>

  <function name="llGetScriptState" type="integer">
    <param type="string" name="name"/>
    <description lang="en">
Returns TRUE if the script name is running
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llRemoteLoadScript" delay="3" status="unimplemented">
    <param type="key" name="target"/>
    <param type="string" name="name"/>
    <param type="integer" name="running"/>
    <param type="integer" name="start_param"/>
    <description lang="en">
DEPRECATED!  Please use llRemoteLoadScriptPin instead.
    </description>
  </function>

  <function name="llSetRemoteScriptAccessPin" delay="0.2">
    <param type="integer" name="pin"/>
    <description lang="en">
If pin is set to a non-zero number, allows a prim to have scripts remotely loaded via llRemoteLoadScriptPin when it passes in the correct pin. Otherwise, llRemoteLoadScriptPin is ignored.
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llRemoteLoadScriptPin" delay="3">
    <param type="key" name="target"/>
    <param type="string" name="name"/>
    <param type="integer" name="pin"/>
    <param type="integer" name="running"/>
    <param type="integer" name="start_param"/>
    <description lang="en">
Copies script name onto target, if the owner of this scripted object can modify target and is in the same region, and the matching pin is used.
If running == TRUE, starts the script with start_param.
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llOpenRemoteDataChannel" delay="1">
    <description lang="en">
Creates a channel to listen for XML-RPC calls, and will trigger a remote_data event with channel id once it is available
    </description>
  </function>

  <function name="llSendRemoteData" type="key" delay="3">
    <param type="key" name="channel"/>
    <param type="string" name="dest"/>
    <param type="integer" name="idata"/>
    <param type="string" name="sdata"/>
    <description lang="en">
Sends an XML-RPC request to dest through channel with payload of channel (in a string), integer idata and string sdata.
Returns a key that is the message_id for the resulting remote_data events.
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llRemoteDataReply" delay="3">
    <param type="key" name="channel"/>
    <param type="key" name="message_id"/>
    <param type="string" name="sdata"/>
    <param type="integer" name="idata"/>
    <description lang="en">
Sends an XML-RPC reply to message_id on channel with payload of string sdata and integer idata
    </description>
  </function>

  <!-- In AuroraSim, this function requires an object type param and returns DateTime.
       We're not adding the Aurora specifics here.
  -->
  <function name="llCloseRemoteDataChannel" delay="1">
    <param type="key" name="channel"/>
    <description lang="en">
Closes XML-RPC channel
    </description>
  </function>

  <function name="llMD5String" type="string" version="sl:1.3.0">
    <param type="string" name="src"/>
    <param type="integer" name="nonce"/>
    <description lang="en">
Returns a string of 32 hex characters that is a RSA Data Security, Inc. MD5 Message-Digest Algorithm of src with nonce
    </description>
  </function>

  <function name="llSetPrimitiveParams" delay="0.2" version="sl:1.3.0">
    <param type="list" name="rules"/>
    <description lang="en">
Sets the prim's parameters according to rules
    </description>
  </function>

  <function name="llStringToBase64" type="string" version="sl:1.3.0">
    <param type="string" name="str"/>
    <description lang="en">
Converts a string to the Base64 representation of the string
    </description>
  </function>

  <function name="llBase64ToString" type="string" version="sl:1.3.0">
    <param type="string" name="str"/>
    <description lang="en">
Converts a Base64 string to a conventional string.
If the conversion creates any unprintable characters, they are converted to spaces.
    </description>
  </function>

  <function name="llXorBase64Strings" type="string" delay="0.3" status="deprecated" version="sl:1.3.0">
    <param type="string" name="str1"/>
    <param type="string" name="str2"/>
    <description lang="en">
DEPRECATED!  Please use llXorBase64 instead.
Incorrectly performs an exclusive or on two Base64 strings and returns a Base64 string. str2 repeats if it is shorter than str1. Retained for backwards compatability.
    </description>
  </function>

  <function name="llRemoteDataSetRegion" status="deprecated">
    <description lang="en">
DEPRECATED!  Please use llOpenRemoteDataChannel instead.
If an object using remote data channels changes regions, you must call this function to reregister the remote data channels. This call is not needed if the prim does not change regions.
    </description>
  </function>

  <function name="llLog10" type="float">
    <param type="float" name="val"/>
    <description lang="en">
Returns the base 10 logarithm of val. Returns zero if val &lt;= 0.
    </description>
  </function>

  <function name="llLog" type="float">
    <param type="float" name="val"/>
    <description lang="en">
Returns the natural logarithm of val. Returns zero if val &lt;= 0.
    </description>
  </function>

  <function name="llGetAnimationList" type="list" version="sl:1.4.0">
    <param type="key" name="id"/>
    <description lang="en">
Returns a list of keys of playing animations for avatar described by id
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llSetParcelMusicURL" delay="2">
    <param type="string" name="url"/>
    <description lang="en">
Sets the streaming audio URL for the parcel which the object is on
    </description>
  </function>

  <function name="llGetRootPosition" type="vector" version="sl:1.5.0">
    <description lang="en">
Returns the position (in region coordinates) of the root prim of the object which the script is attached to
    </description>
  </function>

  <function name="llGetRootRotation" type="rotation" version="sl:1.5.0">
    <description lang="en">
Returns the rotation (relative to the region) of the root prim of the object which the script is attached to
    </description>
  </function>

  <function name="llGetObjectDesc" type="string" version="sl:1.5.0">
    <description lang="en">
Returns the description of the prim the script is attached to
    </description>
  </function>

  <function name="llSetObjectDesc" version="sl:1.5.0">
    <param type="string" name="desc"/>
    <description lang="en">
Sets the prim's description to desc
    </description>
  </function>

  <function name="llGetCreator" type="key" version="sl:1.5.0">
    <description lang="en">
Returns a key for the creator of the prim
    </description>
  </function>

  <function name="llGetTimestamp" type="string" version="sl:1.5.0">
    <description lang="en">
Returns the timestamp in the UTC time zone in the format: YYYY-MM-DDThh:mm:ss.ff..fZ
    </description>
  </function>

  <function name="llSetLinkAlpha" version="sl:1.5.0">
    <param type="integer" name="linknumber"/>
    <param type="float" name="alpha"/>
    <param type="integer" name="face"/>
    <description lang="en">
If a prim exists in the link chain at linknumber, sets face to alpha
    </description>
  </function>

  <function name="llGetNumberOfPrims" type="integer" version="sl:1.5.0">
    <description lang="en">
Returns the number of prims in a link set the script is attached to
    </description>
  </function>

  <function name="llGetNumberOfNotecardLines" type="key" delay="0.1" version="sl:1.5.0">
    <param type="string" name="name"/>
    <description lang="en">
Returns number of lines in notecard name via the dataserver event (cast return value to integer)
    </description>
  </function>

  <function name="llGetBoundingBox" type="list">
    <param type="key" name="object"/>
    <description lang="en">
Returns the bounding box around the object (including any linked prims) relative to its root prim, in a list in the format [ (vector) min_corner, (vector) max_corner ]
    </description>
  </function>

  <function name="llGetGeometricCenter" type="vector">
    <description lang="en">
Returns the geometric center of the linked set the script is attached to
    </description>
  </function>

  <function name="llGetPrimitiveParams" type="list" delay="0.2" version="sl:1.5.0">
    <param type="list" name="params"/>
    <description lang="en">
Returns the primitive parameters specified in the params list
    </description>
  </function>

  <function name="llIntegerToBase64" type="string" delay="0.0" version="sl:1.5.0">
    <param type="integer" name="number"/>
    <description lang="en">
Returns a string that is a Base64 big endian encode of number
    </description>
  </function>

  <function name="llBase64ToInteger" type="integer" delay="0.0" version="sl:1.5.0">
    <param type="string" name="str"/>
    <description lang="en">
Returns an integer that is the str Base64 decoded as a big endian integer
    </description>
  </function>

  <function name="llGetGMTclock" type="float" version="sl:1.5.0">
    <description lang="en">
Returns the time in seconds since midnight GMT
    </description>
  </function>

  <function name="llGetSimulatorHostname" type="string" delay="10">
    <description lang="en">
Returns the hostname of the machine which the script is running on (same as string in viewer Help dialog)
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llSetLocalRot" delay="0.2">
    <param type="rotation" name="rot"/>
    <description lang="en">
Sets the rotation of a child prim relative to the root prim
    </description>
  </function>

  <function name="llParseStringKeepNulls" type="list">
    <param type="string" name="src"/>
    <param type="list" name="separators"/>
    <param type="list" name="spacers"/>
    <description lang="en">
Breaks src into a list, discarding separators, keeping spacers, keeping any null values generated (separators and spacers must be lists of strings, maximum of 8 each)
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llRezAtRoot" delay="0.1" energy="200">
    <param type="string" name="inventory"/>
    <param type="vector" name="pos"/>
    <param type="vector" name="vel"/>
    <param type="rotation" name="rot"/>
    <param type="integer" name="param"/>
    <description lang="en">
Instantiates owner's inventory object rotated to rot with its root at pos, moving at vel, using param as the start parameter
    </description>
  </function>

  <function name="llGetObjectPermMask" type="integer">
    <param type="integer" name="mask"/>
    <description lang="en">
Returns the requested permission mask for the root object the task is attached to
    </description>
  </function>

  <function name="llSetObjectPermMask" status="godmode">
    <param type="integer" name="mask"/>
    <param type="integer" name="value"/>
    <description lang="en">
Sets the given permission mask to the new value on the root object the task is attached to (requires God Mode)
    </description>
  </function>

  <function name="llGetInventoryPermMask" type="integer">
    <param type="string" name="item"/>
    <param type="integer" name="mask"/>
    <description lang="en">
Returns the requested permission mask for the inventory item
    </description>
  </function>

  <function name="llSetInventoryPermMask" status="godmode">
    <param type="string" name="item"/>
    <param type="integer" name="mask"/>
    <param type="integer" name="value"/>
    <description lang="en">
Sets the given permission mask to the new value on the inventory item (requires God Mode)
    </description>
  </function>

  <function name="llGetInventoryCreator" type="key">
    <param type="string" name="item"/>
    <description lang="en">
Returns a key for the creator of the inventory item
    </description>
  </function>

  <function name="llOwnerSay">
    <param type="string" name="msg"/>
    <description lang="en">
Says msg to owner only. (Owner must be in the same region.)
    </description>
  </function>

  <function name="llRequestSimulatorData" type="key" delay="1" version="sl:1.6.0">
    <param type="string" name="simulator"/>
    <param type="integer" name="data"/>
    <description lang="en">
Requests data about simulator. When data is available the dataserver event will be raised.
    </description>
  </function>

  <function name="llForceMouselook" version="sl:1.6.0">
    <param type="integer" name="mouselook"/>
    <description lang="en">
If mouselook is TRUE, any avatar that sits upon the prim will be forced into mouselook mode
    </description>
  </function>

  <function name="llGetObjectMass" type="float" version="sl:1.6.0">
    <param type="key" name="id"/>
    <description lang="en">
Returns the mass of the avatar or object in the region
    </description>
  </function>

  <function name="llListReplaceList" type="list" version="sl:1.6.0">
    <param type="list" name="dest"/>
    <param type="list" name="src"/>
    <param type="integer" name="start"/>
    <param type="integer" name="end"/>
    <description lang="en">
Returns a list that is dest with start through end removed and src inserted at start
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llLoadURL" delay="0.1" version="sl:1.6.0">
    <param type="key" name="avatar"/>
    <param type="string" name="message"/>
    <param type="string" name="url"/>
    <description lang="en">
Shows a dialog to avatar offering to load the web page at url with a message.
If user clicks yes, launches the page in their web browser.
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llParcelMediaCommandList" delay="2">
    <param type="list" name="command"/>
    <description lang="en">
Sends a list of commands, some with arguments, to a parcel to control the playback of movies and other media
    </description>
  </function>

  <function name="llParcelMediaQuery" type="list" delay="2">
    <param type="list" name="query"/>
    <description lang="en">
Returns a list containing results of the sent query
    </description>
  </function>

  <function name="llModPow" type="integer" delay="1">
    <param type="integer" name="a"/>
    <param type="integer" name="b"/>
    <param type="integer" name="c"/>
    <description lang="en">
Returns a raised to the b power, mod c. ( (a**b)%c )
b is capped at 0xFFFF (16 bits).
    </description>
  </function>

  <function name="llGetInventoryType" type="integer" version="sl:1.7.0">
    <param type="string" name="name"/>
    <description lang="en">
Returns the type of the inventory item name
    </description>
  </function>

  <function name="llSetPayPrice" version="sl:1.7.0">
    <param type="integer" name="price"/>
    <param type="list" name="quick_pay_buttons"/>
    <description lang="en">
Sets the default amount on the dialog that appears when someone chooses to pay this prim
    </description>
  </function>

  <function name="llGetCameraPos" type="vector">
    <description lang="en">
Returns the current camera position for the agent the task has permissions for
    </description>
  </function>

  <function name="llGetCameraRot" type="rotation">
    <description lang="en">
Returns the current camera orientation for the agent the task has permissions for
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llSetPrimURL" delay="20" status="unimplemented">
    <param type="string" name="url"/>
    <description lang="en">
Updates the URL for the web page shown on the sides of the object
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llRefreshPrimURL" delay="20" status="unimplemented">
    <description lang="en">
Reloads the web page shown on the sides of the object
    </description>
  </function>

  <function name="llEscapeURL" type="string" version="sl:1.7.0">
    <param type="string" name="url"/>
    <description lang="en">
Returns an escaped/encoded version of url, replacing spaces with %20 etc.
    </description>
  </function>

  <function name="llUnescapeURL" type="string" version="sl:1.7.0">
    <param type="string" name="url"/>
    <description lang="en">
Returns an unescaped/ unencoded version of url, replacing %20 with spaces etc.
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llMapDestination" delay="1" version="sl:1.8.0">
    <param type="string" name="simname"/>
    <param type="vector" name="pos"/>
    <param type="vector" name="look_at"/>
    <description lang="en">
Opens the World Map centered on the region simname with pos highlighted. (NOTE: look_at currently does nothing.)
Only works for scripts attached to avatar, or during touch events.
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llAddToLandBanList" delay="0.1" version="sl:1.8.0">
    <param type="key" name="avatar"/>
    <param type="float" name="hours"/>
    <description lang="en">
Adds avatar to the land ban list for hours, or indefinitely if hours is 0
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llRemoveFromLandPassList" delay="0.1" version="sl:1.8.0">
    <param type="key" name="avatar"/>
    <description lang="en">
Removes avatar from the land pass list
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llRemoveFromLandBanList" delay="0.1" version="sl:1.8.0">
    <param type="key" name="avatar"/>
    <description lang="en">
Removes avatar from the land ban list
    </description>
  </function>

  <function name="llSetCameraParams" version="sl:1.9.0(15)">
    <param type="list" name="rules"/>
    <description lang="en">
Sets multiple camera parameters at once.
List format is [ rule1, data1, rule2, data2 ... rulen, datan ].
    </description>
  </function>

  <function name="llClearCameraParams" version="sl:1.9.0(15)">
    <description lang="en">
Resets all camera parameters to default values and turns off scripted camera control
    </description>
  </function>

  <function name="llListStatistics" type="float" version="sl:1.9.0(15)">
    <param type="integer" name="operation"/>
    <param type="list" name="src"/>
    <description lang="en">
Performs statistical aggregate functions on list src using LIST_STAT_* operations
    </description>
  </function>

  <function name="llGetUnixTime" type="integer" version="sl:1.9.0(15)">
    <description lang="en">
Returns the number of seconds elapsed since 00:00 hours, Jan 1, 1970 UTC from the system clock
    </description>
  </function>

  <function name="llGetParcelFlags" type="integer" version="sl:1.9.1(9)">
    <param type="vector" name="pos"/>
    <description lang="en">
Returns a mask of the parcel flags (PARCEL_FLAG_*) for the parcel that includes the point pos
    </description>
  </function>

  <function name="llGetRegionFlags" type="integer" version="sl:1.9.0(15)">
    <description lang="en">
Returns the region flags (REGION_FLAG_*) for the region the object is in
    </description>
  </function>

  <function name="llXorBase64StringsCorrect" type="string" status="deprecated" version="sl:1.9.0(21)">
    <param type="string" name="str1"/>
    <param type="string" name="str2"/>
    <description lang="en">
DEPRECATED! Please use llXorBase64 instead.
Incorrectly performs an exclusive or on two Base64 strings and returns a Base64 string.
str2 repeats if it is shorter than str1. Retained for backwards compatability.
    </description>
  </function>

  <function name="llHTTPRequest" type="key" version="sl:1.9.1(9)">
    <param type="string" name="url"/>
    <param type="list" name="parameters"/>
    <param type="string" name="body"/>
    <description lang="en">
Sends an HTTP request to the specified url with the body of the request and parameters
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llResetLandBanList" delay="0.1">
    <description lang="en">
Removes all Residents from the land ban list
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llResetLandPassList" delay="0.1">
    <description lang="en">
Removes all Residents from the land access/pass list
    </description>
  </function>

  <function name="llGetObjectPrimCount" type="integer" version="sl:1.13.0(8)">
    <param type="key" name="object_id"/>
    <description lang="en">
Returns the total number of prims for an object in the region
    </description>
  </function>

  <function name="llGetParcelPrimOwners" type="list" delay="2.0" version="sl:1.13.0(8)">
    <param type="vector" name="pos"/>
    <description lang="en">
Returns a list of all Residents who own objects on the parcel at pos and with individual prim counts.
Requires owner-like permissions for the parcel.
    </description>
  </function>

  <function name="llGetParcelPrimCount" type="integer" version="sl:1.13.0(8)">
    <param type="vector" name="pos"/>
    <param type="integer" name="category"/>
    <param type="integer" name="sim_wide"/>
    <description lang="en">
Returns the number of prims on the parcel at pos of the given category.
Categories: PARCEL_COUNT_TOTAL, _OWNER, _GROUP, _OTHER, _SELECTED, _TEMP.
    </description>
  </function>

  <function name="llGetParcelMaxPrims" type="integer" version="sl:1.13.0(8)">
    <param type="vector" name="pos"/>
    <param type="integer" name="sim_wide"/>
    <description lang="en">
Returns the maximum number of prims allowed on the parcel at pos
    </description>
  </function>

  <function name="llGetParcelDetails" type="list" version="sl:1.13.0(8)">
    <param type="vector" name="pos"/>
    <param type="list" name="params"/>
    <description lang="en">
Returns the parcel details specified in params for the parcel at pos.
Params is one or more of: PARCEL_DETAILS_NAME, _DESC, _OWNER, _GROUP, _AREA, _ID, _SEE_AVATARS.
    </description>
  </function>

  <function name="llSetLinkPrimitiveParams" delay="0.2" version="sl:1.13.4(1)">
    <param type="integer" name="linknumber"/>
    <param type="list" name="rules"/>
    <description lang="en">
Sets primitive parameters for linknumber based on rules
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llSetLinkTexture" delay="0.2" version="sl:1.13.4(1)">
    <param type="integer" name="linknumber"/>
    <param type="string" name="texture"/>
    <param type="integer" name="face"/>
    <description lang="en">
Sets the texture of face for a task that exists in the link chain at linknumber
    </description>
  </function>

  <function name="llStringTrim" type="string" version="sl:1.15.0(2)">
    <param type="string" name="src"/>
    <param type="integer" name="trim_type"/>
    <description lang="en">
Trims the leading and/or trailing white spaces from a string.
trim_type can be STRING_TRIM, STRING_TRIM_HEAD or STRING_TRIM_TAIL.
    </description>
  </function>

  <function name="llRegionSay" version="sl:1.16.0(1)">
    <param type="integer" name="channel"/>
    <param type="string" name="msg"/>
    <description lang="en">
Broadcasts msg on channel (not 0) that can be heard anywhere in the region by a script listening on channel
    </description>
  </function>

  <function name="llGetObjectDetails" type="list" version="sl:1.18.3(5)">
    <param type="key" name="id"/>
    <param type="list" name="params"/>
    <description lang="en">
Returns the object details specified in params for the object with key id.
Params are OBJECT_NAME, _DESC, _POS, _ROT, _VELOCITY, _OWNER, _GROUP, _CREATOR.
    </description>
  </function>

  <function name="llSetClickAction">
    <param type="integer" name="action"/>
    <description lang="en">
Sets the action performed when a prim is clicked upon
    </description>
  </function>

  <function name="llGetRegionAgentCount" type="integer">
    <description lang="en">
Returns the number of avatars in the region
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="llTextBox" delay="1">
    <param type="key" name="avatar"/>
    <param type="string" name="message"/>
    <param type="integer" name="chat_channel"/>
    <description lang="en">
Shows a window on the avatar's screen with the message.
It contains a text box for input, and if entered that text is chatted on chat_channel.
    </description>
  </function>

  <function name="llGetAgentLanguage" type="string">
    <param type="key" name="avatar"/>
    <description lang="en">
Returns the language code of the preferred interface language of the avatar
    </description>
  </function>

  <function name="llDetectedTouchUV" type="vector">
    <param type="integer" name="index"/>
    <description lang="en">
Returns the u and v coordinates in the first two components of a vector, for the texture coordinates where the prim was touched in a triggered touch event
    </description>
  </function>

  <function name="llDetectedTouchFace" type="integer">
    <param type="integer" name="index"/>
    <description lang="en">
Returns the index of the face where the avatar clicked in a triggered touch event
    </description>
  </function>

  <function name="llDetectedTouchPos" type="vector">
    <param type="integer" name="index"/>
    <description lang="en">
Returns the position where the object was touched in a triggered touch event
    </description>
  </function>

  <function name="llDetectedTouchNormal" type="vector">
    <param type="integer" name="index"/>
    <description lang="en">
Returns the surface normal for a triggered touch event
    </description>
  </function>

  <function name="llDetectedTouchBinormal" type="vector">
    <param type="integer" name="index"/>
    <description lang="en">
Returns the surface binormal for a triggered touch event
    </description>
  </function>

  <function name="llDetectedTouchST" type="vector">
    <param type="integer" name="index"/>
    <description lang="en">
Returns the s and t coordinates in the first two components of a vector, for the surface coordinates where the prim was touched in a triggered touch event
    </description>
  </function>

  <function name="llSHA1String" type="string">
    <param type="string" name="src"/>
    <description lang="en">
Returns a string of 40 hex characters that is the SHA1 security Hash of src
    </description>
  </function>

  <function name="llGetFreeURLs" type="integer">
    <description lang="en">
Returns the number of available URLs for the current script
    </description>
  </function>

  <function name="llRequestURL" type="key">
    <description lang="en">
Requests one HTTP:// url for use by this object.
An http_request event is triggered with the results.
    </description>
  </function>

  <function name="llRequestSecureURL" type="key">
    <description lang="en">
Requests one HTTPS:// (SSL) url for use by this object.
An http_request event is triggered with the results.
    </description>
  </function>

  <function name="llReleaseURL">
    <param type="string" name="url"/>
    <description lang="en">
Releases the specified URL, it will no longer be usable
    </description>
  </function>

  <function name="llHTTPResponse">
    <param type="key" name="request_id"/>
    <param type="integer" name="status"/>
    <param type="string" name="body"/>
    <description lang="en">
Responds to request_id with status and body
    </description>
  </function>

  <function name="llGetHTTPHeader" type="string">
    <param type="key" name="request_id"/>
    <param type="string" name="header"/>
    <description lang="en">
Returns the value for header for request_id
    </description>
  </function>

  <function name="llSetPrimMediaParams" type="integer" delay="1.0">
    <param type="integer" name="face"/>
    <param type="list" name="params"/>
    <description lang="en">
Sets the media params for a particular face on an object. If media is not already on this object, add it.
List is a set of name/value pairs in no particular order. Params not specified are unchanged, or if new media is added then set to the default specified.
    </description>
  </function>

  <function name="llGetPrimMediaParams" type="list" delay="1.0">
    <param type="integer" name="face"/>
    <param type="list" name="params"/>
    <description lang="en">
Returns the media params for a particular face on an object, given the desired list of names, in the order requested.
(Returns an empty list if no media exists on the face.)
    </description>
  </function>

  <function name="llClearPrimMedia" type="integer" delay="1.0">
    <param type="integer" name="face"/>
    <description lang="en">
Clears (deletes) the media and all params from the given face
    </description>
  </function>

  <function name="llSetLinkPrimitiveParamsFast">
    <param type="integer" name="linknumber"/>
    <param type="list" name="rules"/>
    <description lang="en">
Set primitive parameters for linknumber based on rules
    </description>
  </function>

  <function name="llGetLinkPrimitiveParams" type="list">
    <param type="integer" name="linknumber"/>
    <param type="list" name="rules"/>
    <description lang="en">
Get primitive parameters for linknumber based on rules
    </description>
  </function>

  <function name="llLinkParticleSystem">
    <param type="integer" name="linknumber"/>
    <param type="list" name="rules"/>
    <description lang="en">
Creates a particle system based on rules. Empty list removes particle system from object.
List format is [ rule1, data1, rule2, data2 ... rulen, datan ].
    </description>
  </function>

  <function name="llSetLinkTextureAnim" grid="sl os">
    <param type="integer" name="link"/>
    <param type="integer" name="mode"/>
    <param type="integer" name="face"/>
    <param type="integer" name="sizex"/>
    <param type="integer" name="sizey"/>
    <param type="float" name="start"/>
    <param type="float" name="length"/>
    <param type="float" name="rate"/>
    <description lang="en">
Animate the texture on the specified prim's face/faces
    </description>
  </function>

  <function name="llGetLinkNumberOfSides" type="integer">
    <param type="integer" name="link"/>
    <description lang="en">
Returns the number of sides of the specified linked prim
    </description>
  </function>

  <function name="llGetUsername" type="string">
    <param type="key" name="id"/>
    <description lang="en">
Returns the single-word username of an avatar, iff the avatar is in the current region, otherwise the empty string
    </description>
  </function>

  <function name="llRequestUsername" type="key">
    <param type="key" name="id"/>
    <description lang="en">
Requests single-word username of an avatar. When data is available the dataserver event will be raised.
    </description>
  </function>

  <function name="llGetDisplayName" type="string">
    <param type="key" name="id"/>
    <description lang="en">
Returns the name of an avatar, iff the avatar is in the current simulator, and the name has been cached, otherwise the same as llGetUsername. Use llRequestDisplayName if you absolutely must have the display name.
    </description>
  </function>

  <function name="llRequestDisplayName" type="key">
    <param type="key" name="id"/>
    <description lang="en">
Requests name of an avatar. When data is available the dataserver event will be raised.
    </description>
  </function>

  <function name="llGetEnv" type="string" grid="sl aa">
    <param type="string" name="name"/>
    <description lang="en">
Returns a string with the requested data about the region
    </description>
  </function>

  <function name="llRegionSayTo">
    <param type="key" name="target"/>
    <param type="integer" name="channel"/>
    <param type="string" name="msg"/>
    <description lang="en">
Sends msg on channel (not DEBUG_CHANNEL) directly to prim or avatar target anywhere within the region
    </description>
  </function>

  <function name="llSetMemoryLimit" type="integer">
    <param type="integer" name="limit"/>
    <description lang="en">
Request limit bytes to be reserved for this script.
Returns a success/failure flag (STATUS_OK when sucessful, another of the STATUS_* flags on failure) for whether the memory limit was set.
Only relevant for Mono-compiled scripts.
    </description>
  </function>

  <function name="llGetMemoryLimit" type="integer">
    <description lang="en">
Get the maximum memory a script can use.
Returns the integer amount of memory the script can use in bytes.
    </description>
  </function>

  <function name="llSetLinkMedia" type="integer">
    <param type="integer" name="link"/>
    <param type="integer" name="face"/>
    <param type="list" name="params"/>
    <description lang="en">
Set the media params for a particular face on linked prim. List is a set of name/value pairs (in no particular order). If media is not already on this object, add it. Params not specified are unchanged, or if new media is added set to the default specified.
    </description>
  </function>

  <function name="llGetLinkMedia" type="list">
    <param type="integer" name="link"/>
    <param type="integer" name="face"/>
    <param type="list" name="params"/>
    <description lang="en">
Get the media params for a particular face on linked prim, given the desired list of names. Returns a list of values in the order requested. Returns an empty list if no media exists on the face.
    </description>
  </function>

  <function name="llClearLinkMedia" type="integer">
    <param type="integer" name="link"/>
    <param type="integer" name="face"/>
    <description lang="en">
Clears (deletes) the media and all params from the given face on linked prim
    </description>
  </function>

  <function name="llSetLinkCamera">
    <param type="integer" name="link"/>
    <param type="vector" name="eye"/>
    <param type="vector" name="at"/>
    <description lang="en">
Sets the camera eye offset, and the offset that camera is looking at, for avatars that sit on the linked prim.
The two vector parameters are offsets relative to the object's center and expressed in local coordinates.
    </description>
  </function>

  <function name="llSetContentType">
    <param type="key" name="request_id"/>
    <param type="integer" name="content_type"/>
    <description lang="en">
Set the Internet media type of an LSL HTTP server response.
content_type may be one of CONTENT_TYPE_TEXT (default) "text/plain", or CONTENT_TYPE_HTML "text/html", only valid for embedded browsers on content owned by the person viewing. Falls back to "text/plain" otherwise.
    </description>
  </function>

  <function name="llLinkSitTarget">
    <param type="integer" name="link"/>
    <param type="vector" name="offset"/>
    <param type="rotation" name="rot"/>
    <description lang="en">
Set the sit location for this object (if offset == &lt;0,0,0&gt; clear it)
    </description>
  </function>

  <function name="llAvatarOnLinkSitTarget" type="key" grid="sl os">
    <param type="integer" name="link"/>
    <description lang="en">
If an avatar is sitting on the sit target, return the avatar's key, NULL_KEY otherwise
    </description>
  </function>

  <!-- The Aurora variation doesn't have a parameter (??) -->
  <function name="llAvatarOnLinkSitTarget" type="key" grid="aa">
    <description lang="en">
If an avatar is sitting on the sit target, return the avatar's key, NULL_KEY otherwise
    </description>
  </function>

  <function name="llSetVelocity" grid="sl aa">
    <param type="vector" name="velocity"/>
    <param type="integer" name="local"/>
    <description lang="en">
Sets an objects velocity, in local coords if local == TRUE (if the script is physical)
    </description>
  </function>

  <function name="llCastRay" type="list">
    <param type="vector" name="start"/>
    <param type="vector" name="end"/>
    <param type="list" name="params"/>
    <description lang="en">
Casts a ray into the physics world from 'start' to 'end' and returns data according to details in params
    </description>
  </function>

  <function name="llGetMassMKS" type="float" grid="sl aa">
    <description lang="en">
Returns the mass of the linkset in kilograms
    </description>
  </function>

  <function name="llSetPhysicsMaterial" grid="sl">
    <param type="integer" name="flags"/>
    <param type="float" name="gravity_multiplier"/>
    <param type="float" name="restitution"/>
    <param type="float" name="friction"/>
    <param type="float" name="density"/>
    <description lang="en">
Sets the requested attributes of the root object's physics material
    </description>
  </function>

  <function name="llGetPhysicsMaterial" type="list" grid="sl">
    <description lang="en">
Returns the gravity multiplier, restitution, friction, and density of the linkset as a list in that order
    </description>
  </function>

  <function name="llManageEstateAccess" type="integer">
    <param type="integer" name="action"/>
    <param type="key" name="id"/>
    <description lang="en">
To add or remove agents from the estate's agent access or ban lists or groups from the estate's group access list.
Only works for objects owned by the Estate Owner or an Estate Manager.
Returns TRUE if successful and FALSE if throttled, on invalid action, on invalid or null id, or if object owner is not allowed to manage the estate.
'action' can be any of: ESTATE_ACCESS_ALLOWED_[AGENT/GROUP]_[ADD/REMOVE] or ESTATE_ACCESS_BANNED_AGENT_[ADD/REMOVE].
    </description>
  </function>

  <function name="llSetKeyframedMotion" grid="sl aa">
    <param type="list" name="keyframes"/>
    <param type="list" name="options"/>
    <description lang="en">
Requests that a nonphysical object be keyframed according to keyframe list
    </description>
  </function>

  <function name="llTransferLindenDollars" type="key" grid="sl aa">
    <param type="key" name="destination"/>
    <param type="integer" name="amount"/>
    <description lang="en">
Transfer amount of linden dollars (L$) from script owner to destination. Returns a key to a corresponding transaction_result event for the success of the transfer.
    </description>
  </function>

  <function name="llGetParcelMusicURL" type="string">
    <description lang="en">
Gets the streaming audio URL for the parcel of land on which the object is located
    </description>
  </function>

  <function name="llScriptProfiler">
    <param type="integer" name="flags"/>
    <description lang="en">
Enabled or disables script profiling options. Currently only supports PROFILE_SCRIPT_MEMORY (mono only) and PROFILE_NONE.
MAY SIGNIFICANTLY REDUCE SCRIPT PERFORMANCE!
    </description>
  </function>

  <function name="llGetSPMaxMemory" type="integer">
    <description lang="en">
Returns the maximum used memory for the current script. Only valid after using PROFILE_SCRIPT_MEMORY. Non-mono scripts always use 16k.
    </description>
  </function>

  <function name="llGetUsedMemory" type="integer">
    <description lang="en">
Returns the current used memory for the current script. Non-mono scripts always use 16k.
    </description>
  </function>

  <function name="llSetAngularVelocity" grid="sl aa">
    <param type="vector" name="angular_velocity"/>
    <param type="integer" name="local"/>
    <description lang="en">
Sets an objects angular velocity, in local coords if local == TRUE (if the script is physical)
    </description>
  </function>

  <function name="llSetRegionPos" type="integer" energy="0">
    <param type="vector" name="pos"/>
    <description lang="en">
Sets the position anywhere within the region (if the object isn't physical)
    </description>
  </function>

  <function name="llGetAgentList" type="list" energy="0">
    <param type="integer" name="scope"/>
    <param type="list" name="options"/>
    <description lang="en">
Requests a list of agents currently in the region, limited by the scope parameter
    </description>
  </function>

  <function name="llAttachToAvatarTemp" energy="0" grid="sl aa">
    <param type="integer" name="attach_point"/>
    <description lang="en">
Attaches the object to the avatar who has granted permission to the script, with the exception that the object will not create new inventory for the user, and will disappear on detach or disconnect
    </description>
  </function>

  <function name="llTeleportAgent" energy="0">
    <param type="key" name="avatar"/>
    <param type="string" name="landmark"/>
    <param type="vector" name="position"/>
    <param type="vector" name="look_at"/>
    <description lang="en">
Requests a teleport of avatar to a landmark stored in the object's inventory. If no landmark is provided (an empty string), the avatar is teleported to the location position in the current region. In either case, the avatar is turned to face the position given by look_at in local coordinates.
    </description>
  </function>

  <function name="llTeleportAgentGlobalCoords" energy="0" grid="sl os">
    <param type="key" name="agent"/>
    <param type="vector" name="global_coordinates"/>
    <param type="vector" name="region_coordinates"/>
    <param type="vector" name="look_at"/>
    <description lang="en">
Teleports an agent to set of a region_coordinates within a region at the specified global_coordinates. The agent lands facing the position defined by look_at local coordinates.
A region's global coordinates can be retrieved using llRequestSimulatorData(region_name, DATA_SIM_POS).
    </description>
  </function>

  <function name="llGenerateKey" type="key" energy="0">
    <description lang="en">
Return a unique generated key
    </description>
  </function>

  <function name="llNavigateTo" energy="0" grid="sl aa">
    <param type="vector" name="point"/>
    <param type="list" name="options"/>
    <description lang="en">
For AI Character: Navigate to destination
    </description>
  </function>

  <function name="llCreateCharacter" energy="0" grid="sl aa">
    <param type="list" name="options"/>
    <description lang="en">
Convert linkset to AI Character which can navigate the world
    </description>
  </function>

  <function name="llPursue" energy="0" grid="sl aa">
    <param type="key" name="target"/>
    <param type="list" name="options"/>
    <description lang="en">
For AI Character: Chase after a target
    </description>
  </function>

  <function name="llWanderWithin" energy="0" grid="sl">
    <param type="vector" name="center"/>
    <param type="vector" name="radius"/>
    <param type="list" name="options"/>
    <description lang="en">
For AI Character: Wander within a specified volume
    </description>
  </function>

  <!-- The Aurora version has a float radius instead of vector -->
  <function name="llWanderWithin" energy="0" grid="aa">
    <param type="vector" name="center"/>
    <param type="float" name="radius"/>
    <param type="list" name="options"/>
    <description lang="en">
For AI Character: Wander within a specified volume
    </description>
  </function>

  <function name="llFleeFrom" energy="0" grid="sl aa">
    <param type="vector" name="source"/>
    <param type="float" name="radius"/>
    <param type="list" name="options"/>
    <description lang="en">
For AI Character: Flee from a point
    </description>
  </function>

  <function name="llPatrolPoints" energy="0" grid="sl aa">
    <param type="list" name="points"/>
    <param type="list" name="options"/>
    <description lang="en">
For AI Character: Patrol a list of points
    </description>
  </function>

  <function name="llExecCharacterCmd" energy="0" grid="sl aa">
    <param type="integer" name="cmd"/>
    <param type="list" name="options"/>
    <description lang="en">
For AI Character: Execute a character command
    </description>
  </function>

  <function name="llDeleteCharacter" energy="0" grid="sl aa">
    <description lang="en">
Convert linkset from AI Character to Physics object
    </description>
  </function>

  <function name="llUpdateCharacter" energy="0" grid="sl aa">
    <param type="list" name="options"/>
    <description lang="en">
Change the AI Character's settings
    </description>
  </function>

  <function name="llEvade" energy="0" grid="sl aa">
    <param type="key" name="target"/>
    <param type="list" name="options"/>
    <description lang="en">
For AI Character: Evade a specified target
    </description>
  </function>

  <function name="llGetClosestNavPoint" type="list" energy="0" grid="sl aa">
    <param type="vector" name="point"/>
    <param type="list" name="options"/>
    <description lang="en">
For AI Character: Get the closest navigable point to the point provided
    </description>
  </function>

  <function name="llGetStaticPath" type="list" energy="0" grid="sl">
    <param type="vector" name="start"/>
    <param type="vector" name="end"/>
    <param type="float" name="radius"/>
    <param type="list" name="params"/>
    <description lang="en">
Returns a list of position vectors indicating pathfinding waypoints between positions at start and end, for a character of a given radius
    </description>
  </function>

  <function name="llGetSimStats" type="float" energy="0" grid="sl">
    <param type="integer" name="stat_type"/>
    <description lang="en">
Returns the value of a particular simulator statistic
    </description>
  </function>

  <function name="llSetAnimationOverride" grid="sl">
    <param type="string" name="anim_state"/>
    <param type="string" name="anim"/>
    <description lang="en">
Set the animation that will play for the given animation state. Requires PERMISSION_OVERRIDE_ANIMATIONS.
    </description>
  </function>

  <function name="llGetAnimationOverride" type="string" grid="sl">
    <param type="string" name="anim_state"/>
    <description lang="en">
Get the name of the animation currently set for the given animation state. Requires either PERMISSION_OVERRIDE_ANIMATIONS or PERMISSION_TRIGGER_ANIMATION.
    </description>
  </function>

  <function name="llResetAnimationOverride" grid="sl">
    <param type="string" name="anim_state"/>
    <description lang="en">
Resets the animation for the given animation state to the default. The special value "ALL" will reset the animations for all states. Requires PERMISSION_OVERRIDE_ANIMATIONS.
    </description>
  </function>

  <function name="llJson2List" type="list" grid="sl">
    <param type="string" name="json"/>
    <description lang="en">
Converts the top level of the json string to a list
    </description>
  </function>

  <function name="llList2Json" type="string" grid="sl">
    <param type="string" name="type"/>
    <param type="list" name="values"/>
    <description lang="en">
Converts either a strided list of key:value pairs to a JSON_OBJECT or a list of values to a JSON_ARRAY. type must be either JSON_OBJECT or JSON_ARRAY.
    </description>
  </function>

  <function name="llJsonGetValue" type="string" grid="sl">
    <param type="string" name="json"/>
    <param type="list" name="specifiers"/>
    <description lang="en">
Gets the value indicated by specifiers from the json string
    </description>
  </function>

  <function name="llJsonSetValue" type="string" grid="sl">
    <param type="string" name="json"/>
    <param type="list" name="specifiers"/>
    <param type="string" name="value"/>
    <description lang="en">
Returns a new json string that is the json given with the value indicated by specifiers set to value
    </description>
  </function>

  <function name="llJsonValueType" type="string" grid="sl">
    <param type="string" name="json"/>
    <param type="list" name="specifiers"/>
    <description lang="en">
Returns the type constant for the value in json indicated by specifiers
    </description>
  </function>

  <function name="llReturnObjectsByID" type="integer" grid="sl">
    <param type="list" name="objects"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llReturnObjectsByOwner" type="integer" grid="sl">
    <param type="key" name="owner"/>
    <param type="integer" name="scope"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llXorBase64" type="string" grid="sl">
    <param type="string" name="str1"/>
    <param type="string" name="str2"/>
    <description lang="en">
Performs an exclusive or on two Base64 strings and returns a Base64 string.
str2 repeats if it is shorter than str1.
    </description>
  </function>

  <function name="llScaleByFactor" type="integer" grid="sl">
    <param type="float" name="scaling_factor"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llGetMinScaleFactor" type="float" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llGetMaxScaleFactor" type="float" grid="sl">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llAgentInExperience" type="integer" grid="sl" version="sl:14.07.18.292162">
    <param type="key" name="agent"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llGetExperienceDetails" grid="sl" type="list" version="sl:14.07.18.292162">
    <param type="key" name="experience_id"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llRequestExperiencePermissions" grid="sl" version="sl:14.07.18.292162">
    <param type="key" name="agent"/>
    <param type="string" name="name"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llReadKeyValue" grid="sl" type="key" version="sl:14.07.18.292162">
    <param type="string" name="k"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llCreateKeyValue" grid="sl" type="key" version="sl:14.07.18.292162">
    <param type="string" name="k"/>
    <param type="string" name="v"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llUpdateKeyValue" grid="sl" type="key" version="sl:14.07.18.292162">
    <param type="string" name="k"/>
    <param type="string" name="v"/>
    <param type="integer" name="checked"/>
    <param type="string" name="original_value"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llDeleteKeyValue" grid="sl" type="key" version="sl:14.07.18.292162">
    <param type="string" name="k"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llDataSizeKeyValue" grid="sl" type="key" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llKeysKeyValue" grid="sl" type="key" version="sl:14.07.18.292162">
    <param type="integer" name="start"/>
    <param type="integer" name="count"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llKeyCountKeyValue" grid="sl" type="key" version="sl:14.07.18.292162">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llGetExperienceErrorMessage" grid="sl" type="string" version="sl:14.07.18.292162">
    <param type="integer" name="value"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llGetExperienceList" grid="sl" type="list" version="sl:14.07.18.292162" status="unimplemented">
    <param type="key" name="agent"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llClearExperiencePermissions" grid="sl" version="sl:14.07.18.292162" status="unimplemented">
    <param type="key" name="agent"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="llGetAttachedList" type="list" grid="sl" version="sl:15.09.14.305056">
    <param type="key" name="agent"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <!-- OpenSim/Aurora-specific functions -->

  <!-- From ILS_Api.cs -->

  <function name="lsGetWindlightScene" type="list" grid="os">
    <param type="list" name="rules"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="lsSetWindlightScene" type="integer" grid="os">
    <param type="list" name="rules"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="lsSetWindlightSceneTargeted" type="integer" grid="os">
    <param type="list" name="rules"/>
    <param type="key" name="target"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="lsClearWindlightScene" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <!-- From IOSSL_Api.cs -->

  <function name="osSetDynamicTextureURL" type="string" grid="os aa">
    <param type="string" name="dynamicID"/>
    <param type="string" name="contentType"/>
    <param type="string" name="url"/>
    <param type="string" name="extraParams"/>
    <param type="integer" name="timer"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetDynamicTextureURLBlend" type="string" grid="os aa">
    <param type="string" name="dynamicID"/>
    <param type="string" name="contentType"/>
    <param type="string" name="url"/>
    <param type="string" name="extraParams"/>
    <param type="integer" name="timer"/>
    <param type="integer" name="alpha"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetDynamicTextureURLBlendFace" type="string" grid="os aa">
    <param type="string" name="dynamicID"/>
    <param type="string" name="contentType"/>
    <param type="string" name="url"/>
    <param type="string" name="extraParams"/>
    <param type="bool" name="blend"/>
    <param type="integer" name="disp"/>
    <param type="integer" name="timer"/>
    <param type="integer" name="alpha"/>
    <param type="integer" name="face"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetDynamicTextureData" type="string" grid="os aa">
    <param type="string" name="dynamicID"/>
    <param type="string" name="contentType"/>
    <param type="string" name="data"/>
    <param type="string" name="extraParams"/>
    <param type="integer" name="timer"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetDynamicTextureDataBlend" type="string" grid="os aa">
    <param type="string" name="dynamicID"/>
    <param type="string" name="contentType"/>
    <param type="string" name="data"/>
    <param type="string" name="extraParams"/>
    <param type="integer" name="timer"/>
    <param type="integer" name="alpha"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetDynamicTextureDataBlendFace" type="string" grid="os aa">
    <param type="string" name="dynamicID"/>
    <param type="string" name="contentType"/>
    <param type="string" name="data"/>
    <param type="string" name="extraParams"/>
    <param type="bool" name="blend"/>
    <param type="integer" name="disp"/>
    <param type="integer" name="timer"/>
    <param type="integer" name="alpha"/>
    <param type="integer" name="face"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetTerrainHeight" type="float" grid="os aa">
    <param type="integer" name="x"/>
    <param type="integer" name="y"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osTerrainGetHeight" type="float" status="deprecated" grid="os">
    <param type="integer" name="x"/>
    <param type="integer" name="y"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetTerrainHeight" type="integer" grid="os aa">
    <param type="integer" name="x"/>
    <param type="integer" name="y"/>
    <param type="float" name="val"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osTerrainSetHeight" type="integer" status="deprecated" grid="os">
    <param type="integer" name="x"/>
    <param type="integer" name="y"/>
    <param type="float" name="val"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osTerrainFlush" grid="os">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osRegionRestart" type="integer" grid="os aa">
    <param type="float" name="seconds"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osRegionNotice" grid="os">
    <param type="string" name="msg"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osConsoleCommand" type="bool" grid="os aa">
    <param type="string" name="Command"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetParcelMediaURL" grid="os aa">
    <param type="string" name="url"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetPrimFloatOnWater" grid="os aa">
    <param type="integer" name="floatYN"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetParcelSIPAddress" grid="os aa">
    <param type="string" name="SIPAddress"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetAgentIP" type="string" grid="os aa">
    <param type="string" name="agent"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetAgents" type="list" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="osTeleportAgent" grid="os aa">
    <param type="string" name="agent"/>
    <param type="string" name="regionName"/>
    <param type="vector" name="position"/>
    <param type="vector" name="lookat"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="osTeleportAgent" grid="os aa">
    <param type="string" name="agent"/>
    <param type="integer" name="regionX"/>
    <param type="integer" name="regionY"/>
    <param type="vector" name="position"/>
    <param type="vector" name="lookat"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="osTeleportAgent" grid="os aa">
    <param type="string" name="agent"/>
    <param type="vector" name="position"/>
    <param type="vector" name="lookat"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="osTeleportOwner" grid="os aa">
    <param type="string" name="regionName"/>
    <param type="vector" name="position"/>
    <param type="vector" name="lookat"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="osTeleportOwner" grid="os aa">
    <param type="integer" name="regionX"/>
    <param type="integer" name="regionY"/>
    <param type="vector" name="position"/>
    <param type="vector" name="lookat"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="osTeleportOwner" grid="os aa">
    <param type="vector" name="position"/>
    <param type="vector" name="lookat"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osAvatarPlayAnimation" grid="os aa">
    <param type="string" name="avatar"/>
    <param type="string" name="animation"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osAvatarStopAnimation" grid="os aa">
    <param type="string" name="avatar"/>
    <param type="string" name="animation"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osForceAttachToAvatar" grid="os aa">
    <param type="integer" name="attachment"/>
    <description lang="en">
Attach the object containing this script to the avatar that owns it without asking for PERMISSION_ATTACH
    </description>
  </function>

  <function name="osForceAttachToAvatarFromInventory" grid="os">
    <param type="string" name="itemName"/>
    <param type="integer" name="attachment"/>
    <description lang="en">
Attach an inventory item in the object containing this script to the avatar that owns it without asking for PERMISSION_ATTACH
    </description>
  </function>

  <function name="osForceAttachToOtherAvatarFromInventory" grid="os">
    <param type="string" name="rawAvatarId"/>
    <param type="string" name="itemName"/>
    <param type="integer" name="attachmentPoint"/>
    <description lang="en">
Attach an inventory item in the object containing this script to any avatar in the region without asking for PERMISSION_ATTACH
    </description>
  </function>

  <function name="osForceDetachFromAvatar" grid="os aa">
    <description lang="en">
Detach the object containing this script from the avatar it is attached to without checking for PERMISSION_ATTACH
    </description>
  </function>

  <function name="osGetNumberOfAttachments" type="list" grid="os">
    <param type="key" name="avatar"/>
    <param type="list" name="attachmentPoints"/>
    <description lang="en">
Returns a strided list of the specified attachment points and the number of attachments on those points
    </description>
  </function>

  <function name="osMessageAttachments" grid="os">
    <param type="key" name="avatar"/>
    <param type="string" name="message"/>
    <param type="list" name="attachmentPoints"/>
    <param type="integer" name="flags"/>
    <description lang="en">
Sends a specified message to the specified avatar's attachments on the specified attachment points
    </description>
  </function>

  <function name="osMovePen" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="integer" name="x"/>
    <param type="integer" name="y"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osDrawLine" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="integer" name="startX"/>
    <param type="integer" name="startY"/>
    <param type="integer" name="endX"/>
    <param type="integer" name="endY"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osDrawLine" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="integer" name="endX"/>
    <param type="integer" name="endY"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osDrawText" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="string" name="text"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osDrawEllipse" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="integer" name="width"/>
    <param type="integer" name="height"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osDrawRectangle" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="integer" name="width"/>
    <param type="integer" name="height"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osDrawFilledRectangle" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="integer" name="width"/>
    <param type="integer" name="height"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osDrawPolygon" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="list" name="x"/>
    <param type="list" name="y"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osDrawFilledPolygon" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="list" name="x"/>
    <param type="list" name="y"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetFontName" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="string" name="fontName"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetFontSize" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="integer" name="fontSize"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetPenSize" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="integer" name="penSize"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetPenColor" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="string" name="color"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetPenColour" type="string" status="deprecated" grid="os">
    <param type="string" name="drawList"/>
    <param type="string" name="colour"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetPenCap" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="string" name="direction"/>
    <param type="string" name="type"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osDrawImage" type="string" grid="os aa">
    <param type="string" name="drawList"/>
    <param type="integer" name="width"/>
    <param type="integer" name="height"/>
    <param type="string" name="imageUrl"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetDrawStringSize" type="vector" grid="os aa">
    <param type="string" name="contentType"/>
    <param type="string" name="text"/>
    <param type="string" name="fontName"/>
    <param type="integer" name="fontSize"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetStateEvents" grid="os">
    <param type="integer" name="events"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osList2Double" type="float" grid="os aa">
    <param type="list" name="src"/>
    <param type="integer" name="index"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetRegionWaterHeight" grid="os aa">
    <param type="float" name="height"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetRegionSunSettings" grid="os aa">
    <param type="bool" name="useEstateSun"/>
    <param type="bool" name="sunFixed"/>
    <param type="float" name="sunHour"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetEstateSunSettings" grid="os aa">
    <param type="bool" name="sunFixed"/>
    <param type="float" name="sunHour"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetCurrentSunHour" type="float" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetSunParam" type="float" grid="os aa">
    <param type="string" name="param"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSunGetParam" type="float" status="deprecated" grid="os aa">
    <param type="string" name="param"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetSunParam" grid="os aa">
    <param type="string" name="param"/>
    <param type="float" name="value"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSunSetParam" status="deprecated" grid="os aa">
    <param type="string" name="param"/>
    <param type="float" name="value"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osWindActiveModelPluginName" type="string" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetWindParam" grid="os aa">
    <param type="string" name="plugin"/>
    <param type="string" name="param"/>
    <param type="float" name="value"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetWindParam" type="float" grid="os aa">
    <param type="string" name="plugin"/>
    <param type="string" name="param"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osParcelJoin" grid="os aa">
    <param type="vector" name="pos1"/>
    <param type="vector" name="pos2"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osParcelSubdivide" grid="os aa">
    <param type="vector" name="pos1"/>
    <param type="vector" name="pos2"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetParcelDetails" grid="os aa">
    <param type="vector" name="pos"/>
    <param type="list" name="rules"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osParcelSetDetails" status="deprecated" grid="os">
    <param type="vector" name="pos"/>
    <param type="list" name="rules"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetScriptEngineName" type="string" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetSimulatorVersion" type="string" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <!-- These functions are excluded because of the nonstandard return types:
  <function name="osParseJSONNew" type="Object" grid="os aa">
    <param type="string" name="JSON"/>
    <description lang="en">
    </description>
  </function>

  <function name="osParseJSON" type="Hashtable" grid="os aa">
    <param type="string" name="JSON"/>
    <description lang="en">
    </description>
  </function>
  -->

  <function name="osMessageObject" grid="os aa">
    <param type="key" name="objectUUID"/>
    <param type="string" name="message"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osMakeNotecard" grid="os aa">
    <param type="string" name="notecardName"/>
    <param type="list" name="contents"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetNotecardLine" type="string" grid="os aa">
    <param type="string" name="name"/>
    <param type="integer" name="line"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetNotecard" type="string" grid="os aa">
    <param type="string" name="name"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetNumberOfNotecardLines" type="integer" grid="os aa">
    <param type="string" name="name"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osAvatarName2Key" type="string" grid="os aa">
    <param type="string" name="firstname"/>
    <param type="string" name="lastname"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osKey2Name" type="string" grid="os aa">
    <param type="string" name="id"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetGridNick" type="string" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetGridName" type="string" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetGridLoginURI" type="string" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetGridHomeURI" type="string" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetGridGatekeeperURI" type="string" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetGridCustom" type="string" grid="os aa">
    <param type="string" name="id"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetThreatLevel" type="string" grid="aa">
    <param type="string" name="id"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osReturnObject" grid="aa">
    <param type="key" name="userID"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osReturnObjects" grid="aa">
    <param type="float" name="Parameter"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osShutDown" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osFormatString" type="string" grid="os aa">
    <param type="string" name="str"/>
    <param type="list" name="strings"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osMatchString" type="list" grid="os aa">
    <param type="string" name="src"/>
    <param type="string" name="pattern"/>
    <param type="integer" name="start"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osReplaceString" type="string" grid="os">
    <param type="string" name="src"/>
    <param type="string" name="pattern"/>
    <param type="string" name="replace"/>
    <param type="integer" name="count"/>
    <param type="integer" name="start"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osLoadedCreationDate" type="string" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osLoadedCreationTime" type="string" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osLoadedCreationID" type="string" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetLinkPrimitiveParams" type="list" grid="os aa">
    <param type="integer" name="linknumber"/>
    <param type="list" name="rules"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osAddAgentToGroup" type="integer" grid="aa">
    <param type="key" name="AgentID"/>
    <param type="string" name="GroupName"/>
    <param type="string" name="RequestedRole"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <!-- This function returns DateTime for Aurora, but we're not special-casing it -->
  <function name="osRezObject" grid="aa">
    <param type="string" name="inventory"/>
    <param type="vector" name="pos"/>
    <param type="vector" name="vel"/>
    <param type="rotation" name="rot"/>
    <param type="integer" name="param"/>
    <param type="integer" name="isRezAtRoot"/>
    <param type="integer" name="doRecoil"/>
    <param type="integer" name="SetDieAtEdge"/>
    <param type="integer" name="CheckPos"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osIsNpc" type="integer" grid="os">
    <param type="key" name="npc"/>
    <description lang="en">
Check if the given key is an npc
    </description>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcCreate" type="key" grid="os">
    <param type="string" name="user"/>
    <param type="string" name="name"/>
    <param type="vector" name="position"/>
    <param type="string" name="notecard"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcCreate" type="key" grid="os">
    <param type="string" name="user"/>
    <param type="string" name="name"/>
    <param type="vector" name="position"/>
    <param type="string" name="notecard"/>
    <param type="integer" name="options"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcSaveAppearance" type="key" grid="os">
    <param type="key" name="npc"/>
    <param type="string" name="notecard"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcLoadAppearance" grid="os">
    <param type="key" name="npc"/>
    <param type="string" name="notecard"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcGetPos" type="vector" grid="os">
    <param type="key" name="npc"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcMoveTo" grid="os">
    <param type="key" name="npc"/>
    <param type="vector" name="position"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcMoveToTarget" grid="os">
    <param type="key" name="npc"/>
    <param type="vector" name="target"/>
    <param type="integer" name="options"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcGetOwner" type="key" grid="os">
    <param type="key" name="npc"/>
    <description lang="en">
Get the owner of the NPC
    </description>
  </function>

  <function name="osNpcGetRot" type="rotation" grid="os">
    <param type="key" name="npc"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcSetRot" grid="os">
    <param type="key" name="npc"/>
    <param type="rotation" name="rot"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcStopMoveToTarget" grid="os">
    <param type="key" name="npc"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcSay" grid="os">
    <param type="key" name="npc"/>
    <param type="string" name="message"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcSay" grid="os">
    <param type="key" name="npc"/>
    <param type="integer" name="channel"/>
    <param type="string" name="message"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcShout" grid="os">
    <param type="key" name="npc"/>
    <param type="integer" name="channel"/>
    <param type="string" name="message"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcSit" grid="os">
    <param type="key" name="npc"/>
    <param type="key" name="target"/>
    <param type="integer" name="options"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcStand" grid="os">
    <param type="key" name="npc"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcRemove" grid="os">
    <param type="key" name="npc"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcPlayAnimation" grid="os">
    <param type="key" name="npc"/>
    <param type="string" name="animation"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcStopAnimation" grid="os">
    <param type="key" name="npc"/>
    <param type="string" name="animation"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcTouch" grid="os">
    <param type="key" name="npcLSL_Key"/>
    <param type="key" name="object_key"/>
    <param type="integer" name="link_num"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osNpcWhisper" grid="os">
    <param type="key" name="npc"/>
    <param type="integer" name="channel"/>
    <param type="string" name="message"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osOwnerSaveAppearance" type="key" grid="os">
    <param type="string" name="notecard"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osAgentSaveAppearance" type="key" grid="os">
    <param type="key" name="agentId"/>
    <param type="string" name="notecard"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetMapTexture" type="key" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetRegionMapTexture" type="key" grid="os aa">
    <param type="string" name="regionName"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetRegionStats" type="list" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetSimulatorMemory" type="integer" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osKickAvatar" grid="os aa">
    <param type="string" name="FirstName"/>
    <param type="string" name="SurName"/>
    <param type="string" name="alert"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetSpeed" grid="os aa">
    <param type="key" name="UUID"/>
    <param type="float" name="SpeedModifier"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetHealth" type="float" grid="os aa">
    <param type="string" name="avatar"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osCauseHealing" grid="os aa">
    <param type="string" name="avatar"/>
    <param type="float" name="healing"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osCauseDamage" grid="os aa">
    <param type="string" name="avatar"/>
    <param type="float" name="damage"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osCauseDamage" grid="aa">
    <param type="string" name="avatar"/>
    <param type="float" name="damage"/>
    <param type="string" name="regionName"/>
    <param type="vector" name="position"/>
    <param type="vector" name="lookat"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetPrimitiveParams" type="list" grid="os aa">
    <param type="key" name="prim"/>
    <param type="list" name="rules"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetPrimitiveParams" grid="os aa">
    <param type="key" name="prim"/>
    <param type="list" name="rules"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetProjectionParams" grid="os aa">
    <param type="bool" name="projection"/>
    <param type="key" name="texture"/>
    <param type="float" name="fov"/>
    <param type="float" name="focus"/>
    <param type="float" name="amb"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetProjectionParams" grid="os aa">
    <param type="key" name="prim"/>
    <param type="bool" name="projection"/>
    <param type="key" name="texture"/>
    <param type="float" name="fov"/>
    <param type="float" name="focus"/>
    <param type="float" name="amb"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetAvatarList" type="list" grid="os aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osUnixTimeToTimestamp" type="string" grid="os aa">
    <!-- Parameter type is actually long but we're using integer here:
    <param type="long" name="time"/>
    -->
    <param type="integer" name="time"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osGetInventoryDesc" type="string" grid="os aa">
    <param type="string" name="item"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osInviteToGroup" type="integer" grid="os aa">
    <param type="key" name="agentId"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osEjectFromGroup" type="integer" grid="os aa">
    <param type="key" name="agentId"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetTerrainTexture" grid="os aa">
    <param type="integer" name="level"/>
    <param type="key" name="texture"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osSetTerrainTextureHeight" grid="os aa">
    <param type="integer" name="corner"/>
    <param type="float" name="low"/>
    <param type="float" name="high"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="osIsUUID" type="integer" grid="os">
    <param type="string" name="thing"/>
    <description lang="en">
Checks if thing is a UUID
    </description>
  </function>

  <function name="osMin" type="float" grid="os">
    <param type="float" name="a"/>
    <param type="float" name="b"/>
    <description lang="en">
Wraps to Math.Min()
    </description>
  </function>

  <function name="osMax" type="float" grid="os">
    <param type="float" name="a"/>
    <param type="float" name="b"/>
    <description lang="en">
Wraps to Math.max()
    </description>
  </function>

  <function name="osGetRezzingObject" type="key" grid="os">
    <description lang="en">
Get the key of the object that rezzed this object
    </description>
  </function>

  <function name="osSetContentType" grid="os">
    <param type="key" name="id"/>
    <param type="string" name="type"/>
    <description lang="en">
Sets the response type for an HTTP request/response
    </description>
  </function>

  <function name="osDropAttachment" grid="os">
    <description lang="en">
Attempts to drop an attachment to the ground
    </description>
  </function>

  <function name="osForceDropAttachment" grid="os">
    <description lang="en">
Attempts to drop an attachment to the ground while bypassing the script permissions
    </description>
  </function>

  <function name="osDropAttachmentAt" grid="os">
    <param type="vector" name="pos"/>
    <param type="rotation" name="rot"/>
    <description lang="en">
Attempts to drop an attachment at the specified coordinates
    </description>
  </function>

  <function name="osForceDropAttachmentAt" grid="os">
    <param type="vector" name="pos"/>
    <param type="rotation" name="rot"/>
    <description lang="en">
Attempts to drop an attachment at the specified coordinates while bypassing the script permissions
    </description>
  </function>

  <function name="osListenRegex" type="integer" grid="os">
    <param type="integer" name="channelID"/>
    <param type="string" name="name"/>
    <param type="string" name="ID"/>
    <param type="string" name="msg"/>
    <param type="integer" name="regexBitfield"/>
    <description lang="en">
Identical to llListen except for a bitfield which indicates which string parameters should be parsed as regex patterns
    </description>
  </function>

  <function name="osRegexIsMatch" type="integer" grid="os">
    <param type="string" name="input"/>
    <param type="string" name="pattern"/>
    <description lang="en">
Wraps to bool Regex.IsMatch(string input, string pattern)
    </description>
  </function>

  <!-- Aurora exclusive functions (from IAA_Api.cs) -->

  <function name="aaSetCloudDensity" grid="aa">
    <param type="float" name="density"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaUpdateDatabase" grid="aa">
    <param type="string" name="keyname"/> <!-- renamed from 'key' which is a reserved word -->
    <param type="string" name="value"/>
    <param type="string" name="token"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaQueryDatabase" type="list" grid="aa">
    <param type="string" name="keyname"/> <!-- renamed from 'key' which is a reserved word -->
    <param type="string" name="token"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaDeserializeXMLValues" type="list" grid="aa">
    <param type="key" name="xmlFile"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaDeserializeXMLKeys" type="list" grid="aa">
    <param type="key" name="xmlFile"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaSetConeOfSilence" grid="aa">
    <param type="float" name="radius"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaSerializeXML" type="key" grid="aa">
    <param type="list" name="keynames"/> <!-- renamed from 'keys' for consistency -->
    <param type="list" name="values"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaGetTeam" type="string" grid="aa">
    <param type="key" name="id"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaGetHealth" type="float" grid="aa">
    <param type="key" name="id"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaJoinCombat" grid="aa">
    <param type="key" name="id"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaLeaveCombat" grid="aa">
    <param type="key" name="id"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaJoinCombatTeam" grid="aa">
    <param type="key" name="id"/>
    <param type="string" name="team"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaRequestCombatPermission" grid="aa">
    <param type="string" name="ID"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaThawAvatar" grid="aa">
    <param type="string" name="ID"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaFreezeAvatar" grid="aa">
    <param type="string" name="ID"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaGetTeamMembers" type="list" grid="aa">
    <param type="string" name="team"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaGetLastOwner" type="string" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaGetLastOwner" type="string" grid="aa">
    <param type="string" name="PrimID"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaSayDistance" grid="aa">
    <param type="integer" name="channelID"/>
    <param type="float" name="Distance"/>
    <param type="string" name="text"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaSayTo" grid="aa">
    <param type="string" name="userID"/>
    <param type="string" name="text"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaGetWalkDisabled" type="integer" grid="aa">
    <param type="string" name="userID"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaSetWalkDisabled" grid="aa">
    <param type="string" name="userID"/>
    <param type="bool" name="Value"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaGetFlyDisabled" type="integer" grid="aa">
    <param type="string" name="userID"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaSetFlyDisabled" grid="aa">
    <param type="string" name="userID"/>
    <param type="bool" name="Value"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaAvatarFullName2Key" type="key" grid="aa">
    <param type="string" name="username"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaRaiseError" grid="aa">
    <param type="string" name="message"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaGetText" type="key" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaGetTextColor" type="rotation" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaSetEnv" grid="aa">
    <param type="string" name="name"/>
    <param type="list" name="value"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaGetIsInfiniteRegion" type="integer" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaAllRegionInstanceSay" grid="aa">
    <param type="integer" name="channelID"/>
    <param type="string" name="text"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaWindlightGetSceneIsStatic" type="integer" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaWindlightGetSceneDayCycleKeyFrameCount" type="integer" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaWindlightGetDayCycle" type="list" grid="aa">
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaWindlightAddDayCycleFrame" type="integer" grid="aa">
    <param type="float" name="dayCyclePosition"/>
    <param type="integer" name="dayCycleFrameToCopy"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaWindlightRemoveDayCycleFrame" type="integer" grid="aa">
    <param type="integer" name="dayCycleFrame"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaWindlightGetScene" type="list" grid="aa">
    <param type="list" name="rules"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaWindlightGetScene" type="list" grid="aa">
    <param type="integer" name="dayCycleKeyFrame"/>
    <param type="list" name="rules"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaWindlightSetScene" type="integer" grid="aa">
    <param type="list" name="list"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="aaWindlightSetScene" type="integer" grid="aa">
    <param type="integer" name="dayCycleIndex"/>
    <param type="list" name="list"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <!-- Aurora bot functions (from IBot_Api.cs) -->

  <function name="botGetWaitingTime" type="vector" grid="aa">
    <param type="integer" name="waitTime"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botSetMap" grid="aa">
    <param type="string" name="keyOfBot"/>
    <param type="list" name="positions"/>
    <param type="list" name="movementType"/>
    <param type="integer" name="flags"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botCreateBot" type="string" grid="aa">
    <param type="string" name="FirstName"/>
    <param type="string" name="LastName"/>
    <param type="string" name="appearanceToClone"/>
    <param type="vector" name="startPos"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botRemoveBot" grid="aa">
    <param type="string" name="bot"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botPauseMovement" grid="aa">
    <param type="string" name="bot"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botResumeMovement" grid="aa">
    <param type="string" name="bot"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botFollowAvatar" grid="aa">
    <param type="string" name="bot"/>
    <param type="string" name="avatarName"/>
    <param type="float" name="startFollowDistance"/>
    <param type="float" name="endFollowDistance"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botStopFollowAvatar" grid="aa">
    <param type="string" name="bot"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botSendChatMessage" grid="aa">
    <param type="string" name="bot"/>
    <param type="string" name="message"/>
    <param type="integer" name="sayType"/>
    <param type="integer" name="channel"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botSendIM" grid="aa">
    <param type="string" name="bot"/>
    <param type="string" name="user"/>
    <param type="string" name="message"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botSetShouldFly" grid="aa">
    <param type="string" name="keyOfBot"/>
    <param type="integer" name="ShouldFly"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botSitObject" grid="aa">
    <param type="string" name="bot"/>
    <param type="string" name="objectID"/>
    <param type="vector" name="offset"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botStandUp" grid="aa">
    <param type="string" name="bot"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botTouchObject" grid="aa">
    <param type="string" name="bot"/>
    <param type="string" name="objectID"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botAddTag" grid="aa">
    <param type="string" name="bot"/>
    <param type="string" name="tag"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botGetBotsWithTag" type="list" grid="aa">
    <param type="string" name="tag"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>

  <function name="botRemoveBotsWithTag" grid="aa">
    <param type="string" name="tag"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </function>


  <!-- Events -->

  <event name="state_entry">
    <description lang="en">
Triggered on any state transition and startup
    </description>
  </event>

  <event name="state_exit">
    <description lang="en">
Triggered on any state transition
    </description>
  </event>

  <event name="touch_start">
    <param type="integer" name="num_detected"/>
    <description lang="en">
Triggered by the start of agent clicking on task
    </description>
  </event>

  <event name="touch">
    <param type="integer" name="num_detected"/>
    <description lang="en">
Triggered while agent is clicking on task
    </description>
  </event>

  <event name="touch_end">
    <param type="integer" name="num_detected"/>
    <description lang="en">
Triggered when agent stops clicking on task
    </description>
  </event>

  <event name="collision_start">
    <param type="integer" name="num_detected"/>
    <description lang="en">
Triggered when task starts colliding with another task
    </description>
  </event>

  <event name="collision">
    <param type="integer" name="num_detected"/>
    <description lang="en">
Triggered while task is colliding with another task
    </description>
  </event>

  <event name="collision_end">
    <param type="integer" name="num_detected"/>
    <description lang="en">
Triggered when task stops colliding with another task
    </description>
  </event>

  <event name="land_collision_start">
    <param type="vector" name="pos"/>
    <description lang="en">
Triggered when task starts colliding with land
    </description>
  </event>

  <event name="land_collision">
    <param type="vector" name="pos"/>
    <description lang="en">
Triggered when task is colliding with land
    </description>
  </event>

  <event name="land_collision_end">
    <param type="vector" name="pos"/>
    <description lang="en">
Triggered when task stops colliding with land
    </description>
  </event>

  <event name="timer">
    <description lang="en">
Result of the llSetTimerEvent library function call
    </description>
  </event>

  <event name="listen">
    <param type="integer" name="channel"/>
    <param type="string"  name="name"   />
    <param type="key"     name="id"     />
    <param type="string"  name="message"/>
    <description lang="en">
Result of the llListen library function call
    </description>
  </event>

  <event name="sensor">
    <param type="integer" name="num_detected"/>
    <description lang="en">
Result of the llSensor library function call
    </description>
  </event>

  <event name="no_sensor">
    <description lang="en">
Result of the llSensor library function call
    </description>
  </event>

  <event name="control">
    <param type="key"     name="id"   />
    <param type="integer" name="level"/>
    <param type="integer" name="edge" />
    <description lang="en">
Result of llTakeControls library function call
    </description>
  </event>

  <event name="at_target">
    <param type="integer" name="tnum"     />
    <param type="vector"  name="targetpos"/>
    <param type="vector"  name="ourpos"   />
    <description lang="en">
Result of llTarget library function call
    </description>
  </event>

  <event name="not_at_target">
    <description lang="en">
Result of llTarget library function call
    </description>
  </event>

  <event name="at_rot_target">
    <param type="integer"    name="tnum"     />
    <param type="rotation"   name="targetrot"/>
    <param type="rotation"   name="ourrot"   />
    <description lang="en">
Result of LLRotTarget library function call
    </description>
  </event>

  <event name="not_at_rot_target">
    <description lang="en">
Result of LLRotTarget library function call
    </description>
  </event>

  <event name="money">
    <param type="key"     name="id"    />
    <param type="integer" name="amount"/>
    <description lang="en">
Triggered when L$ is given to task
    </description>
  </event>

  <event name="email" version="sl:1.3.0">
    <param type="string"  name="time"    />
    <param type="string"  name="address" />
    <param type="string"  name="subj"    />
    <param type="string"  name="message" />
    <param type="integer" name="num_left"/>
    <description lang="en">
Triggered when task receives email
    </description>
  </event>

  <event name="run_time_permissions">
    <param type="integer" name="perm"/>
    <description lang="en">
Triggered when an agent grants run time permissions to task
    </description>
  </event>

  <event name="attach">
    <param type="key" name="id"/>
    <description lang="en">
Triggered when task attaches or detaches from agent
    </description>
  </event>

  <event name="dataserver">
    <param type="key"    name="queryid"/>
    <param type="string" name="data"   />
    <description lang="en">
Triggered when task receives asynchronous data
    </description>
  </event>

  <event name="moving_start">
    <description lang="en">
Triggered when task begins moving
    </description>
  </event>

  <event name="moving_end">
    <description lang="en">
Triggered when task stops moving
    </description>
  </event>

  <event name="on_rez">
    <param type="integer" name="start_param"/>
    <description lang="en">
Triggered when task is rezzed in from inventory or another task
    </description>
  </event>

  <event name="object_rez">
    <param type="key" name="id"/>
    <description lang="en">
Triggered when task rezzes in another task
    </description>
  </event>

  <event name="link_message">
    <param type="integer" name="sender_num"/>
    <param type="integer" name="num"       />
    <param type="string"  name="str"       />
    <param type="key"     name="id"        />
    <description lang="en">
Triggered when task receives a link message via LLMessageLinked library function call
    </description>
  </event>

  <event name="changed">
    <param type="integer" name="change"/>
    <description lang="en">
Triggered various event change the task
(test change with CHANGED_INVENTORY, CHANGED_COLOR, CHANGED_SHAPE, CHANGED_SCALE, CHANGED_TEXTURE, CHANGED_LINK, CHANGED_ALLOWED_DROP, CHANGED_OWNER, CHANGED_REGION, CHANGED_TELEPORT, CHANGED_REGION_START, CHANGED_MEDIA)
    </description>
  </event>

  <event name="remote_data">
    <param type="integer" name="event_type"/>
    <param type="key"     name="channel"   />
    <param type="key"     name="message_id"/>
    <param type="string"  name="sender"    />
    <param type="integer" name="idata"     />
    <param type="string"  name="sdata"     />
    <description lang="en">
Triggered by various XML-RPC calls (event_type will be one of REMOTE_DATA_CHANNEL, REMOTE_DATA_REQUEST, REMOTE_DATA_REPLY)
    </description>
  </event>

  <event name="http_response" version="sl:1.9.1.9">
    <param type="key"     name="request_id"/>
    <param type="integer" name="status"    />
    <param type="list"    name="metadata"  />
    <param type="string"  name="body"      />
    <description lang="en">
Triggered when task receives a response to one of its llHTTPRequests
    </description>
  </event>

  <event name="http_request">
    <param type="key"    name="id"    />
    <param type="string" name="method"/>
    <param type="string" name="body"  />
    <description lang="en">
Triggered when task receives an http request against a public URL
    </description>
  </event>

  <event name="transaction_result" grid="sl aa">
    <param type="key"     name="id"     />
    <param type="integer" name="success"/>
    <param type="string"  name="data"   />
    <description lang="en">
Triggered when transferring L$ to Agent via llTransferLindenDollars
    </description>
  </event>

  <event name="path_update" grid="sl aa">
    <param type="integer" name="type"    />
    <param type="list"    name="reserved"/>
    <description lang="en">
<!-- TODO: add documentation -->
    </description>
  </event>

  <event name="experience_permissions" grid="sl" version="sl:14.07.18.292162">
    <param type="key"     name="agent"   />
    <description lang="en">
Triggered by llRequestExperiencePermissions when the permission has been granted.
<!-- TODO: add documentation -->
    </description>
  </event>

  <event name="experience_permissions_denied" grid="sl" version="sl:14.07.18.292162">
    <param type="key"     name="agent"   />
    <param type="integer" name="reason"  />
    <description lang="en">
Triggered by llRequestExperiencePermissions when the permission has been denied.
    </description>
  </event>

</keywords>
